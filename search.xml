<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>设计模式随笔</title>
      <link href="posts/8a28ac1c/"/>
      <url>posts/8a28ac1c/</url>
      
        <content type="html"><![CDATA[<h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="设计模式的目的"><a href="#设计模式的目的" class="headerlink" title="设计模式的目的"></a>设计模式的目的</h2><h2 id="设计模式的七大原则（要有印象）"><a href="#设计模式的七大原则（要有印象）" class="headerlink" title="设计模式的七大原则（要有印象）"></a>设计模式的七大原则（要有印象）</h2><p>1.开闭原则：用抽象构建架构，用实现扩展细节</p><p>2.依赖倒置原则：高层模块不应该依赖于底层模块，二者都应该依赖其抽象</p><p>3.单一职责原则：单个接口或类不应该有多个职责，应该尽可能的划分职责，通过组合的方式，完成更为复杂的业务</p><p>4.接口隔离原则：一个接口不要包含过多的职责，应合理划分，跟单一职责原则相辅相成</p><p> 典型场景：动物、人、鸟，人和鸟都会吃，人会走路，鸟会飞，应该把走路和飞这两个行为抽象成接口，通过组合的方式让人拥有走路的行为，让鸟拥有飞的行为。再细划分，人有多个走路姿势，鸟有多个飞行方式，可以分别继承走路和飞的抽象行为扩展其具体的行为<br>5.迪米特法则：也就最少知道原则，一个对象尽量让其它对象保持最少的了解</p><p> 典型场景：我点外卖，我只关心外卖员，不关系具体的店。我的类中只依赖外卖员，不会依赖具体的店。是不是静态代理。<br>6.里氏替换原则：在引用父类的地方，都可以替换为其子类。从而可以实现子类间的动态切换。换句话说就是要有面向接口的编程思维。结合“开闭原则”，完美</p><p>7.合成复用原则：多用组合，少用继承</p><h2 id="单一职责原则"><a href="#单一职责原则" class="headerlink" title="单一职责原则"></a>单一职责原则</h2><p>解释：</p><p>在面对对象编程中，每个对象只负责自己的任务，比如该提供数据的就只是提供数据，该负责提供服务的就只提供服务，或者只是维护对象之间的关系，这样的开发方式代码耦合度较低，较灵活，易扩展。</p><p><a href="https://blog.csdn.net/zhengzhb/article/details/7278174" target="_blank" rel="noopener">https://blog.csdn.net/zhengzhb/article/details/7278174</a></p><h2 id="接口隔离原则"><a href="#接口隔离原则" class="headerlink" title="接口隔离原则"></a>接口隔离原则</h2><p>基本介绍</p><p>一个类通过接口去依赖另一个类，依赖应该建立在最小的接口下</p><p><a href="https://blog.csdn.net/king123456man/article/details/81626059" target="_blank" rel="noopener">https://blog.csdn.net/king123456man/article/details/81626059</a></p><p><a href="https://www.cnblogs.com/alunchen/p/7115675.html" target="_blank" rel="noopener">https://www.cnblogs.com/alunchen/p/7115675.html</a></p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><img src="/posts/8a28ac1c/image-20211105085952883.png" alt="image-20211105085952883" style="zoom:80%;"><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author: suny * @Date: 2021/11/04 下午6:56 * @Description: */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Segregation1</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//接口 默认权限的修饰符是public</span><span class="token keyword">interface</span> <span class="token class-name">Interface1</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">operation1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">operation2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">operation3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">operation4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">operation5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//类B</span><span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">implements</span> <span class="token class-name">Interface1</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//类D</span><span class="token keyword">class</span> <span class="token class-name">D</span> <span class="token keyword">implements</span> <span class="token class-name">Interface1</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// A类通过接口Interface1 依赖（使用） B类，但是只会用到1，2，3方法</span><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">depend1</span><span class="token punctuation">(</span>Interface1 i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">depend2</span><span class="token punctuation">(</span>Interface1 i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">depend3</span><span class="token punctuation">(</span>Interface1 i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// A类通过接口Interface1 依赖（使用） B类，但是只会用到1，4，5方法</span><span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">depend1</span><span class="token punctuation">(</span>Interface1 i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">depend2</span><span class="token punctuation">(</span>Interface1 i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">depend3</span><span class="token punctuation">(</span>Interface1 i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改进</p><img src="/posts/8a28ac1c/image-20211105090724246.png" alt="image-20211105090724246" style="zoom:80%;"><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author: suny * @Date: 2021/11/04 下午6:56 * @Description: 接口隔离原则 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Segregation1Better</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> InterruptedException <span class="token punctuation">{</span>        A1 a1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//A1类通过接口去依赖（使用）B1类</span>        a1<span class="token punctuation">.</span><span class="token function">depend1</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">B1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a1<span class="token punctuation">.</span><span class="token function">depend2</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">B1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a1<span class="token punctuation">.</span><span class="token function">depend3</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">B1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"****************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        C1 c1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">C1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//C1类通过接口去依赖（使用）D类</span>        c1<span class="token punctuation">.</span><span class="token function">depend1</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">D1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c1<span class="token punctuation">.</span><span class="token function">depend2</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">D1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c1<span class="token punctuation">.</span><span class="token function">depend3</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">D1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//接口 默认权限的修饰符是public</span><span class="token keyword">interface</span> <span class="token class-name">Interface01</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">operation1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">interface</span> <span class="token class-name">Interface02</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">operation2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">operation3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">interface</span> <span class="token class-name">Interface03</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">operation4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">operation5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">B1</span> <span class="token keyword">implements</span> <span class="token class-name">Interface01</span><span class="token punctuation">,</span>Interface02 <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B实习了操作3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">D1</span> <span class="token keyword">implements</span> <span class="token class-name">Interface01</span><span class="token punctuation">,</span>Interface03 <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"D实习了操作1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"D实习了操作4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"D实习了操作5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">A1</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">depend1</span><span class="token punctuation">(</span>Interface01 i<span class="token punctuation">)</span><span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">void</span> <span class="token function">depend2</span><span class="token punctuation">(</span>Interface02 i<span class="token punctuation">)</span><span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">void</span> <span class="token function">depend3</span><span class="token punctuation">(</span>Interface02 i<span class="token punctuation">)</span><span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">C1</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">depend1</span><span class="token punctuation">(</span>Interface01 i<span class="token punctuation">)</span><span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">void</span> <span class="token function">depend2</span><span class="token punctuation">(</span>Interface03 i<span class="token punctuation">)</span><span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">void</span> <span class="token function">depend3</span><span class="token punctuation">(</span>Interface03 i<span class="token punctuation">)</span><span class="token punctuation">{</span>        i<span class="token punctuation">.</span><span class="token function">operation5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖倒转原则"><a href="#依赖倒转原则" class="headerlink" title="依赖倒转原则"></a>依赖倒转原则</h2><p><a href="https://blog.csdn.net/king123456man/article/details/81626127" target="_blank" rel="noopener">https://blog.csdn.net/king123456man/article/details/81626127</a></p><p><a href="https://www.cnblogs.com/rmxd/p/12539269.html" target="_blank" rel="noopener">https://www.cnblogs.com/rmxd/p/12539269.html</a></p><p>例子</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/** * @Author: suny * @Date: 2021/11/04 下午8:38 * @Description: */</span><span class="token keyword">public</span> class DependecyInversion {    <span class="token keyword">public</span> static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> {        Person person <span class="token operator">=</span> new Person<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        person<span class="token punctuation">.</span>receive<span class="token punctuation">(</span>new Email<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    }}class Email {    <span class="token keyword">public</span> String getInfo<span class="token punctuation">(</span><span class="token punctuation">)</span> {        <span class="token keyword">return</span> <span class="token string">"电子邮件信息：hello world！"</span><span class="token punctuation">;</span>    }}<span class="token comment" spellcheck="true">//完成Person接受消息的功能</span><span class="token comment" spellcheck="true">//方式 1</span><span class="token comment" spellcheck="true">// 1.简单，容易</span><span class="token comment" spellcheck="true">// 2 如果我们获取的对象是微信，短信， 增新增类，Person类要增加接受方法</span><span class="token comment" spellcheck="true">// 3 解决思路： 引入一个抽象的接口 IReveiver，表示接受者，这样Person类和接口发生依赖</span><span class="token comment" spellcheck="true">//  因为Email，WeiXin 等 都是接受范围，他们各自实习IReveiver接口就可以，这样就实现类符号依赖倒置原则</span>class Person {    <span class="token keyword">public</span> void receive<span class="token punctuation">(</span>Email email<span class="token punctuation">)</span> {        System<span class="token punctuation">.</span><span class="token keyword">out</span><span class="token punctuation">.</span>println<span class="token punctuation">(</span>email<span class="token punctuation">.</span>getInfo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改进</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>inversion<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Author: suny * @Date: 2021/11/04 下午8:38 * @Description: */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DependecyInversionBetter</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//=客户端不需要改变</span>        Person2 person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        person<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Email2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        person<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WeiXin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//定义一个接口</span><span class="token keyword">interface</span> <span class="token class-name">IReceiver</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> String <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Email2</span> <span class="token keyword">implements</span> <span class="token class-name">IReceiver</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> String <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"电子邮件信息：hello world！"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">WeiXin</span> <span class="token keyword">implements</span> <span class="token class-name">IReceiver</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"微信信息：Hi WeiXin！"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Person2</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receive</span><span class="token punctuation">(</span>IReceiver receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>receiver<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>依赖关系的传递3种：</p><p>接口传递依赖、构造方法、setter方法</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> jdk<span class="token punctuation">.</span>nashorn<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span>regexp<span class="token punctuation">.</span>joni<span class="token punctuation">.</span>constants<span class="token punctuation">.</span>OPCode<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Author: suny * @Date: 2021/11/04 下午9:18 * @Description: 依赖的传递方式 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cdfs</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//接口依赖传递</span>        AppleTV appleTV <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppleTV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        OpenAndClose openAndClose <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OpenAndClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        openAndClose<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>appleTV<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//构造器进行依赖传递  常用</span>        OpenAndClose2 openAndClose2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OpenAndClose2</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XiaoMiTV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        openAndClose2<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//setter方法依赖传递  常用</span>        OpenAndClose3 openAndClose3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OpenAndClose3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        openAndClose3<span class="token punctuation">.</span><span class="token function">setTv</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HuaWeiTV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        openAndClose3<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 方式1 通过接口实现依赖传递</span><span class="token comment" spellcheck="true">//开关的接口</span><span class="token keyword">interface</span> <span class="token class-name">IOpenAndCLose</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">open</span><span class="token punctuation">(</span>ITV tv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ITV接口</span><span class="token keyword">interface</span> <span class="token class-name">ITV</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">AppleTV</span> <span class="token keyword">implements</span> <span class="token class-name">ITV</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"打开苹果TV"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//接口的实现</span><span class="token keyword">class</span> <span class="token class-name">OpenAndClose</span> <span class="token keyword">implements</span> <span class="token class-name">IOpenAndCLose</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">open</span><span class="token punctuation">(</span>ITV tv<span class="token punctuation">)</span> <span class="token punctuation">{</span>        tv<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//方式2 通过构造方法实现依赖传递</span><span class="token keyword">interface</span> <span class="token class-name">IOpenAndCLose2</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ITV接口</span><span class="token keyword">interface</span> <span class="token class-name">ITV2</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">XiaoMiTV</span> <span class="token keyword">implements</span> <span class="token class-name">ITV2</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"打开小米TV"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//接口的实现</span><span class="token keyword">class</span> <span class="token class-name">OpenAndClose2</span> <span class="token keyword">implements</span> <span class="token class-name">IOpenAndCLose2</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> ITV2 itv2<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">OpenAndClose2</span><span class="token punctuation">(</span>ITV2 itv2<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>itv2 <span class="token operator">=</span> itv2<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        itv2<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 方式3 通过setter方法</span><span class="token keyword">interface</span> <span class="token class-name">IOpenAndCLose3</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTv</span><span class="token punctuation">(</span>ITV3 itv3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ITV接口</span><span class="token keyword">interface</span> <span class="token class-name">ITV3</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">HuaWeiTV</span> <span class="token keyword">implements</span> <span class="token class-name">ITV3</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"打开华为TV"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//接口的实现</span><span class="token keyword">class</span> <span class="token class-name">OpenAndClose3</span> <span class="token keyword">implements</span> <span class="token class-name">IOpenAndCLose3</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> ITV3 itv3<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTv</span><span class="token punctuation">(</span>ITV3 itv3<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>itv3 <span class="token operator">=</span> itv3<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>itv3<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="里氏替换原则"><a href="#里氏替换原则" class="headerlink" title="里氏替换原则"></a>里氏替换原则</h2><p>原则：</p><p>用子类替换父类，对之前用父类的地方没有影响</p><p>子类尽量不要重写父类方法</p><p>原来的父类和子类都继承一个更通俗的父类，原有的继承关系去掉，采用依赖，聚合，组合的关系代替。</p><p><a href="https://blog.csdn.net/zhengzhb/article/details/7281833" target="_blank" rel="noopener">https://blog.csdn.net/zhengzhb/article/details/7281833</a></p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>区县上报登记簿省厅异常处理方案</title>
      <link href="posts/4b3b4cc0/"/>
      <url>posts/4b3b4cc0/</url>
      
        <content type="html"><![CDATA[<h1 id="区县上报登记簿省厅异常处理方案"><a href="#区县上报登记簿省厅异常处理方案" class="headerlink" title="区县上报登记簿省厅异常处理方案"></a>区县上报登记簿省厅异常处理方案</h1><h2 id="以温州市本级地区为例"><a href="#以温州市本级地区为例" class="headerlink" title="以温州市本级地区为例"></a>以温州市本级地区为例</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>执行语句的时候，注意修改成正确的时间</p><pre class="line-numbers language-sql"><code class="language-sql">to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021-01-01'</span> to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021-01'</span> to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h3><p>先查询总体的量的情况：</p><p>总登簿量    登簿成功量    登簿失败量    未登簿量    推送省厅成功量    推送省厅失败量    未推送省厅量</p><p>在pl/sql执行以下sql语句</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 总登簿量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>t<span class="token punctuation">.</span>isdbcg<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 登簿成功量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>t<span class="token punctuation">.</span>isdbcg<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">as</span>  登簿失败量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>t<span class="token punctuation">.</span>isdbcg<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 未登簿量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>iscg<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">as</span>   推送省厅成功量   <span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>iscg<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span>  推送省厅失败量   <span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>iscg<span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span>  未推送省厅量      <span class="token keyword">from</span>   <span class="token punctuation">(</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>bsm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>ywh<span class="token punctuation">,</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qszt<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbsm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>djlx<span class="token punctuation">,</span>t<span class="token punctuation">.</span>lcdm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>slsj<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qxdm <span class="token keyword">from</span> bdcdj<span class="token punctuation">.</span>sh t   <span class="token keyword">where</span>  t<span class="token punctuation">.</span>dbsj  <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span>  t<span class="token punctuation">.</span>qszt <span class="token operator">is</span> <span class="token operator">not</span>  <span class="token boolean">null</span>   <span class="token operator">and</span>    to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021-10-01'</span> <span class="token operator">and</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token string">'2021-10-19'</span><span class="token operator">and</span>  t<span class="token punctuation">.</span>dbsj   <span class="token operator">is</span>   <span class="token operator">not</span>   <span class="token boolean">null</span><span class="token keyword">union</span> <span class="token keyword">all</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>bsm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>ywh<span class="token punctuation">,</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qszt<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbsm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>djlx<span class="token punctuation">,</span>t<span class="token punctuation">.</span>lcdm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>slsj<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qxdm<span class="token keyword">from</span> bdcdj<span class="token punctuation">.</span>sh_ls t <span class="token keyword">where</span> t<span class="token punctuation">.</span>dbsj <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token comment" spellcheck="true">--and t.qszt is not null</span><span class="token operator">and</span>    to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021-10-01'</span> <span class="token operator">and</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token string">'2021-10-19'</span><span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">)</span>sh<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span>XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span> XMLDB<span class="token punctuation">.</span>t_sb_result s <span class="token keyword">where</span>      to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021-10-01'</span> <span class="token operator">and</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token string">'2021-10-19'</span><span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>s<span class="token punctuation">.</span>djshbsm<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> receiverbsm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span>XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span>XMLDB<span class="token punctuation">.</span>t_sb_result s <span class="token keyword">where</span>   to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021-10-01'</span> <span class="token operator">and</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token string">'2021-10-19'</span><span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>s<span class="token punctuation">.</span>djshbsm<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> receiverbsm<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> s<span class="token comment" spellcheck="true">--and t.dbsj is notnull</span><span class="token keyword">where</span> sh<span class="token punctuation">.</span>ywh<span class="token operator">=</span>T<span class="token punctuation">.</span>YWH<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> sh<span class="token punctuation">.</span>qlbsm<span class="token operator">=</span>t<span class="token punctuation">.</span>qlbsm<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">and</span> sh<span class="token punctuation">.</span>ywh<span class="token operator">=</span>s<span class="token punctuation">.</span>ywh<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> sh<span class="token punctuation">.</span>qlbsm<span class="token operator">=</span>s<span class="token punctuation">.</span>qlbsm<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>备注：t_sb_dbxx的信息来源于登记库的sh表</p><p>以下sql语句无效，零时查询使用，不用看</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--  不用看 ywh：20210804-0180651  qlbsm 3254538452  FDCQ   </span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> bdcdj<span class="token punctuation">.</span>v_all_sh <span class="token keyword">where</span> ywh<span class="token operator">=</span><span class="token string">'20210906-0209275'</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> bdcdjb<span class="token punctuation">.</span>sh <span class="token keyword">where</span> ywh<span class="token operator">=</span><span class="token string">'20210906-0209275'</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_dbxx <span class="token keyword">where</span> ywh<span class="token operator">=</span><span class="token string">'20210906-0209275'</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> bdcdj<span class="token punctuation">.</span>fdcq <span class="token keyword">where</span> bsm<span class="token operator">=</span><span class="token number">3254538452</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_result <span class="token keyword">where</span> djshbsm<span class="token operator">=</span><span class="token number">3257570183</span> <span class="token comment" spellcheck="true">--35109285  35148008</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>log_exception <span class="token keyword">where</span> bsm<span class="token operator">=</span><span class="token number">35109285</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>log_exception <span class="token keyword">where</span> bsm<span class="token operator">=</span><span class="token number">35148008</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h3><p>查询推送<code>登记簿</code>失败原因的明细和数量</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询推送登记簿失败原因的明细（维度1  xmldb.t_db_queue)</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>ywh <span class="token keyword">as</span> 业务号 <span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbsm 权利标识码<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbm 权利表名<span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'YYYY-MM.DD'</span><span class="token punctuation">)</span> 登簿时间 <span class="token punctuation">,</span>t<span class="token punctuation">.</span>qxdm 区县代码 <span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>substr<span class="token punctuation">(</span>le<span class="token punctuation">.</span>loginfo<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3800</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 异常描述，logtype <span class="token keyword">as</span> 异常类型<span class="token punctuation">,</span><span class="token string">'记载登记簿失败'</span> <span class="token keyword">as</span> 失败类型<span class="token keyword">from</span> XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_db_queue R<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>LOG_EXCEPTION le <span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2021-09-09'</span> <span class="token comment" spellcheck="true">/*and  to_char(t.dbsj,'yyyy-mm-dd') &lt;= '2021-08-31'*/</span><span class="token operator">and</span> t<span class="token punctuation">.</span>isdbcg<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>R<span class="token punctuation">.</span>djshbsm <span class="token operator">AND</span> R<span class="token punctuation">.</span>LOGECPBSM<span class="token operator">=</span>LE<span class="token punctuation">.</span>BSM<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> r<span class="token punctuation">.</span>receiverbsm<span class="token operator">=</span><span class="token number">1</span><span class="token comment" spellcheck="true">-- 查询推送登记簿失败原因的明细（维度2  xmldb.t_sb_result)</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>ywh <span class="token keyword">as</span> 业务号 <span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbsm 权利标识码<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbm 权利表名<span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'YYYY-MM.DD'</span><span class="token punctuation">)</span> 登簿时间 <span class="token punctuation">,</span>t<span class="token punctuation">.</span>qxdm 区县代码 <span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>substr<span class="token punctuation">(</span>le<span class="token punctuation">.</span>loginfo<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3800</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 异常描述，logtype <span class="token keyword">as</span> 异常类型<span class="token punctuation">,</span><span class="token string">'记载登记簿失败'</span> <span class="token keyword">as</span> 失败类型，<span class="token string">'详情'</span> 详情<span class="token keyword">from</span> XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_sb_result R<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>LOG_EXCEPTION le <span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021-01-01'</span> <span class="token operator">and</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token string">'2021-08-31'</span><span class="token operator">and</span> isdbcg<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>R<span class="token punctuation">.</span>djshbsm <span class="token operator">AND</span> R<span class="token punctuation">.</span>LOGECPBSM<span class="token operator">=</span>LE<span class="token punctuation">.</span>BSM<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> receiverbsm<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询推送登记簿失败原因的数量(维度3  xmldb.t_sb_result) ✅</span><span class="token keyword">select</span> count（<span class="token operator">*</span>） <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_dbxx x <span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_sb_result r<span class="token keyword">where</span> r<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>djshbsm <span class="token operator">and</span> to_char<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2021-09-01'</span>  <span class="token operator">and</span> r<span class="token punctuation">.</span>receiverbsm<span class="token operator">=</span><span class="token number">1</span><span class="token operator">and</span> x<span class="token punctuation">.</span>isdbcg<span class="token operator">=</span><span class="token number">0</span><span class="token comment" spellcheck="true">-- 查询推送登记簿失败原因的数量(维度1  xmldb.t_db_queue)</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">from</span> XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_db_queue R<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>LOG_EXCEPTION le <span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2021-09-09'</span> <span class="token comment" spellcheck="true">/*and  to_char(t.dbsj,'yyyy-mm-dd') &lt;= '2021-08-31'*/</span><span class="token operator">and</span> t<span class="token punctuation">.</span>isdbcg<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>R<span class="token punctuation">.</span>djshbsm <span class="token operator">AND</span> R<span class="token punctuation">.</span>LOGECPBSM<span class="token operator">=</span>LE<span class="token punctuation">.</span>BSM<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> r<span class="token punctuation">.</span>receiverbsm<span class="token operator">=</span><span class="token number">1</span><span class="token comment" spellcheck="true">-- 查询推送登记簿失败原因的数量(维度2  xmldb.t_sb_result)</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">from</span> XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_sb_result R<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>LOG_EXCEPTION le <span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021-01-01'</span> <span class="token operator">and</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token string">'2021-08-31'</span><span class="token operator">and</span> isdbcg<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>R<span class="token punctuation">.</span>djshbsm <span class="token operator">AND</span> R<span class="token punctuation">.</span>LOGECPBSM<span class="token operator">=</span>LE<span class="token punctuation">.</span>BSM<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> receiverbsm<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 未推送登记簿的数量</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> x<span class="token punctuation">.</span>ywh<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qlbsm <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_dbxx x   <span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2021-09-09'</span> <span class="token comment" spellcheck="true">/*and  to_char(x.dbsj,'yyyy-mm-dd') &lt;= '2021-08-31'*/</span><span class="token operator">and</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> bdcdjb<span class="token punctuation">.</span>sh s <span class="token keyword">where</span> s<span class="token punctuation">.</span>ywh<span class="token operator">=</span>x<span class="token punctuation">.</span>ywh <span class="token punctuation">)</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>qszt<span class="token operator">></span><span class="token string">'0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>查看推送<code>省厅</code>失败的原因和明细和数量</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查看推送省厅失败的原因和明细和数量</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>ywh <span class="token keyword">as</span> 业务号 <span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbsm 权利标识码<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbm 权利表名<span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'YYYY-MM.DD'</span><span class="token punctuation">)</span> 登簿时间<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>substr<span class="token punctuation">(</span>le<span class="token punctuation">.</span>loginfo<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3800</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 异常描述<span class="token punctuation">,</span>logtype <span class="token keyword">as</span> 异常类型<span class="token punctuation">,</span><span class="token string">'推送省厅失败'</span> <span class="token keyword">as</span> 失败类型<span class="token keyword">from</span> XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_sb_result R<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>LOG_EXCEPTION le<span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021-01-01'</span> <span class="token operator">and</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token string">'2021-08-31'</span><span class="token operator">and</span> iscg<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>R<span class="token punctuation">.</span>djshbsm <span class="token operator">AND</span> R<span class="token punctuation">.</span>LOGECPBSM<span class="token operator">=</span>LE<span class="token punctuation">.</span>BSM<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> receiverbsm<span class="token operator">=</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查看推送省厅成功的量和失败的量</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">from</span> XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_sb_result R<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>LOG_EXCEPTION le <span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021-01-01'</span> <span class="token operator">and</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token string">'2021-08-31'</span><span class="token operator">and</span> isdbcg<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>R<span class="token punctuation">.</span>djshbsm <span class="token operator">AND</span> R<span class="token punctuation">.</span>LOGECPBSM<span class="token operator">=</span>LE<span class="token punctuation">.</span>BSM<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> receiverbsm<span class="token operator">=</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>iscg=2的是成功的量、iscg=0是失败的量</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 推送省厅失败的量 </span><span class="token keyword">select</span>  <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_dbxx x <span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_sb_result r<span class="token keyword">where</span> x<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>r<span class="token punctuation">.</span>djshbsm <span class="token operator">and</span>  to_char<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2021-09-01'</span> <span class="token comment" spellcheck="true">/*and  to_char(x.dbsj,'yyyy-mm-dd') &lt;= '2021-09-08'*/</span> <span class="token operator">and</span> r<span class="token punctuation">.</span>receiverbsm<span class="token operator">=</span><span class="token number">2</span><span class="token operator">and</span> r<span class="token punctuation">.</span>iscg<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h3><p>使用不动产的上报工具使用消息队列模式，批量发生队列，进行重新推送登记簿</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 推送登记簿失败的</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_dbxx x  <span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2021-09-01'</span> <span class="token operator">and</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_result r <span class="token keyword">where</span> r<span class="token punctuation">.</span>receiverbsm<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> r<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>djshbsm<span class="token punctuation">)</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>qszt<span class="token operator">></span><span class="token string">'0'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 未推送省厅的</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_dbxx x  <span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2021-09-01'</span> <span class="token operator">and</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_result r <span class="token keyword">where</span> r<span class="token punctuation">.</span>receiverbsm<span class="token operator">=</span><span class="token number">2</span> <span class="token operator">and</span> r<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>djshbsm<span class="token punctuation">)</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>qszt<span class="token operator">></span><span class="token string">'0'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="步骤四"><a href="#步骤四" class="headerlink" title="步骤四"></a>步骤四</h3><p>执行完步骤三后，执行步骤一，查看登簿成功量是否在增加，等待一段时间，发现步骤一查询的数量不再变化，执行步骤二，将推送登记簿，推送省厅失败的明细查询出并导出csv文件请规范命名，如：（温州20210101-2021-0132推送登记簿失败明细）（温州20210101-2021-0132推送省厅失败明细）</p><h3 id="附记"><a href="#附记" class="headerlink" title="附记"></a>附记</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 登簿失败的，可以找几条看失败的原因</span><span class="token comment" spellcheck="true">-- 未生成 ：计数标识：【1-1】；包文件信息：【YJ_RCU_0321090301129】-【9405】-【YGDJ】-【3257546025】-【330304】-【1】-【1】；</span><span class="token comment" spellcheck="true">-- 包数据源校验结果：数据源[ZDJBXX]表存在不动产单元号(BDCDYH)为空的记录。</span><span class="token keyword">select</span> <span class="token number">e</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span>  xmldb<span class="token punctuation">.</span>t_db_queue t <span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>log_exception <span class="token number">e</span> <span class="token keyword">where</span> t<span class="token punctuation">.</span>logecpbsm<span class="token operator">=</span><span class="token number">e</span><span class="token punctuation">.</span>bsm <span class="token operator">and</span> to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>qqtsdbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'2021-09-09'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>ywh<span class="token operator">=</span><span class="token string">'YJ_RCU_0321090301129'</span><span class="token keyword">select</span> h<span class="token punctuation">.</span>bdcdyh<span class="token punctuation">,</span>h<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> bdcdj<span class="token punctuation">.</span>ygdj_dygx gx<span class="token punctuation">,</span>bdcdj<span class="token punctuation">.</span>h h <span class="token keyword">where</span> gx<span class="token punctuation">.</span>ywh<span class="token operator">=</span><span class="token string">'YJ_RCU_0321090301129'</span> <span class="token operator">and</span> h<span class="token punctuation">.</span>bsm<span class="token operator">=</span>gx<span class="token punctuation">.</span>dybsm <span class="token operator">and</span> h<span class="token punctuation">.</span>bbh<span class="token operator">=</span>gx<span class="token punctuation">.</span>bbh<span class="token keyword">select</span> <span class="token operator">*</span>  <span class="token keyword">from</span>  bdcdj<span class="token punctuation">.</span>zd_shiyq <span class="token keyword">where</span> bsm<span class="token operator">=</span> <span class="token number">20210906</span><span class="token operator">-</span><span class="token number">0209251</span><span class="token keyword">select</span> <span class="token number">e</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span>  xmldb<span class="token punctuation">.</span>t_db_queue t <span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>log_exception <span class="token number">e</span> <span class="token keyword">where</span> t<span class="token punctuation">.</span>logecpbsm<span class="token operator">=</span><span class="token number">e</span><span class="token punctuation">.</span>bsm <span class="token operator">and</span> to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>qqtsdbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'2021-09-09'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>ywh<span class="token operator">=</span><span class="token string">'20210904-9036784'</span><span class="token comment" spellcheck="true">-- 查看押队队列后处理状态</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_db_queue q <span class="token keyword">where</span> q<span class="token punctuation">.</span>receiverbsm<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> q<span class="token punctuation">.</span>mqzt<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> to_char<span class="token punctuation">(</span>q<span class="token punctuation">.</span>qqtsdbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'2021-09-09'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>省厅bi</title>
      <link href="posts/785aa831/"/>
      <url>posts/785aa831/</url>
      
        <content type="html"><![CDATA[<h1 id="省厅查询量"><a href="#省厅查询量" class="headerlink" title="省厅查询量"></a>省厅查询量</h1><h2 id="1-业务量"><a href="#1-业务量" class="headerlink" title="1 业务量"></a>1 业务量</h2><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 业务量</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 业务量 <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_sb_dbl l <span class="token keyword">where</span> l<span class="token punctuation">.</span>qxdm <span class="token operator">like</span> <span class="token string">'3302%'</span><span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">=</span><span class="token string">'2021-09-04'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-配号量"><a href="#2-配号量" class="headerlink" title="2 配号量"></a>2 配号量</h2><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 配号量 </span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 配号量  <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>bdcdjbh l <span class="token keyword">where</span> l<span class="token punctuation">.</span>xzqbm <span class="token operator">like</span> <span class="token string">'3301%'</span><span class="token operator">and</span> l<span class="token punctuation">.</span>gxsj<span class="token operator">=</span><span class="token string">'2021-09-09'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-报省量"><a href="#3-报省量" class="headerlink" title="3 报省量"></a>3 报省量</h2><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 报省量 <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_sb_dbl l <span class="token keyword">where</span> l<span class="token punctuation">.</span>logbsm <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token operator">and</span> l<span class="token punctuation">.</span>logbsm<span class="token operator">></span><span class="token number">0</span> <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">=</span><span class="token string">'2021-09-04'</span> <span class="token operator">and</span> tszt<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> l<span class="token punctuation">.</span>qxdm <span class="token operator">like</span> <span class="token string">'3302%'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4-报部量"><a href="#4-报部量" class="headerlink" title="4 报部量"></a>4 报部量</h2><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 报部量</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 报部量 <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_sb_dbl l <span class="token keyword">where</span> l<span class="token punctuation">.</span>bbzt<span class="token operator">=</span><span class="token number">6</span> <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">=</span><span class="token string">'2021-09-04'</span> <span class="token operator">and</span> l<span class="token punctuation">.</span>qxdm <span class="token operator">like</span> <span class="token string">'3302%'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5-解析量"><a href="#5-解析量" class="headerlink" title="5 解析量"></a>5 解析量</h2><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 解析量</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span>  解析量 <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_sb_dbl l <span class="token keyword">where</span> l<span class="token punctuation">.</span>qxdm <span class="token operator">like</span> <span class="token string">'3302%'</span><span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">=</span><span class="token string">'2021-09-04'</span> <span class="token operator">and</span> jxzt<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="6-索引上报量"><a href="#6-索引上报量" class="headerlink" title="6 索引上报量"></a>6 索引上报量</h2><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_ywxx l <span class="token keyword">where</span> l<span class="token punctuation">.</span>qxdm <span class="token operator">like</span> <span class="token string">'3302%'</span><span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">=</span><span class="token string">'2021-09-04'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>省厅内网上报部里问题处理</title>
      <link href="posts/3d03c70/"/>
      <url>posts/3d03c70/</url>
      
        <content type="html"><![CDATA[<h1 id="省厅内网上报部里问题处理"><a href="#省厅内网上报部里问题处理" class="headerlink" title="省厅内网上报部里问题处理"></a>省厅内网上报部里问题处理</h1><h2 id="1-上报过程问题排查分析"><a href="#1-上报过程问题排查分析" class="headerlink" title="1.上报过程问题排查分析"></a>1.上报过程问题排查分析</h2><p>一般都是上报状态为5和上报状态为7的都属于上报部里失败的</p><h2 id="步骤一："><a href="#步骤一：" class="headerlink" title="步骤一："></a>步骤一：</h2><p>先按区县(11个）分组查找对应sbzt的量（总体的看下上报情况）</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>l<span class="token punctuation">.</span>sbzt<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_bwsb_xml x <span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_bwsb_log l<span class="token keyword">where</span> x<span class="token punctuation">.</span>bsm<span class="token operator">=</span>l<span class="token punctuation">.</span>xmlbsm <span class="token operator">and</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01'</span> <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07'</span><span class="token keyword">group</span> <span class="token keyword">by</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>l<span class="token punctuation">.</span>sbzt<span class="token keyword">order</span> <span class="token keyword">by</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>l<span class="token punctuation">.</span>sbzt<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="上报状态分析："><a href="#上报状态分析：" class="headerlink" title="上报状态分析："></a>上报状态分析：</h3><p><code>sbzt=1</code>是需要上报的状态，上报程序开启后，会查找处sbzt=1的，立马将这些查找需要需要上报的状态设置为2</p><p><code>sbzt=2</code> 是代表已经被选中，是要上报到部里的数据，等待上报（如果上报服务中途人工停了，而被选中上报的数据还没上报完，那些没上报的数据包，就会标记为2状态，需要人工的处理这部分数据，特别注意：处理的过程要先把上报的服务停掉，将那些状态为2的状态查找出来，更新状态为1，将会重新上报）</p><p>为什么处理上报状态为2的数据前要停止上报服务？</p><p>因为你上报的服务开着，就会存在动态大量上报状态为2的数据包，这样的查找更新操作是不准确的，但是如果你指定的查找日期是处理上报服务之前的数据可以不用关服务。</p><p><code>sbzt=3</code> 一般不存在这种数据</p><p><code>sbzt=4</code> 上报成功（一般也是中间状态，成功了会变6状态，失败了会变7状态）</p><p><code>sbzt=5</code>上报失败</p><p><code>sbzt=6</code> 响应成功（代表真正的上报到部里成功了）</p><p><code>sbzt=7 </code>响应失败 </p><h2 id="步骤二："><a href="#步骤二：" class="headerlink" title="步骤二："></a>步骤二：</h2><p>按11个地区分组统计sbzt=5（上报失败）的数量有多少</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 按11个地区分组统计sbzt=5的数量有多少</span><span class="token keyword">select</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>l<span class="token punctuation">.</span>sbzt<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_bwsb_xml x <span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_bwsb_log l<span class="token keyword">where</span> x<span class="token punctuation">.</span>bsm<span class="token operator">=</span>l<span class="token punctuation">.</span>xmlbsm <span class="token operator">and</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01'</span> <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07'</span><span class="token operator">and</span> l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">5</span><span class="token keyword">group</span> <span class="token keyword">by</span>  substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将整个11地区的上报状态为5的数据更新为1，尝试重新上报</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 将整个11地区的上报状态为5的数据更新为1，尝试重新上报</span>pdate t_bwsb_log l<span class="token keyword">set</span> l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">1</span><span class="token keyword">where</span>l<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01'</span> <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07'</span>  <span class="token operator">and</span> l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>按11个地区分组统计sbzt=7(响应失败）的数量有多少</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 按11个地区分组统计sbzt=5的数量有多少</span><span class="token keyword">select</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>l<span class="token punctuation">.</span>sbzt<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_bwsb_xml x <span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_bwsb_log l<span class="token keyword">where</span> x<span class="token punctuation">.</span>bsm<span class="token operator">=</span>l<span class="token punctuation">.</span>xmlbsm <span class="token operator">and</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01'</span> <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07'</span><span class="token operator">and</span> l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">7</span><span class="token keyword">group</span> <span class="token keyword">by</span>  substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将整个11地区的上报状态为7的数据更新为1，尝试重新上报</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 将整个11地区的上报状态为7的数据更新为1，尝试重新上报</span>pdate t_bwsb_log l<span class="token keyword">set</span> l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">1</span><span class="token keyword">where</span>l<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01'</span> <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07'</span>  <span class="token operator">and</span> l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="步骤三："><a href="#步骤三：" class="headerlink" title="步骤三："></a>步骤三：</h2><p>步骤二执行完后，隔一段时间执行步骤一，查看量上的变化</p><p>或者bi中查看</p><p><a href="https://govbdctj.zjzwfw.gov.cn:7789/gisqBI/view.html?biId=d39b12d5f68d4fb5b0182e6c7c06189a&amp;appId=00000001000100010001000000000001#/" target="_blank" rel="noopener">https://govbdctj.zjzwfw.gov.cn:7789/gisqBI/view.html?biId=d39b12d5f68d4fb5b0182e6c7c06189a&amp;appId=00000001000100010001000000000001#/</a></p><h2 id="2-解析步骤问题排查分析"><a href="#2-解析步骤问题排查分析" class="headerlink" title="2.解析步骤问题排查分析"></a>2.解析步骤问题排查分析</h2><p>解析步骤出问题了</p><h2 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h2><p>先统计数量</p><p>备注：jxzt=0 未解析，1解析成功，2解析失败，3暂不解析 4 校验失败</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 先统计数量</span><span class="token keyword">select</span> x<span class="token punctuation">.</span>jxzt <span class="token keyword">as</span> 解析状态<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 总量 <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_jx_xml x <span class="token keyword">where</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token string">'3310'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>FWQBM<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span> <span class="token operator">and</span><span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_ywxx t <span class="token keyword">where</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'3310'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>ywh<span class="token operator">=</span>x<span class="token punctuation">.</span>ywh <span class="token operator">and</span> t<span class="token punctuation">.</span>djbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>qlbsm <span class="token operator">and</span> t<span class="token punctuation">.</span>qxdm<span class="token operator">=</span>x<span class="token punctuation">.</span>qxdm <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span>x<span class="token punctuation">.</span>fwqbm <span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span><span class="token punctuation">)</span><span class="token keyword">group</span> <span class="token keyword">by</span> x<span class="token punctuation">.</span>jxzt<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h2><p>查找解析失败原因 重点看jxjg字段</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查找解析失败原因 </span><span class="token keyword">select</span> l<span class="token punctuation">.</span>jxjg<span class="token punctuation">,</span>l<span class="token punctuation">.</span>jxzt<span class="token punctuation">,</span>l<span class="token punctuation">.</span>sfbb<span class="token punctuation">,</span>l<span class="token punctuation">.</span>bbinfo<span class="token punctuation">,</span>l<span class="token punctuation">.</span>czzt<span class="token punctuation">,</span>x<span class="token punctuation">.</span>ywh<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qlbsm <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_jx_xml x<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_jx_log l<span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> l<span class="token punctuation">.</span>xmlbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>bsm <span class="token operator">and</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'3310'</span><span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>jxzt <span class="token operator">in</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">order</span> <span class="token keyword">by</span> x<span class="token punctuation">.</span>jxzt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="一个常见的解析失败问题："><a href="#一个常见的解析失败问题：" class="headerlink" title="一个常见的解析失败问题："></a>一个常见的解析失败问题：</h3><p>查询t_jx_xml要更新的量,这些数据已经接收到数据包，但是索引表未写入数据，</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询t_jx_xml要更新的量,这些数据已经接收到数据包，但是索引表未写入数据</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 解析状态非<span class="token number">0</span>的总量 <span class="token keyword">from</span> t_jx_xml x <span class="token keyword">where</span> x<span class="token punctuation">.</span>jxzt<span class="token operator">&lt;></span><span class="token string">'0'</span> <span class="token operator">and</span>  x<span class="token punctuation">.</span>qxdm<span class="token operator">=</span><span class="token string">'331100'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>FWQBM<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> <span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> t_ywxx t <span class="token keyword">where</span> t<span class="token punctuation">.</span>qxdm<span class="token operator">=</span><span class="token string">'331100'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>ywh<span class="token operator">=</span>x<span class="token punctuation">.</span>ywh <span class="token operator">and</span> t<span class="token punctuation">.</span>djbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>qlbsm <span class="token operator">and</span> t<span class="token punctuation">.</span>qxdm<span class="token operator">=</span>x<span class="token punctuation">.</span>qxdm <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span>x<span class="token punctuation">.</span>fwqbm <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过改变 jxzt=0，使数据包重新解析索引(可以按区县处理)</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 通过改变 jxzt=0，使数据包重新解析索引</span><span class="token keyword">update</span> t_jx_xml<span class="token keyword">set</span> jxzt<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">where</span>  jxzt<span class="token operator">&lt;></span><span class="token string">'0'</span> <span class="token operator">and</span>  qxdm <span class="token operator">like</span> <span class="token string">'3301%'</span> <span class="token operator">and</span> fwqbm<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> <span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> t_ywxx t <span class="token keyword">where</span> t<span class="token punctuation">.</span>qxdm <span class="token operator">like</span> <span class="token string">'3301%'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>ywh<span class="token operator">=</span>ywh <span class="token operator">and</span> t<span class="token punctuation">.</span>djbsm<span class="token operator">=</span>qlbsm <span class="token operator">and</span> t<span class="token punctuation">.</span>qxdm<span class="token operator">=</span>qxdm <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span>fwqbm <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="另一个尝试方案："><a href="#另一个尝试方案：" class="headerlink" title="另一个尝试方案："></a>另一个尝试方案：</h3><p>将解析状态为2，3，4的更新为0，尝试重新解析</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">update</span> t_jx_xml<span class="token keyword">set</span> jxzt<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">where</span>  jxzt <span class="token operator">in</span><span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">)</span> <span class="token operator">and</span>  qxdm <span class="token operator">like</span> <span class="token string">'3301%'</span> <span class="token operator">and</span> FWQBM<span class="token operator">=</span><span class="token string">'1'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>省厅索引表上报问题处理</title>
      <link href="posts/7d27b27a/"/>
      <url>posts/7d27b27a/</url>
      
        <content type="html"><![CDATA[<h1 id="省厅索引表上报问题处理"><a href="#省厅索引表上报问题处理" class="headerlink" title="省厅索引表上报问题处理"></a>省厅索引表上报问题处理</h1><h2 id="1-类型一数据包已接收，但索引表数据未解析到索引表"><a href="#1-类型一数据包已接收，但索引表数据未解析到索引表" class="headerlink" title="1.类型一数据包已接收，但索引表数据未解析到索引表"></a>1.类型一数据包已接收，但索引表数据未解析到索引表</h2><h2 id="1-1解决方案："><a href="#1-1解决方案：" class="headerlink" title="1.1解决方案："></a>1.1解决方案：</h2><h3 id="前提：保证-39116-端口下-yml-文件中-ywxxInsertIfNotExists-true"><a href="#前提：保证-39116-端口下-yml-文件中-ywxxInsertIfNotExists-true" class="headerlink" title="前提：保证 39116  端口下 yml 文件中   ywxxInsertIfNotExists: true"></a>前提：保证 39116  端口下 yml 文件中   ywxxInsertIfNotExists: true</h3><h3 id="步骤一：查询需要处理的总量"><a href="#步骤一：查询需要处理的总量" class="headerlink" title="步骤一：查询需要处理的总量"></a>步骤一：查询需要处理的总量</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 总量 <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_jx_xml x <span class="token keyword">where</span> x<span class="token punctuation">.</span>jxzt<span class="token operator">&lt;></span><span class="token string">'0'</span> <span class="token operator">and</span>  substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token string">'3301'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>FWQBM<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span> <span class="token operator">and</span><span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_ywxx t <span class="token keyword">where</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'3301'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>ywh<span class="token operator">=</span>x<span class="token punctuation">.</span>ywh <span class="token operator">and</span> t<span class="token punctuation">.</span>djbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>qlbsm <span class="token operator">and</span> t<span class="token punctuation">.</span>qxdm<span class="token operator">=</span>x<span class="token punctuation">.</span>qxdm <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span>x<span class="token punctuation">.</span>fwqbm <span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="步骤二：更新"><a href="#步骤二：更新" class="headerlink" title="步骤二：更新"></a>步骤二：更新</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">update</span> bdcdjjg<span class="token punctuation">.</span>t_jx_xml x<span class="token keyword">set</span> x<span class="token punctuation">.</span>jxzt<span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">where</span>  jxzt<span class="token operator">&lt;></span><span class="token string">'0'</span> <span class="token operator">and</span>  substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token string">'3302'</span> <span class="token operator">and</span> FWQBM<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span><span class="token operator">and</span> <span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_ywxx t <span class="token keyword">where</span> substr<span class="token punctuation">(</span>t<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token string">'3302'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>ywh<span class="token operator">=</span>x<span class="token punctuation">.</span>ywh  <span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span><span class="token operator">and</span> t<span class="token punctuation">.</span>djbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>qlbsm <span class="token operator">and</span> t<span class="token punctuation">.</span>qxdm<span class="token operator">=</span>x<span class="token punctuation">.</span>qxdm <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span>x<span class="token punctuation">.</span>fwqbm <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="步骤三：查索引上报量是不是增加"><a href="#步骤三：查索引上报量是不是增加" class="headerlink" title="步骤三：查索引上报量是不是增加"></a>步骤三：查索引上报量是不是增加</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_ywxx t <span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_jx_xml x<span class="token keyword">where</span> t<span class="token punctuation">.</span>ywh<span class="token operator">=</span>x<span class="token punctuation">.</span>ywh <span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>djbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>qlbsm <span class="token operator">and</span> t<span class="token punctuation">.</span>qxdm<span class="token operator">=</span>x<span class="token punctuation">.</span>qxdm <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span>x<span class="token punctuation">.</span>fwqbm <span class="token operator">and</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token string">'3302'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="步骤四："><a href="#步骤四：" class="headerlink" title="步骤四："></a>步骤四：</h3><p>十一个地区：<code>3301、3302、3303、3304、3305、3306、3307、3308、3309、3310、3311</code></p><p>⚠️注意：每条语句中都有两个地方要改区县代码的地方</p><p><strong>修改查询语句和更新语句中的qxdm’3301’为要处理地区的区县代码</strong></p><p><strong>重复步骤三和步骤四操作</strong></p><p>⚠️：注意查询出来的结果数量和更新的语句影响的行数是相等的</p><h3 id="步骤五："><a href="#步骤五：" class="headerlink" title="步骤五："></a>步骤五：</h3><p><a href="https://govbdctj.zjzwfw.gov.cn:7789/gisqBI/view.html?biId=d39b12d5f68d4fb5b0182e6c7c06189a&amp;appId=00000001000100010001000000000001#/" target="_blank" rel="noopener">https://govbdctj.zjzwfw.gov.cn:7789/gisqBI/view.html?biId=d39b12d5f68d4fb5b0182e6c7c06189a&amp;appId=00000001000100010001000000000001#/</a></p><p><strong>在BI中查找指定刚刚处理日期范围内的数据变化，也可以通不过步骤三查看量是不是在增加</strong></p><h3 id="步骤六："><a href="#步骤六：" class="headerlink" title="步骤六："></a>步骤六：</h3><p>查看还有多少量是解析失败的，或者其他解析状态的</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> x<span class="token punctuation">.</span>jxzt <span class="token keyword">as</span> 推送状态<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 总量 <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_jx_xml x <span class="token keyword">where</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token string">'3304'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>FWQBM<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span> <span class="token operator">and</span><span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_ywxx t <span class="token keyword">where</span> substr<span class="token punctuation">(</span>x<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'3304'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>ywh<span class="token operator">=</span>x<span class="token punctuation">.</span>ywh <span class="token operator">and</span> t<span class="token punctuation">.</span>djbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>qlbsm <span class="token operator">and</span> t<span class="token punctuation">.</span>qxdm<span class="token operator">=</span>x<span class="token punctuation">.</span>qxdm <span class="token operator">and</span> t<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span>x<span class="token punctuation">.</span>fwqbm <span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span><span class="token punctuation">)</span><span class="token keyword">group</span> <span class="token keyword">by</span> x<span class="token punctuation">.</span>jxzt<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看索引表解析失败的原因</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> y<span class="token punctuation">.</span>ycms<span class="token punctuation">,</span><span class="token number">d</span><span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span><span class="token number">d</span><span class="token punctuation">.</span>ywh<span class="token punctuation">,</span><span class="token number">d</span><span class="token punctuation">.</span>qlbsm<span class="token punctuation">,</span><span class="token number">d</span><span class="token punctuation">.</span>qszt<span class="token punctuation">,</span><span class="token number">d</span><span class="token punctuation">.</span>lcdm<span class="token punctuation">,</span><span class="token number">d</span><span class="token punctuation">.</span>jxzt <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_ywycxx y<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_sb_dbl <span class="token number">d</span><span class="token keyword">where</span> y<span class="token punctuation">.</span>djbsm<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>qlbsm <span class="token operator">and</span> y<span class="token punctuation">.</span>qxdm<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>qxdm <span class="token operator">and</span> y<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>fwqbm<span class="token operator">and</span> <span class="token number">d</span><span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> <span class="token number">d</span><span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span><span class="token operator">and</span> y<span class="token punctuation">.</span>sfcl<span class="token operator">=</span><span class="token number">0</span><span class="token operator">and</span> <span class="token number">d</span><span class="token punctuation">.</span>qxdm <span class="token operator">like</span> <span class="token string">'3303%'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将异常明细结果最好导出excell表格发给处理人员</p><p>注意⚠️：t_ywycxx只记录解析索引表异常的信息，如果异常处理了，这个表是没有任何状态，异常信息还会在表中，可以去t_ywxx中看到在异常表里的ywh和qlbsm的数据在不在t_ywxx,如果t_ywxx中有，就说明异常已经处理了</p><p>查看异常是否已经处理了 这个查询数量应该等于解析失败的总量</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 维度1  -- 弃用</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 索引表异常已经处理量 <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_ywxx x <span class="token keyword">where</span> <span class="token keyword">EXISTS</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_ywycxx y<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_sb_dbl <span class="token number">d</span><span class="token keyword">where</span> y<span class="token punctuation">.</span>djbsm<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>qlbsm <span class="token operator">and</span> y<span class="token punctuation">.</span>qxdm<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>qxdm <span class="token operator">and</span> y<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>fwqbm<span class="token operator">and</span> <span class="token number">d</span><span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> <span class="token number">d</span><span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span><span class="token operator">and</span> y<span class="token punctuation">.</span>sfcl<span class="token operator">=</span><span class="token number">0</span><span class="token operator">and</span> <span class="token number">d</span><span class="token punctuation">.</span>qxdm <span class="token operator">like</span> <span class="token string">'3303%'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 维度2</span><span class="token keyword">select</span> <span class="token number">d</span><span class="token punctuation">.</span>ywh<span class="token punctuation">,</span><span class="token number">d</span><span class="token punctuation">.</span>qlbsm<span class="token punctuation">,</span><span class="token number">d</span><span class="token punctuation">.</span>dbsj<span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_ywycxx y<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_sb_dbl <span class="token number">d</span><span class="token keyword">where</span> y<span class="token punctuation">.</span>djbsm<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>qlbsm <span class="token operator">and</span> y<span class="token punctuation">.</span>qxdm<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>qxdm <span class="token operator">and</span> y<span class="token punctuation">.</span>fwqbm<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>fwqbm<span class="token operator">and</span> <span class="token number">d</span><span class="token punctuation">.</span>dbsj<span class="token operator">>=</span><span class="token string">'2021-09-01 00:00:00'</span> <span class="token operator">and</span> <span class="token number">d</span><span class="token punctuation">.</span>dbsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-07 00:00:00'</span><span class="token comment" spellcheck="true">-- and y.sfcl=0</span><span class="token operator">and</span> <span class="token number">d</span><span class="token punctuation">.</span>qxdm <span class="token operator">like</span> <span class="token string">'3303%'</span> <span class="token operator">and</span> <span class="token operator">not</span> <span class="token keyword">EXISTS</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_ywxx yw <span class="token keyword">where</span> yw<span class="token punctuation">.</span>qxdm <span class="token operator">like</span> <span class="token string">'3303%'</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>省厅数据量统计分析SQl脚本</title>
      <link href="posts/9c1df09c/"/>
      <url>posts/9c1df09c/</url>
      
        <content type="html"><![CDATA[<h1 id="省厅数据量统计分析SQl脚本"><a href="#省厅数据量统计分析SQl脚本" class="headerlink" title="省厅数据量统计分析SQl脚本"></a>省厅数据量统计分析SQl脚本</h1><h2 id="1-摆渡机转移率（政务外网转移到政务内网-39006）"><a href="#1-摆渡机转移率（政务外网转移到政务内网-39006）" class="headerlink" title="1.摆渡机转移率（政务外网转移到政务内网 -39006）"></a>1.摆渡机转移率（政务外网转移到政务内网 -39006）</h2><h3 id="1-1从外网迁移数据包到内网的转移率sql脚本"><a href="#1-1从外网迁移数据包到内网的转移率sql脚本" class="headerlink" title="1.1从外网迁移数据包到内网的转移率sql脚本"></a>1.1从外网迁移数据包到内网的转移率sql脚本</h3><p>备注：</p><pre class="line-numbers language-markdown"><code class="language-markdown">SFBB(是否报部): 0代表不报部，1代表需要报部，2代表转移成功，3代表转移失败<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 从外网迁移数据包到内网的转移率sql脚本</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>应转移总量<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>sfbb<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>转移成功总量<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>sfbb<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>转移失败总量<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>sfbb<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>未转移量<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>sfbb<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>不报簿转移量<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 转移成功率：转移成功总量/(应转移总量-未转移量-不报簿转移量)</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>sfbb<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>sfbb<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>sfbb<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>转移成功率<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 转移失败率：转移失败总量/(应转移总量-未转移量-不报簿转移量)</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>sfbb<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>sfbb<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>sfbb<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>转移失败率<span class="token punctuation">`</span><span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_jx_xml x<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_jx_log l <span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span> date_format<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2016-01-01'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token string">'2022-12-01'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2从外网迁移数据包到内网的转移异常明细"><a href="#1-2从外网迁移数据包到内网的转移异常明细" class="headerlink" title="1.2从外网迁移数据包到内网的转移异常明细"></a>1.2从外网迁移数据包到内网的转移异常明细</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 从外网迁移数据包到内网的转移异常明细</span><span class="token keyword">select</span> l<span class="token punctuation">.</span>bbinfo <span class="token keyword">as</span> 转移失败原因<span class="token punctuation">,</span>x<span class="token punctuation">.</span>ywh <span class="token keyword">as</span> 业务号<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qlbsm <span class="token keyword">as</span> 权力标识码<span class="token punctuation">,</span>x<span class="token punctuation">.</span>lcdm <span class="token keyword">as</span> 流程代码<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qxdm <span class="token keyword">as</span> 区县代码<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qlbm <span class="token keyword">as</span> 权力表名<span class="token punctuation">,</span> x<span class="token punctuation">.</span>dbsj <span class="token keyword">as</span> 登簿时间<span class="token punctuation">,</span> x<span class="token punctuation">.</span>qszt 权属状态 <span class="token punctuation">,</span>x<span class="token punctuation">.</span>djlx 登记类型<span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_jx_xml x<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_jx_log l <span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> x<span class="token punctuation">.</span>dbsj <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>sfbb<span class="token operator">=</span><span class="token number">3</span> <span class="token operator">and</span> date_format<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2016-01-01'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token string">'2022-12-01'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3外网转移数据包到政务内网"><a href="#1-3外网转移数据包到政务内网" class="headerlink" title="1.3外网转移数据包到政务内网"></a>1.3外网转移数据包到政务内网</h3><pre class="line-numbers language-markdown"><code class="language-markdown">t<span class="token italic"><span class="token punctuation">_</span>jx<span class="token punctuation">_</span></span>xml.sfbb 是否报部  sfbb=0（不处理） sfbb=1（需要报部） sfbb=2（摆渡转移成功）sfbb=3（转移失败)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 验证转移成功的数量</span><span class="token keyword">select</span>  x<span class="token punctuation">.</span>sfbb <span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_jx_xml x<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_jx_log l <span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span> date_format<span class="token punctuation">(</span>l<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'2021-09-06'</span>  <span class="token operator">and</span> x<span class="token punctuation">.</span>qxdm<span class="token operator">=</span><span class="token string">'330100'</span> <span class="token keyword">group</span> <span class="token keyword">by</span> x<span class="token punctuation">.</span>sfbb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 报部转移失败明细 </span><span class="token keyword">select</span> l<span class="token punctuation">.</span>bbinfo <span class="token keyword">as</span> 报部转移信息<span class="token punctuation">,</span>x<span class="token punctuation">.</span>jxzt <span class="token keyword">as</span> 解析状态<span class="token punctuation">,</span>l<span class="token punctuation">.</span>jxjg <span class="token keyword">as</span> 解析结果<span class="token punctuation">,</span>x<span class="token punctuation">.</span>ywh <span class="token keyword">as</span> 业务号<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qlbsm <span class="token keyword">as</span> 权⼒标识码<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qlbm <span class="token keyword">as</span> 权利表名<span class="token punctuation">,</span> x<span class="token punctuation">.</span>lcdm <span class="token keyword">as</span> 流程代码<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qszt <span class="token keyword">as</span> 权属状态<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qxdm <span class="token keyword">as</span> 区县代码 <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_jx_log l<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_jx_xml x <span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> x<span class="token punctuation">.</span>jxzt<span class="token operator">>=</span><span class="token string">'0'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>sfbb <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">and</span> date_format<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'2021-09-06'</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>qxdm<span class="token operator">=</span><span class="token string">'330100'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-报部率-省厅的数据包转移到国标）"><a href="#2-报部率-省厅的数据包转移到国标）" class="headerlink" title="2.报部率(省厅的数据包转移到国标）"></a>2.报部率(省厅的数据包转移到国标）</h2><p>备注⚠️:</p><pre class="line-numbers language-markdown"><code class="language-markdown">t<span class="token italic"><span class="token punctuation">_</span>bwsb<span class="token punctuation">_</span></span>log表的上报状态sbzt字段：0表示备份失败，     1表示备份成功，   2表示分发成功，     3表示分发失败，     4表示上报成功，5表示上报失败,      6表示响应成功，   7表示响应失败<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-1内外数据包上报到国标报部率-维度2，详细"><a href="#2-1内外数据包上报到国标报部率-维度2，详细" class="headerlink" title="2.1内外数据包上报到国标报部率 (维度2，详细)"></a>2.1内外数据包上报到国标报部率 (维度2，详细)</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>总量<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>未上报量<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>上报国标成功成功量<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 响应成功了才是算上报过程</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>上报国标失败量<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 上报成功量/(总量-未上报量)</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>上报国标成功率<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 上报失败量/(总量-未上报量)</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>上报国标失败率<span class="token punctuation">`</span><span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_bwsb_xml x<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_bwsb_log l<span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span> date_format<span class="token punctuation">(</span>l<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2016-01-01'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>l<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token string">'2022-12-01'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2内外数据包上报到国标报部失败明细（维度2，详细）"><a href="#2-2内外数据包上报到国标报部失败明细（维度2，详细）" class="headerlink" title="2.2内外数据包上报到国标报部失败明细（维度2，详细）"></a>2.2内外数据包上报到国标报部失败明细（维度2，详细）</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 上报失败维度 sbzt=5</span><span class="token keyword">select</span> x<span class="token punctuation">.</span>ywh <span class="token keyword">as</span> 业务号<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qlbsm <span class="token keyword">as</span> 权力标识码<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qxdm <span class="token keyword">as</span> 区县代码<span class="token punctuation">,</span>l<span class="token punctuation">.</span>logtype <span class="token keyword">as</span> 上报国标失败类型<span class="token punctuation">,</span>l<span class="token punctuation">.</span>loginfo <span class="token keyword">as</span> 上报国标失败原因<span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_bwsb_xml x<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_bwsb_log l<span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span> date_format<span class="token punctuation">(</span>l<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2016-01-01'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>l<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token string">'2022-12-01'</span><span class="token operator">and</span> l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">5</span> <span class="token operator">and</span> <span class="token comment" spellcheck="true">--x.fwqbm=1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 响应失败维度 sbzt=7</span><span class="token keyword">select</span> x<span class="token punctuation">.</span>ywh <span class="token keyword">as</span> 业务号<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qlbsm <span class="token keyword">as</span> 权力标识码<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qxdm <span class="token keyword">as</span> 区县代码<span class="token punctuation">,</span>l<span class="token punctuation">.</span>logtype <span class="token keyword">as</span> 上报国标失败类型<span class="token punctuation">,</span>l<span class="token punctuation">.</span>loginfo <span class="token keyword">as</span> 上报国标失败原因<span class="token keyword">from</span> bdcdjjg1<span class="token punctuation">.</span>t_bwsb_xml x<span class="token punctuation">,</span>bdcdjjg1<span class="token punctuation">.</span>t_bwsb_log l<span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span> date_format<span class="token punctuation">(</span>l<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2016-01-01'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>l<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token string">'2022-12-01'</span><span class="token operator">and</span> l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">7</span> <span class="token operator">and</span> <span class="token comment" spellcheck="true">--x.fwqbm=1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 数据包转移到内网sftp失败维度 sbzt=0</span><span class="token keyword">select</span> x<span class="token punctuation">.</span>ywh <span class="token keyword">as</span> 业务号<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qlbsm <span class="token keyword">as</span> 权力标识码<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qxdm <span class="token keyword">as</span> 区县代码<span class="token punctuation">,</span>l<span class="token punctuation">.</span>logtype <span class="token keyword">as</span> 上报国标失败类型<span class="token punctuation">,</span>l<span class="token punctuation">.</span>loginfo <span class="token keyword">as</span> 上报国标失败原因<span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_bwsb_xml x<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_bwsb_log l<span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> l<span class="token punctuation">.</span>dbsj <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span> date_format<span class="token punctuation">(</span>l<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2016-01-01'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>l<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token string">'2022-12-01'</span><span class="token operator">and</span> l<span class="token punctuation">.</span>sbzt<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">and</span> <span class="token comment" spellcheck="true">--x.fwqbm=1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-解析率-政务外网异步解析-39006"><a href="#3-解析率-政务外网异步解析-39006" class="headerlink" title="3.解析率(政务外网异步解析-39006)"></a>3.解析率(政务外网异步解析-39006)</h2><h3 id="3-1政务外网异步解析率（维度2，详细）"><a href="#3-1政务外网异步解析率（维度2，详细）" class="headerlink" title="3.1政务外网异步解析率（维度2，详细）"></a>3.1政务外网异步解析率（维度2，详细）</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 解析率</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 总量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>jxzt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 未解析量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>jxzt<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 解析成功量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>jxzt<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 解析失败量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>jxzt<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 暂不解析量<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 一般是原权利未的量</span><span class="token comment" spellcheck="true">-- sum(if(x.jxzt=4,1,0)) as 解析校验失败量,  -- 暂时不考虑，应该没有这种数据</span><span class="token comment" spellcheck="true">-- 解析成功率： 解析成功量/(总量-未解析量-暂不解析量)</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>jxzt<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>jxzt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>jxzt<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span> <span class="token keyword">as</span> 解析成功率<span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 解析失败率： 解析成功量/(总量-未解析量-暂不解析量)</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>jxzt<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>jxzt<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>jxzt<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span> <span class="token keyword">as</span> 解析失败率<span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_jx_log l<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_jx_xml x<span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> x<span class="token punctuation">.</span>jxzt<span class="token operator">>=</span><span class="token string">'0'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2016-01-01'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token string">'2022-12-01'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2政务外网异步解析失败明细-（维度2，详细）"><a href="#3-2政务外网异步解析失败明细-（维度2，详细）" class="headerlink" title="3.2政务外网异步解析失败明细 （维度2，详细）"></a>3.2政务外网异步解析失败明细 （维度2，详细）</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 解析失败明细</span><span class="token keyword">select</span> x<span class="token punctuation">.</span>jxzt <span class="token keyword">as</span> 解析状态<span class="token punctuation">,</span>l<span class="token punctuation">.</span>jxjg <span class="token keyword">as</span> 解析结果<span class="token punctuation">,</span>x<span class="token punctuation">.</span>ywh <span class="token keyword">as</span> 业务号<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qlbsm <span class="token keyword">as</span> 权力标识码<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qlbm <span class="token keyword">as</span> 权力表名<span class="token punctuation">,</span>x<span class="token punctuation">.</span>lcdm <span class="token keyword">as</span> 流程代码<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qszt <span class="token keyword">as</span> 权属状态<span class="token punctuation">,</span>x<span class="token punctuation">.</span>qxdm <span class="token keyword">as</span> 区县代码<span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_jx_log l<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_jx_xml x<span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> x<span class="token punctuation">.</span>jxzt<span class="token operator">>=</span><span class="token string">'0'</span><span class="token operator">and</span> x<span class="token punctuation">.</span>jxzt <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2016-01-01'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token string">'2022-12-01'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3总体的解析率：解析的量-省厅接受的总量（维度1，大体）"><a href="#3-3总体的解析率：解析的量-省厅接受的总量（维度1，大体）" class="headerlink" title="3.3总体的解析率：解析的量/省厅接受的总量（维度1，大体）"></a>3.3总体的解析率：解析的量/省厅接受的总量（维度1，大体）</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 解析率=解析的总量/省厅配号总量</span><span class="token keyword">select</span>  <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_jx_log l<span class="token punctuation">,</span>bdcdjjg<span class="token punctuation">.</span>t_jx_xml x<span class="token keyword">where</span> x<span class="token punctuation">.</span>logbsm<span class="token operator">=</span>l<span class="token punctuation">.</span>bsm <span class="token operator">and</span> x<span class="token punctuation">.</span>jxzt<span class="token operator">>=</span><span class="token string">'0'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2021-01-03'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token string">'2022-12-01'</span><span class="token punctuation">)</span><span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>bdcdjbh ph<span class="token keyword">where</span> ph<span class="token punctuation">.</span>gxsj<span class="token operator">>=</span><span class="token string">'2021-01-03'</span> <span class="token operator">and</span> ph<span class="token punctuation">.</span>gxsj<span class="token operator">&lt;=</span><span class="token string">'2022-12-01'</span><span class="token punctuation">)</span><span class="token keyword">as</span> 解析率<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-报省率（市县区上报，省厅39006接受数据包）"><a href="#4-报省率（市县区上报，省厅39006接受数据包）" class="headerlink" title="4.报省率（市县区上报，省厅39006接受数据包）"></a>4.报省率（市县区上报，省厅39006接受数据包）</h2><h3 id="4-1报省率-维度1，大体"><a href="#4-1报省率-维度1，大体" class="headerlink" title="4.1报省率(维度1，大体)"></a>4.1报省率(维度1，大体)</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 报省率=省厅接收的总量/省厅配号总量</span><span class="token keyword">select</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>t_sb_dbl l <span class="token keyword">where</span> l<span class="token punctuation">.</span>logbsm <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token operator">and</span> l<span class="token punctuation">.</span>logbsm<span class="token operator">></span><span class="token number">0</span> <span class="token operator">and</span> date_format<span class="token punctuation">(</span>l<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2021-08-01'</span><span class="token operator">and</span> date_format<span class="token punctuation">(</span>l<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token string">'2021-09-04'</span> <span class="token operator">and</span> tszt<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> bdcdjjg<span class="token punctuation">.</span>bdcdjbh ph<span class="token keyword">where</span> ph<span class="token punctuation">.</span>gxsj<span class="token operator">>=</span><span class="token string">'2021-08-01'</span> <span class="token operator">and</span> ph<span class="token punctuation">.</span>gxsj<span class="token operator">&lt;=</span><span class="token string">'2021-09-04'</span><span class="token punctuation">)</span><span class="token keyword">as</span> 报省率；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2oracle库查推送登记簿省厅的总量"><a href="#4-2oracle库查推送登记簿省厅的总量" class="headerlink" title="4.2oracle库查推送登记簿省厅的总量"></a>4.2oracle库查推送登记簿省厅的总量</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 总登簿量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>t<span class="token punctuation">.</span>isdbcg<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 登簿成功量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>t<span class="token punctuation">.</span>isdbcg<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">as</span>  登簿失败量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>t<span class="token punctuation">.</span>isdbcg<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 未登簿量<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>iscg<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">as</span>   推送省厅成功量   <span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>iscg<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span>  推送省厅失败量   <span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>iscg<span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span>  未推送省厅量      <span class="token keyword">from</span>   <span class="token punctuation">(</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>bsm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>ywh<span class="token punctuation">,</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qszt<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbsm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>djlx<span class="token punctuation">,</span>t<span class="token punctuation">.</span>lcdm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>slsj<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qxdm <span class="token keyword">from</span> bdcdj<span class="token punctuation">.</span>sh t   <span class="token keyword">where</span>  t<span class="token punctuation">.</span>dbsj  <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span>  t<span class="token punctuation">.</span>qszt <span class="token operator">is</span> <span class="token operator">not</span>  <span class="token boolean">null</span>   <span class="token operator">and</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'2021-08-01'</span> <span class="token operator">and</span> to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span> <span class="token string">'2021-08-31'</span><span class="token operator">and</span>  t<span class="token punctuation">.</span>dbsj   <span class="token operator">is</span>   <span class="token operator">not</span>   <span class="token boolean">null</span><span class="token keyword">union</span> <span class="token keyword">all</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>bsm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>ywh<span class="token punctuation">,</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qszt<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbsm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>djlx<span class="token punctuation">,</span>t<span class="token punctuation">.</span>lcdm<span class="token punctuation">,</span>t<span class="token punctuation">.</span>slsj<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qxdmfrombdcdj<span class="token punctuation">.</span>sh_ls t <span class="token keyword">where</span> t<span class="token punctuation">.</span>dbsj <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token comment" spellcheck="true">--and t.qszt is not null</span><span class="token operator">and</span> to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2021-08-01'</span> <span class="token operator">and</span> to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span> <span class="token string">'2021-08-31'</span><span class="token operator">and</span> t<span class="token punctuation">.</span>dbsj <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">)</span>sh<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span>XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span> XMLDB<span class="token punctuation">.</span>t_sb_result s <span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2021-08-01'</span> <span class="token operator">and</span> to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span> <span class="token string">'2021-08-31'</span><span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>s<span class="token punctuation">.</span>djshbsm<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> receiverbsm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span>XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span>XMLDB<span class="token punctuation">.</span>t_sb_result s <span class="token keyword">where</span> to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token string">'2021-08-01'</span> <span class="token operator">and</span> to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span> <span class="token string">'2021-08-31'</span><span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>s<span class="token punctuation">.</span>djshbsm<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> receiverbsm<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> s<span class="token comment" spellcheck="true">--and t.dbsj is notnull</span><span class="token keyword">where</span> sh<span class="token punctuation">.</span>ywh<span class="token operator">=</span>T<span class="token punctuation">.</span>YWH<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> sh<span class="token punctuation">.</span>qlbsm<span class="token operator">=</span>t<span class="token punctuation">.</span>qlbsm<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">and</span> sh<span class="token punctuation">.</span>ywh<span class="token operator">=</span>s<span class="token punctuation">.</span>ywh<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> sh<span class="token punctuation">.</span>qlbsm<span class="token operator">=</span>s<span class="token punctuation">.</span>qlbsm<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 推送省厅失败量  </span><span class="token keyword">select</span>  <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_dbxx x <span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_sb_result r<span class="token keyword">where</span> x<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>r<span class="token punctuation">.</span>djshbsm <span class="token operator">and</span>  to_char<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2021-09-01'</span> <span class="token comment" spellcheck="true">/*and  to_char(x.dbsj,'yyyy-mm-dd') &lt;= '2021-09-08'*/</span> <span class="token operator">and</span> r<span class="token punctuation">.</span>receiverbsm<span class="token operator">=</span><span class="token number">2</span><span class="token operator">and</span> r<span class="token punctuation">.</span>iscg<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 推送登记簿失败的 </span><span class="token keyword">select</span> count（<span class="token operator">*</span>） <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_dbxx x <span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_sb_result r<span class="token keyword">where</span> r<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>djshbsm <span class="token operator">and</span> to_char<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2021-09-01'</span>  <span class="token operator">and</span> r<span class="token punctuation">.</span>receiverbsm<span class="token operator">=</span><span class="token number">1</span><span class="token operator">and</span> x<span class="token punctuation">.</span>isdbcg<span class="token operator">=</span><span class="token number">0</span><span class="token comment" spellcheck="true">-- (未推送省厅量）</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_dbxx x  <span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2021-09-01'</span> <span class="token operator">and</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_result r <span class="token keyword">where</span> r<span class="token punctuation">.</span>receiverbsm<span class="token operator">=</span><span class="token number">2</span> <span class="token operator">and</span> r<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>djshbsm<span class="token punctuation">)</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>qszt<span class="token operator">></span><span class="token string">'0'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- (未推送登记簿量）</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_dbxx x  <span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>x<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2021-09-01'</span> <span class="token operator">and</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> xmldb<span class="token punctuation">.</span>t_sb_result r <span class="token keyword">where</span> r<span class="token punctuation">.</span>receiverbsm<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> r<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>x<span class="token punctuation">.</span>djshbsm<span class="token punctuation">)</span> <span class="token operator">and</span> x<span class="token punctuation">.</span>qszt<span class="token operator">></span><span class="token string">'0'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2oracle查推送登记簿省厅失败明细"><a href="#4-2oracle查推送登记簿省厅失败明细" class="headerlink" title="4.2oracle查推送登记簿省厅失败明细"></a>4.2oracle查推送登记簿省厅失败明细</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 登记簿</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>ywh <span class="token keyword">as</span> 业务号 <span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbsm 权利标识码<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbm 权利表名<span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span> 登簿时间 <span class="token punctuation">,</span>t<span class="token punctuation">.</span>qxdm 区县代码 <span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>substr<span class="token punctuation">(</span>le<span class="token punctuation">.</span>loginfo<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3800</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">as</span> 异常描述，logtype <span class="token keyword">as</span> 异常类型<span class="token punctuation">,</span><span class="token string">'记载登记簿失败'</span> <span class="token keyword">as</span> 失败类型<span class="token keyword">from</span> XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_sb_result R<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>LOG_EXCEPTION le <span class="token keyword">where</span> to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> '<span class="token number">2020</span><span class="token operator">-</span><span class="token number">08</span><span class="token comment" spellcheck="true">--01' </span><span class="token operator">and</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> '<span class="token number">2021</span><span class="token operator">-</span><span class="token number">08</span><span class="token comment" spellcheck="true">--01'  </span><span class="token operator">and</span> isdbcg<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>R<span class="token punctuation">.</span>djshbsm  <span class="token operator">AND</span>  R<span class="token punctuation">.</span>LOGECPBSM<span class="token operator">=</span>LE<span class="token punctuation">.</span>BSM<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> receiverbsm<span class="token operator">=</span><span class="token number">1</span> <span class="token comment" spellcheck="true">-- 省厅</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>ywh <span class="token keyword">as</span> 业务号 <span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbsm 权利标识码<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qlbm 权利表名<span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span> 登簿时间<span class="token punctuation">,</span>t<span class="token punctuation">.</span>qxdm<span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>substr<span class="token punctuation">(</span>le<span class="token punctuation">.</span>loginfo<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3800</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">as</span> 异常描述<span class="token punctuation">,</span>logtype <span class="token keyword">as</span> 异常类型<span class="token punctuation">,</span><span class="token string">'推送省厅失败'</span> <span class="token keyword">as</span> 失败类型<span class="token keyword">from</span> XMLDB<span class="token punctuation">.</span>T_SB_DBXX t<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>t_sb_result R<span class="token punctuation">,</span>xmldb<span class="token punctuation">.</span>LOG_EXCEPTION le<span class="token keyword">where</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> '<span class="token number">2020</span><span class="token operator">-</span><span class="token number">08</span><span class="token comment" spellcheck="true">--01' </span><span class="token operator">and</span>  to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>dbsj<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> '<span class="token number">2021</span><span class="token operator">-</span><span class="token number">08</span><span class="token comment" spellcheck="true">--01'  </span><span class="token operator">and</span> iscg<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">and</span> t<span class="token punctuation">.</span>djshbsm<span class="token operator">=</span>R<span class="token punctuation">.</span>djshbsm  <span class="token operator">AND</span>  R<span class="token punctuation">.</span>LOGECPBSM<span class="token operator">=</span>LE<span class="token punctuation">.</span>BSM<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">and</span> receiverbsm<span class="token operator">=</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JUC随笔</title>
      <link href="posts/832abe7a/"/>
      <url>posts/832abe7a/</url>
      
        <content type="html"><![CDATA[<p>并发</p><p>并行</p><p>wait</p><p>sleep</p><p>管程</p><p>用户线程</p><p>守护进程</p><p>Lock接口</p><p>java中的sync关键字 同步锁</p><p>多线程编程的步骤：</p><p>1、创建一个资源类，在资源类创建属性和操作方法</p><p>空调资源类，空调有操作（制冷，制热）  追求高内聚，低耦合</p><p>2、在资源类的操作方法上</p><p>判断、干活、通知</p><p>3、创建多个线程、调用资源类和操作方法</p><p>4、防止虚假唤醒问题，判断在放在while（）中 </p><p>例子：3个售票员 卖出30张票</p><p>票是资源，票的数量是属性，卖票的方法</p><p>售票员就是3个线程</p><p>创建线程的方式：</p><p>继承Thread类、实现Runnalbe接口（经常用）、使用Callable接口、线程池</p><p>Callable接口:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>ExecutionException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>FutureTask<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Author: suny * @Date: 2021/09/03 上午11:59 * @Description: */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">callableTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        FutureTask<span class="token operator">&lt;</span>Integer<span class="token operator">></span> futureTask1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"come in callable"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token number">1024</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>futureTask1<span class="token punctuation">,</span><span class="token string">"aa"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>futureTask1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例子：</p><p>两个线程 ，实现对一个初始值0的变量 ，一个对其值+1，另一个对其值-1</p><p>可重入锁：厕所（每个人进去都会上锁，粗来解锁） Lock接口</p><p>Lock的操作更广，Lock不是java语言内置的</p><p>Lock和synchronized的区别：</p><p>JUC3大辅助类：</p><p>减少计数CountDownLatch（6个同学都离开后班长锁门）</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>CountDownLatch<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Author: suny * @Date: 2021/09/05 下午9:01 * @Description: 减少计数CyclicBarrier */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CountDownLatchTest</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//有六个同学陆续离开教室后，班长锁门</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> InterruptedException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建CountDownLatch对象，设置初始值</span>        CountDownLatch countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"离开了教室"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>countDownLatch<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"班长锁门了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一个或者多个线程调用await方法 让线程阻塞，其他线程</p><p>循环栅栏 （集齐7颗龙珠召唤神龙）</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>BrokenBarrierException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>CyclicBarrier<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Author: suny * @Date: 2021/09/05 下午9:15 * @Description: 收集全7颗龙珠可以召唤神龙 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CyclicBarrierTest</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> NUMBER <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        CyclicBarrier cyclicBarrier <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span>NUMBER<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"集齐龙珠召唤神龙"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    <span class="token keyword">try</span> <span class="token punctuation">{</span>                        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"星收集到了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">//等待</span>                        cyclicBarrier<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BrokenBarrierException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>信号灯（6辆车停在3个停车位）</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author: suny * @Date: 2021/09/05 下午9:52 * @Description: * * 3个车位，6辆汽车 * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SemaphoreTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Semaphore semaphore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//获得许可</span>                    semaphore<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"抢到了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//设置随机停车时间</span>                    TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"*****离开了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//释放许可</span>                    semaphore<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>悲观锁：</p><p>上锁，解锁后，别人才能操作。上锁-解锁，不能并发，效率低。</p><p>乐观锁：</p><p>乐观锁，都能操作，都会得到一个版本号，修改后，要改版本号，另一个人提交之前要进行比较，</p><p>如果不一致，就会失败，谁先提交，修改版本号，就事务成功。</p><p>表锁：（没有死锁）</p><p>只操作一行记录，但是把整个表都锁住了</p><p>行锁：（会发生死锁）</p><p>只对要操作的那一行上锁</p><p>读锁：共享锁，会有死锁</p><p>（读的时候不能写）</p><p>写锁：独占锁， 会有死锁</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span>ReadWriteLock<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span>ReentrantReadWriteLock<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Author: suny * @Date: 2021/09/05 下午10:32 * @Description:  没有写完，就开始读，会存在问题的  ----可以通过读写锁进行解决 *    写是独占锁    读是共享锁 */</span><span class="token comment" spellcheck="true">/**    资源类 */</span><span class="token keyword">class</span> <span class="token class-name">MyCache</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//创建map集合</span>    <span class="token comment" spellcheck="true">//volatile 保证可见性，禁止重排序</span>    <span class="token keyword">private</span> <span class="token keyword">volatile</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//创建读写锁对象</span>    <span class="token keyword">private</span> ReadWriteLock rwLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantReadWriteLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//存数据</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">putData</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span> Object value<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//添加锁</span>        rwLock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"正在写操作"</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//暂停一会</span>            TimeUnit<span class="token punctuation">.</span>MICROSECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"写操作完成"</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//释放写锁</span>            rwLock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//读数据</span>    <span class="token keyword">public</span> Object <span class="token function">getData</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span><span class="token punctuation">{</span>        Object res <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//添加读锁</span>        rwLock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"正在读操作"</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//暂停一会</span>            TimeUnit<span class="token punctuation">.</span>MICROSECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"读操作完成"</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//释放锁</span>            rwLock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReadWriteTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> InterruptedException <span class="token punctuation">{</span>        MyCache myCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建线程放数据</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">final</span> <span class="token keyword">int</span> num <span class="token operator">=</span> i <span class="token punctuation">;</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//内部类访问外部数据的时候只能访问常量（final修饰的变量）</span>                myCache<span class="token punctuation">.</span><span class="token function">putData</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">,</span>num <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        TimeUnit<span class="token punctuation">.</span>MICROSECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建线程取数据</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">final</span> <span class="token keyword">int</span> num <span class="token operator">=</span> i <span class="token punctuation">;</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//内部类访问外部数据的时候只能访问常量（final修饰的变量）</span>                myCache<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mac按照RabbitMQ</title>
      <link href="posts/28a5e30/"/>
      <url>posts/28a5e30/</url>
      
        <content type="html"><![CDATA[<h1 id="mac按照RabbitMQ"><a href="#mac按照RabbitMQ" class="headerlink" title="mac按照RabbitMQ"></a>mac按照RabbitMQ</h1><h2 id="1-通过brew命令安装"><a href="#1-通过brew命令安装" class="headerlink" title="1.通过brew命令安装"></a>1.通过brew命令安装</h2><pre class="line-numbers language-shell"><code class="language-shell">brew update//Already up-to-date.brew install rabbitmq==> Checking for dependents of upgraded formulae...==> No broken dependents found!==> Caveats==> rabbitmqManagement Plugin enabled by default at http://localhost:15672To start rabbitmq:  brew services start rabbitmqOr, if you don't want/need a background service you can just run:  /usr/local/opt/rabbitmq/sbin/rabbitmq-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h2><pre class="line-numbers language-shell"><code class="language-shell">vim ~/.bash_profile#RabbitMQexport PATH=$PATH:/usr/local/sbinsource ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-启动和关闭"><a href="#3-启动和关闭" class="headerlink" title="3.启动和关闭"></a>3.启动和关闭</h2><pre class="line-numbers language-shell"><code class="language-shell">rabbitmqctl stop 关闭rabbitmq-server 启动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4-web管理界面"><a href="#4-web管理界面" class="headerlink" title="4.web管理界面"></a>4.web管理界面</h2><p><a href="http://localhost:15672/" target="_blank" rel="noopener">http://localhost:15672</a></p><p>guest</p><p>guest</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>collect模块调试步骤</title>
      <link href="posts/25b8c557/"/>
      <url>posts/25b8c557/</url>
      
        <content type="html"><![CDATA[<h1 id="collect模块调试步骤"><a href="#collect模块调试步骤" class="headerlink" title="collect模块调试步骤"></a>collect模块调试步骤</h1><h2 id="步骤1"><a href="#步骤1" class="headerlink" title="步骤1"></a>步骤1</h2><img src="/posts/25b8c557/image-20210809160806198.png" alt="image-20210809160806198" style="zoom:80%;"><h2 id="步骤2"><a href="#步骤2" class="headerlink" title="步骤2"></a>步骤2</h2><img src="/posts/25b8c557/image-20210809161036766.png" alt="image-20210809161036766" style="zoom:80%;"><h2 id="步骤3"><a href="#步骤3" class="headerlink" title="步骤3"></a>步骤3</h2><img src="/posts/25b8c557/image-20210809161356106.png" alt="image-20210809161356106" style="zoom:80%;"><img src="/posts/25b8c557/image-20210809161411874.png" alt="image-20210809161411874" style="zoom:80%;">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>frp服务端正常客户端连不上</title>
      <link href="posts/800ff1eb/"/>
      <url>posts/800ff1eb/</url>
      
        <content type="html"><![CDATA[<h1 id="frp服务端正常客户端连不上"><a href="#frp服务端正常客户端连不上" class="headerlink" title="frp服务端正常客户端连不上"></a>frp服务端正常客户端连不上</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>客户端报错</p><img src="/posts/800ff1eb/image-20210724085512893.png" alt="image-20210724085512893" style="zoom:50%;"><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><img src="/posts/800ff1eb/image-20210724085734183.png" alt="image-20210724085734183" style="zoom:50%;"><p><code>tls_enable = true</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据推送项目小总结</title>
      <link href="posts/2fda6c00/"/>
      <url>posts/2fda6c00/</url>
      
        <content type="html"><![CDATA[<h1 id="数据推送项目小总结"><a href="#数据推送项目小总结" class="headerlink" title="数据推送项目小总结"></a>数据推送项目小总结</h1><h2 id="1-多数据源配置"><a href="#1-多数据源配置" class="headerlink" title="1.多数据源配置"></a>1.多数据源配置</h2><h3 id="1-1核心配置"><a href="#1-1核心配置" class="headerlink" title="1.1核心配置"></a>1.1核心配置</h3><p><code>application.yml</code></p><pre class="line-numbers language-java"><code class="language-java">gisq<span class="token operator">:</span>  platform<span class="token operator">:</span>    auth<span class="token operator">:</span>      checkToken<span class="token operator">:</span> <span class="token boolean">false</span>    web<span class="token operator">:</span>      cross<span class="token operator">:</span>        enabled<span class="token operator">:</span> <span class="token boolean">false</span>  #跨域开启    db<span class="token operator">:</span>      config<span class="token operator">:</span>        decrypt<span class="token operator">:</span> <span class="token boolean">false</span> #密码是否加密        key<span class="token operator">:</span>  MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJYQJiqpte76TBikKi<span class="token operator">/</span>vxbaYSphFDs6kxRd0X<span class="token operator">/</span>lJobWk2pg3uMJOlM2IrOI<span class="token operator">+</span>Szy28dzeCDOyGCv<span class="token operator">/</span><span class="token number">9</span><span class="token operator">/</span>CD5yCZUdECAwEAAQ<span class="token operator">==</span>      dynamic<span class="token operator">:</span>        enabled<span class="token operator">:</span> <span class="token boolean">true</span> #是否开启多数据源        enabledDefault<span class="token operator">:</span> <span class="token boolean">false</span>  #当数据源未查询到是否使用默认数据源，默认<span class="token boolean">false</span>；      dynamicDataSources<span class="token operator">:</span>        slave<span class="token operator">:</span>  #  本地          driver<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>name<span class="token operator">:</span> com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Driver          type<span class="token operator">:</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span>DruidDataSource          url<span class="token operator">:</span> jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">11.154</span><span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>bdcdjjg<span class="token operator">?</span>useUnicode<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>characterEncoding<span class="token operator">=</span>utf8<span class="token operator">&amp;</span>serverTimzone<span class="token operator">=</span>GMT<span class="token operator">%</span>2b8<span class="token operator">&amp;</span>useSSL<span class="token operator">=</span><span class="token boolean">false</span>          username<span class="token operator">:</span> root          password<span class="token operator">:</span> <span class="token number">123456</span>        cdsq<span class="token operator">:</span>  # MYSQL          driver<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>name<span class="token operator">:</span> com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Driver          type<span class="token operator">:</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span>DruidDataSource          url<span class="token operator">:</span> jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">11.154</span><span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>bdcdjjg<span class="token operator">?</span>useUnicode<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>characterEncoding<span class="token operator">=</span>utf8<span class="token operator">&amp;</span>serverTimezone<span class="token operator">=</span>GMT<span class="token operator">%</span>2b8<span class="token operator">&amp;</span>useSSL<span class="token operator">=</span><span class="token boolean">false</span>          username<span class="token operator">:</span> root          password<span class="token operator">:</span> <span class="token number">123456</span>        cert<span class="token operator">:</span>  # MYSQL          driver<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>name<span class="token operator">:</span> com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Driver          type<span class="token operator">:</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span>DruidDataSource          url<span class="token operator">:</span> jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">11.154</span><span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>bdcdjjg<span class="token operator">?</span>useUnicode<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>characterEncoding<span class="token operator">=</span>utf8<span class="token operator">&amp;</span>serverTimezone<span class="token operator">=</span>GMT<span class="token operator">%</span>2b8<span class="token operator">&amp;</span>useSSL<span class="token operator">=</span><span class="token boolean">false</span>          username<span class="token operator">:</span> root          password<span class="token operator">:</span> <span class="token number">123456</span>        qzk<span class="token operator">:</span>  # 前置库          driver<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>name<span class="token operator">:</span> com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Driver          type<span class="token operator">:</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span>DruidDataSource          url<span class="token operator">:</span> jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">11.154</span><span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>bdcdjjg<span class="token operator">?</span>useUnicode<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>characterEncoding<span class="token operator">=</span>utf8<span class="token operator">&amp;</span>serverTimezone<span class="token operator">=</span>GMT<span class="token operator">%</span>2b8<span class="token operator">&amp;</span>useSSL<span class="token operator">=</span><span class="token boolean">false</span>          username<span class="token operator">:</span> root          password<span class="token operator">:</span> <span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2注解使用"><a href="#1-2注解使用" class="headerlink" title="1.2注解使用"></a>1.2注解使用</h3><p><code>@DynamicSwitchDataSource(dataSourceId = &quot;slave&quot;)</code></p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token annotation punctuation">@DynamicSwitchDataSource</span><span class="token punctuation">(</span>dataSourceId <span class="token operator">=</span> <span class="token string">"slave"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">updateCdsqStats</span><span class="token punctuation">(</span>Integer tszt<span class="token punctuation">,</span> Integer tscs<span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">return</span> cdsqDAO<span class="token punctuation">.</span><span class="token function">updateCdsqStats</span><span class="token punctuation">(</span>tszt<span class="token punctuation">,</span>tscs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//dataSourceId = "slave" 对应yml配置文件中数据源的名称</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-两个List集合左连接"><a href="#2-两个List集合左连接" class="headerlink" title="2.两个List集合左连接"></a>2.两个List集合左连接</h2><h3 id="2-1案例"><a href="#2-1案例" class="headerlink" title="2.1案例"></a>2.1案例</h3><p>listLeft将listRight中xzqbm字段相等的进行左连接</p><p>左连接核心代码 利用java8 strem()处理</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">for</span> <span class="token punctuation">(</span>TSzshCodeDO t <span class="token operator">:</span> listLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>CdsqDO<span class="token operator">></span> cdsqDOList <span class="token operator">=</span> listRight<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>right <span class="token operator">-</span><span class="token operator">></span> right<span class="token punctuation">.</span><span class="token function">getXzqbm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getXzqbm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>实体类处理 com.gisquest.realestate.data.supervise.digital.entity.TSzshCodeDO</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//待会要赋值进去的对象</span><span class="token keyword">private</span> List<span class="token operator">&lt;</span>TCertLogDO<span class="token operator">></span> tCertLogDOList<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//待会要赋值进去的对象</span><span class="token keyword">private</span> List<span class="token operator">&lt;</span>CdsqDO<span class="token operator">></span> cdsqDOList<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>处理核心代码</p><p>注意：<code>List&lt;TSzshCodeDO&gt; res = new ArrayList&lt;&gt;(); </code>遍历结果要用List集合接收</p><p>如果<code>TSzshCodeDO res = new TSzshCodeDO(); </code>前端数据处理的返回结果只会显示一条数据，但数据库实际上是插入的全部（多条）数据</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**     * 将需要归集的数据插入到本地库t_szsh_push     * @param baseQuartzProperties 调度的配置条件     * @param currentDate 指定某个日期，用于查询这个日期的数据统计     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> GenericResponse<span class="token operator">&lt;</span>Object<span class="token operator">></span> <span class="token function">pushData</span><span class="token punctuation">(</span>BaseQuartzProperties baseQuartzProperties<span class="token punctuation">,</span> String currentDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>TSzshCodeDO<span class="token operator">></span> listLeft <span class="token operator">=</span> tSzshCodeService<span class="token punctuation">.</span><span class="token function">selectCodeDate</span><span class="token punctuation">(</span>digitalProperties<span class="token punctuation">.</span><span class="token function">getBaseQuartz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCdsqSzshBsm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> digitalProperties<span class="token punctuation">.</span><span class="token function">getBaseQuartz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPushByQxdmXzqjb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>CdsqDO<span class="token operator">></span> listRight <span class="token operator">=</span> cdsqDataService<span class="token punctuation">.</span><span class="token function">selectCdsqCodeAndNum</span><span class="token punctuation">(</span>digitalProperties<span class="token punctuation">.</span><span class="token function">getBaseQuartz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSqzt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> currentDate<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> flat <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// LogbackHelper.logDigitalSociety.info(listRight.toString());</span>        <span class="token comment" spellcheck="true">/**         * left join         * 实现将xzqbm字段值相等的两个List结果进行左连接         * listLeft归集listRight中的字段         */</span>        List<span class="token operator">&lt;</span>TSzshCodeDO<span class="token operator">></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>TSzshCodeDO t <span class="token operator">:</span> listLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>CdsqDO<span class="token operator">></span> cdsqDOList <span class="token operator">=</span> listRight<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>right <span class="token operator">-</span><span class="token operator">></span> right<span class="token punctuation">.</span><span class="token function">getXzqbm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getXzqbm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// LogbackHelper.logDigitalSociety.info(cdsqDOList.toString());</span>            t<span class="token punctuation">.</span><span class="token function">setCdsqDOList</span><span class="token punctuation">(</span>cdsqDOList<span class="token punctuation">)</span><span class="token punctuation">;</span>            LogbackHelper<span class="token punctuation">.</span>logDigitalSociety<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//判断list不为null且不为空</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>CollectionUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getCdsqDOList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                LogbackHelper<span class="token punctuation">.</span>logDigitalSociety<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>cdsqDOList<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                LogbackHelper<span class="token punctuation">.</span>logDigitalSociety<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                LogbackHelper<span class="token punctuation">.</span>logDigitalSociety<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"cdsq表数据正在插入t_szsh_push......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                t<span class="token punctuation">.</span><span class="token function">setSysSjzt</span><span class="token punctuation">(</span><span class="token string">"insert"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                t<span class="token punctuation">.</span><span class="token function">setServiceTime</span><span class="token punctuation">(</span>currentDate<span class="token punctuation">)</span><span class="token punctuation">;</span>                tSzshCodeService<span class="token punctuation">.</span><span class="token function">insertCdsqDataToPush</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                LogbackHelper<span class="token punctuation">.</span>logDigitalSociety<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"cdsq表数据插入t_szsh_push完成"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                flat <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>flat <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> GenericResponse<span class="token punctuation">.</span><span class="token function">succeed</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">"查询成功，插入t_t_szsh_push成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> GenericResponse<span class="token punctuation">.</span><span class="token function">succeed</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token string">"这天没有数据，插入t_t_szsh_push失败，等会再试试"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-Date日期字段处理"><a href="#3-Date日期字段处理" class="headerlink" title="3.Date日期字段处理"></a>3.Date日期字段处理</h2><h3 id="3-1-DateTimeFormat-JsonFormat"><a href="#3-1-DateTimeFormat-JsonFormat" class="headerlink" title="3.1@DateTimeFormat@JsonFormat"></a>3.1@DateTimeFormat@JsonFormat</h3><p>参考<a href="https://www.cnblogs.com/mracale/p/9828346.html" target="_blank" rel="noopener">https://www.cnblogs.com/mracale/p/9828346.html</a></p><p>​       <a href="https://blog.csdn.net/coder1998/article/details/106450905/" target="_blank" rel="noopener">https://blog.csdn.net/coder1998/article/details/106450905/</a></p><p>ERROR:</p><p><code>Failed to convert value of type java.lang.String to required type java.util.Date 报错</code></p><p>实体类</p><pre class="line-numbers language-markdown"><code class="language-markdown">注解@JsonFormat主要是后台到前台的时间格式的转换注解@DataFormAT主要是前后到后台的时间格式的转换错误翻译：首先上面的错误的意思是 前台传递 string类型的数据，后台使用Date类型去接收，但是报错了。解决之道:springboot要解决这个问题很简单,在接收的字段上面，添加下面的注解 就OK注解说明：@DateTimeFormat 该注解自动会解析处理,会把字符串类型 按照格式yyyy-MM-dd HH:mm:ss 转换成时间类型@JsonFormat这个注解是从数据库查询出来，返回到页面的的转换. 把时间类型 转换成JSON格式类型，前提取出进行展示.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//接收时间类型</span><span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern<span class="token operator">=</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">,</span>timezone <span class="token operator">=</span> <span class="token string">"GMT+8"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//返回时间类型</span><span class="token keyword">private</span> Date service_time<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Pom.xml依赖</p><pre class="line-numbers language-xml"><code class="language-xml">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-annotations<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.8.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-databind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.8.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.codehaus.jackson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-mapper-asl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.9.13<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>joda-time<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>joda-time<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2util-Date转sql-date"><a href="#3-2util-Date转sql-date" class="headerlink" title="3.2util.Date转sql.date"></a>3.2util.Date转sql.date</h3><p>参考 <a href="https://blog.csdn.net/qq_36648082/article/details/100012238" target="_blank" rel="noopener">https://blog.csdn.net/qq_36648082/article/details/100012238</a></p><pre class="line-numbers language-java"><code class="language-java">SimpleDateFormat sdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//格式化规则</span>Date date <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//获得你要处理的时间 Date型</span>String strDate<span class="token operator">=</span> sdf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//格式化成yyyy-MM-dd格式的时间字符串</span>Date newDate <span class="token operator">=</span>sdf<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>strDate<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//最后转换成 java.sql.Date类型数据就可以了 注意：最开始时间数据类型是 java.util.Date类型  </span>java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>Date resultDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>Date</span><span class="token punctuation">(</span>newDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3将字符串格式转换成日期格式"><a href="#3-3将字符串格式转换成日期格式" class="headerlink" title="3.3将字符串格式转换成日期格式"></a>3.3将字符串格式转换成日期格式</h3><p>将字符串格式“2020-02-02” 转换成日期Date格式“2020-02-02”</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**     * 将字符串格式“2020-02-02” 转换成日期Date格式“2020-02-02”     *     * @param sDate     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Date <span class="token function">StringToDateForMate</span><span class="token punctuation">(</span>String sDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Date res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            SimpleDateFormat sdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res <span class="token operator">=</span> sdf<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>sDate<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-4获取当前时间的前一天"><a href="#3-4获取当前时间的前一天" class="headerlink" title="3.4获取当前时间的前一天"></a>3.4获取当前时间的前一天</h3><p>参考<a href="https://blog.csdn.net/weixin_34192993/article/details/92188291" target="_blank" rel="noopener">https://blog.csdn.net/weixin_34192993/article/details/92188291</a></p><p><a href="https://www.cnblogs.com/zhuyeshen/p/12776778.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhuyeshen/p/12776778.html</a></p><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * 获取当前时间的前一天     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getYesterDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        SimpleDateFormat sdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Date date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Calendar now <span class="token operator">=</span> Calendar<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        now<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sdf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        now<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_MONTH<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String yesDay <span class="token operator">=</span> sdf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span>  yesDay<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java">Date today <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取今天的日期</span>Calendar c <span class="token operator">=</span> Calendar<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>today<span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_MONTH<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Date tomorrow <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这是明天</span>c<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>today<span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_MONTH<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Date yesterday <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这是昨天</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-mybatis"><a href="#4-mybatis" class="headerlink" title="4.mybatis"></a>4.mybatis</h2><h3 id="4-1-取值"><a href="#4-1-取值" class="headerlink" title="4.1#取值"></a>4.1#取值</h3><p>参考<a href="https://blog.csdn.net/u014520006/article/details/91042947" target="_blank" rel="noopener">https://blog.csdn.net/u014520006/article/details/91042947</a></p><p>使用mybatis报错：</p><p> <strong>Error setting non null for parameter #1 with JdbcType null .</strong></p><p>使用了#{}的不能用这个双引号</p><p><strong>报错#{}导致的The error may involve defaultParameterMap的问题</strong></p><p>参考<a href="http://www.manongjc.com/detail/13-jepoqljrhtngpqk.html" target="_blank" rel="noopener">http://www.manongjc.com/detail/13-jepoqljrhtngpqk.html</a></p><p>直接取值使用 ${} 接受表名，#{}接受其他参数</p><pre class="line-numbers language-sql"><code class="language-sql">  <span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">"selectCdsqErrorDataReToSzsh"</span> resultType<span class="token operator">=</span><span class="token string">"com.gisquest.realestate.data.supervise.digital.entity.TSzshPushDO"</span><span class="token operator">></span>    <span class="token keyword">SELECT</span>    app_name<span class="token punctuation">,</span>function_name_1<span class="token punctuation">,</span>service_num<span class="token punctuation">,</span> service_time<span class="token punctuation">,</span>service_type<span class="token punctuation">,</span>service_area_code<span class="token punctuation">,</span>    service_access<span class="token punctuation">,</span>source_unit<span class="token punctuation">,</span>source_unit_code<span class="token punctuation">,</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> handle_time <span class="token punctuation">,</span>sys_sjzt<span class="token punctuation">,</span>sys_record_guid    <span class="token keyword">FROM</span> t_szsh_push    <span class="token keyword">WHERE</span> szsh_code_bsm<span class="token operator">=</span><span class="token number">2</span> <span class="token operator">and</span> tszt<span class="token operator">=</span><span class="token number">2</span> <span class="token operator">and</span> tscs <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span><span class="token operator">=</span> ${maxTscs} <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span>${maxRows}<span class="token punctuation">;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>${maxTscs}</code>直接传值 用${}</p><p>mybatis 为我们提供了两种支持动态 sql 的语法：#{} 以及 ${}</p><p>　　#{} 的参数替换是发生在 DBMS 中，而 ${} 则发生在动态解析过程中</p><p>　　${} 会导致 sql 注入的问题，优先使用 #{} </p><p><strong>比较运算符</strong></p><p>参考：<a href="https://blog.csdn.net/qq_35868412/article/details/80238754" target="_blank" rel="noopener">https://blog.csdn.net/qq_35868412/article/details/80238754</a></p><p> 参考：<a href="https://www.jianshu.com/p/c5095ea46471" target="_blank" rel="noopener">https://www.jianshu.com/p/c5095ea46471</a> </p><h3 id="4-2select"><a href="#4-2select" class="headerlink" title="4.2select"></a>4.2select</h3><p>返回结果不止一行  用map接收</p><p>column=”service_area_code” 数据库表的字段</p><p>property=”xzqbm” 实体类的字段</p><pre class="line-numbers language-java"><code class="language-java">  <span class="token operator">&lt;</span>resultMap id<span class="token operator">=</span><span class="token string">"CodeAndNum"</span> type<span class="token operator">=</span><span class="token string">"com.gisquest.realestate.data.supervise.digital.entity.CdsqDO"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>result column<span class="token operator">=</span><span class="token string">"service_area_code"</span> property<span class="token operator">=</span><span class="token string">"xzqbm"</span> jdbcType<span class="token operator">=</span><span class="token string">"VARCHAR"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>result column<span class="token operator">=</span><span class="token string">"service_num"</span> property<span class="token operator">=</span><span class="token string">"service_num"</span> jdbcType<span class="token operator">=</span><span class="token string">"VARCHAR"</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>resultMap<span class="token operator">></span>  <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"selectCdsqCodeAndNum"</span>  resultMap<span class="token operator">=</span><span class="token string">"CodeAndNum"</span><span class="token operator">></span>    select <span class="token function">substring</span><span class="token punctuation">(</span>xzqbm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> as service_area_code<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> as service_num    from cdsq    where  sqzt<span class="token operator">=</span>#<span class="token punctuation">{</span>sqzt<span class="token punctuation">}</span>  and <span class="token function">substring</span><span class="token punctuation">(</span>cjsj<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">=</span> #<span class="token punctuation">{</span>cjsj<span class="token punctuation">}</span>    group by <span class="token function">substring</span><span class="token punctuation">(</span>xzqbm<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> limit <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>返回结果不止一行还可以用 resutType</p><pre class="line-numbers language-java"><code class="language-java"> <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"selectCdsqDataToSzsh"</span> resultType<span class="token operator">=</span><span class="token string">"com.gisquest.realestate.data.supervise.digital.entity.TSzshPushDO"</span><span class="token operator">></span>    SELECT    app_name<span class="token punctuation">,</span>function_name_1<span class="token punctuation">,</span>service_num<span class="token punctuation">,</span> service_time<span class="token punctuation">,</span>service_type<span class="token punctuation">,</span>service_area_code<span class="token punctuation">,</span>    service_access<span class="token punctuation">,</span>source_unit<span class="token punctuation">,</span>source_unit_code<span class="token punctuation">,</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> as handle_time <span class="token punctuation">,</span>sys_sjzt<span class="token punctuation">,</span>sys_record_guid    FROM t_szsh_push    WHERE szsh_code_bsm<span class="token operator">=</span><span class="token number">2</span> and tszt<span class="token operator">=</span><span class="token number">0</span> and service_time<span class="token operator">=</span>#<span class="token punctuation">{</span>service_time<span class="token punctuation">}</span> LIMIT <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-3insert-amp-foreach"><a href="#4-3insert-amp-foreach" class="headerlink" title="4.3insert &amp;foreach"></a>4.3insert &amp;foreach</h3><h4 id="4-3-1用foreach遍历List类型集合"><a href="#4-3-1用foreach遍历List类型集合" class="headerlink" title="4.3.1用foreach遍历List类型集合"></a>4.3.1用foreach遍历List类型集合</h4><p>⚠️ 在foreach标签里写了（ ）就不用 open=”(“ close=”)”</p><pre class="line-numbers language-java"><code class="language-java">  <span class="token operator">&lt;</span>insert id<span class="token operator">=</span><span class="token string">"insertCdsqDataToQzk"</span> parameterType<span class="token operator">=</span><span class="token string">"com.gisquest.realestate.data.supervise.digital.entity.TSzshPushDO"</span><span class="token operator">></span>    insert into <span class="token function">szsh_app_service_info</span><span class="token punctuation">(</span>    app_name<span class="token punctuation">,</span>function_name_1<span class="token punctuation">,</span>service_num<span class="token punctuation">,</span>service_time<span class="token punctuation">,</span>service_type<span class="token punctuation">,</span>service_area_code<span class="token punctuation">,</span>    service_access<span class="token punctuation">,</span> source_unit<span class="token punctuation">,</span>source_unit_code<span class="token punctuation">,</span>handle_time<span class="token punctuation">,</span>sys_sjzt<span class="token punctuation">,</span>sys_record_guid    <span class="token punctuation">)</span>    values    <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">"list"</span> item<span class="token operator">=</span><span class="token string">"item"</span>  separator<span class="token operator">=</span><span class="token string">","</span> index<span class="token operator">=</span><span class="token string">"index"</span><span class="token operator">></span>      <span class="token punctuation">(</span>#<span class="token punctuation">{</span>item<span class="token punctuation">.</span>app_name<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>item<span class="token punctuation">.</span>function_name_1<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>item<span class="token punctuation">.</span>service_num<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>item<span class="token punctuation">.</span>service_time<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>item<span class="token punctuation">.</span>service_type<span class="token punctuation">}</span><span class="token punctuation">,</span> #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>service_area_code<span class="token punctuation">}</span><span class="token punctuation">,</span>      #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>service_access<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>item<span class="token punctuation">.</span>source_unit<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>item<span class="token punctuation">.</span>source_unit_code<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>item<span class="token punctuation">.</span>sys_sjzt<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>item<span class="token punctuation">.</span>sys_record_guid<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>insert<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-3-2用foreach遍历Object对象，Object对象里有List集合字段"><a href="#4-3-2用foreach遍历Object对象，Object对象里有List集合字段" class="headerlink" title="4.3.2用foreach遍历Object对象，Object对象里有List集合字段"></a>4.3.2用foreach遍历Object对象，Object对象里有List集合字段</h4><p><strong>TSzshPushDO</strong>实体类</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TSzshCodeDO</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 标识码，唯一主键     */</span>    <span class="token keyword">private</span> Long bsm<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 应用名称，如“不动产浙里登”     */</span>    <span class="token keyword">private</span> String appName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 一级功能名称，如“权属查询”，“电子权证”等     */</span>    <span class="token keyword">private</span> String functionName1<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 服务类别（查询类/办理类）     */</span>    <span class="token keyword">private</span> String serviceType<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 服务入口（浙里办，微信，支付宝等）     */</span>    <span class="token keyword">private</span> String serviceAccess<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 来源部门（省自然资源厅（省海洋局））     */</span>    <span class="token keyword">private</span> String sourceUnit<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 来源部门单位     */</span>    <span class="token keyword">private</span> String sourceUnitCode<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 服务编码，自定义的属性，如（监管 jg_01,一窗 yc_01）     */</span>    <span class="token keyword">private</span> String serviceCode<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 行政区编码     */</span>    <span class="token keyword">private</span> String xzqbm<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 行政区名称     *     */</span>    <span class="token keyword">private</span> String xzqmc<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 数字社会标识码  1:电子权证   2:权属查询（查家庭/查个人）     */</span>    <span class="token keyword">private</span> String szshbsm<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 行政区级别     */</span>    <span class="token keyword">private</span> String xzqjb<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//待会要赋值进去的对象</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>TCertLogDO<span class="token operator">></span> tCertLogDOList<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//待会要赋值进去的对象</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>CdsqDO<span class="token operator">></span> cdsqDOList<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 1L<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>foreach 里的collection写tCertLogDOList 字段属性名</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>  将表t_cert_log数据插入到t_szsh_push <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>insert id<span class="token operator">=</span><span class="token string">"insertDataToPush"</span> parameterType<span class="token operator">=</span><span class="token string">"com.gisquest.realestate.data.supervise.digital.entity.TSzshCodeDO"</span><span class="token operator">></span>    insert into <span class="token function">t_szsh_push</span><span class="token punctuation">(</span>    szsh_code_bsm<span class="token punctuation">,</span>sys_sjzt<span class="token punctuation">,</span>sys_record_guid<span class="token punctuation">,</span>app_name<span class="token punctuation">,</span>function_name_1<span class="token punctuation">,</span>        service_type<span class="token punctuation">,</span>service_access<span class="token punctuation">,</span>source_unit<span class="token punctuation">,</span>source_unit_code<span class="token punctuation">,</span>service_code<span class="token punctuation">,</span>        service_area_code<span class="token punctuation">,</span>service_num<span class="token punctuation">,</span>service_time<span class="token punctuation">,</span>handle_time<span class="token punctuation">,</span>gxsj<span class="token punctuation">,</span>tszt<span class="token punctuation">,</span>tscs<span class="token punctuation">,</span>tssj    <span class="token punctuation">)</span>    <span class="token function">values</span><span class="token punctuation">(</span>    #<span class="token punctuation">{</span>bsm<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>sysSjzt<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">CONCAT</span><span class="token punctuation">(</span><span class="token function">date_format</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'%Y%m%d'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'_'</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>xzqbm<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">'01'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>appName<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>functionName1<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>serviceType<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>serviceAccess<span class="token punctuation">}</span><span class="token punctuation">,</span>    #<span class="token punctuation">{</span>sourceUnit<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>sourceUnitCode<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>serviceCode<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">concat</span><span class="token punctuation">(</span>#<span class="token punctuation">{</span>xzqbm<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">'01'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">"tCertLogDOList"</span> item<span class="token operator">=</span><span class="token string">"item"</span> index<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>      #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>service_num<span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">></span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>serviceTime<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>insert<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-4-resultType与parameterType属性的区别"><a href="#4-4-resultType与parameterType属性的区别" class="headerlink" title="4.4 resultType与parameterType属性的区别"></a>4.4 resultType与parameterType属性的区别</h4><h3 id="4-5-selectkey标签的作用"><a href="#4-5-selectkey标签的作用" class="headerlink" title="4.5 selectkey标签的作用"></a>4.5 selectkey标签的作用</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>selectKey keyProperty<span class="token operator">=</span><span class="token string">"bsmMain"</span> order<span class="token operator">=</span><span class="token string">"AFTER"</span> resultType<span class="token operator">=</span><span class="token string">"java.lang.Long"</span><span class="token operator">></span>      SELECT <span class="token function">LAST_INSERT_ID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> as bsmMain<span class="token operator">&lt;</span><span class="token operator">/</span>selectKey<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5-定时任务调度"><a href="#5-定时任务调度" class="headerlink" title="5.定时任务调度"></a>5.定时任务调度</h2><h3 id="5-1在定时调度的service层使用-Autowired对应的Impl取值为null"><a href="#5-1在定时调度的service层使用-Autowired对应的Impl取值为null" class="headerlink" title="5.1在定时调度的service层使用@Autowired对应的Impl取值为null"></a>5.1在定时调度的service层使用@Autowired对应的Impl取值为null</h3><p><strong>处理</strong></p><p>使用private 申明 其他Service层的service，然后创建带参数的构造方法</p><p>用this.XXXService.XX来调用接口方法</p><p>⚠️因为平时在调用service层时都是在controller中，有配置扫描注入，spring会根据配置自动注入所依赖的服务层。</p><p>但因我们写的工具类不属于controller层，所以当所写接口需要调用服务层是，常常会为NULL。</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">private</span> CdsqAppService cdsqAppService<span class="token punctuation">;</span>    <span class="token keyword">private</span> DigitalProperties digitalProperties<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">public</span> <span class="token function">CdsqQuartzServiceImpl</span><span class="token punctuation">(</span>CdsqAppService cdsqAppService<span class="token punctuation">,</span> DigitalProperties digitalProperties<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cdsqAppService <span class="token operator">=</span> cdsqAppService<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>digitalProperties <span class="token operator">=</span> digitalProperties<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>cdsqAppService<span class="token punctuation">.</span>pushDataXXX；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2static类型autowired-注入失败"><a href="#5-2static类型autowired-注入失败" class="headerlink" title="5.2static类型autowired 注入失败"></a>5.2static类型autowired 注入失败</h3><p>参考：<a href="https://www.cnblogs.com/zhouyeqin/p/8150594.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhouyeqin/p/8150594.html</a></p><p>解决：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">public</span>   CdsqAppService cdsqAppService<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">static</span> CdsqAppService cdsqAppService1<span class="token punctuation">;</span><span class="token annotation punctuation">@PostConstruct</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initStaticCdsqAppService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  cdsqAppService1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cdsqAppService<span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java">GenericResponse<span class="token operator">&lt;</span>Object<span class="token operator">></span> res <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cdsqAppService1<span class="token punctuation">.</span><span class="token function">selectDataToPush</span><span class="token punctuation">(</span>baseQuartzProperties<span class="token punctuation">,</span> currentDate<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用<code> this.cdsqAppService1</code> 调用service方法</p><p><code>@Autowired</code></p><p>``@PostConstruct`</p><h2 id="6-SpingBoot启动问题"><a href="#6-SpingBoot启动问题" class="headerlink" title="6.SpingBoot启动问题"></a>6.SpingBoot启动问题</h2><h3 id="6-1Controller层问题"><a href="#6-1Controller层问题" class="headerlink" title="6.1Controller层问题"></a>6.1Controller层问题</h3><p><strong>报错</strong></p><p><code>org.springframework.web.bind.MissingPathVariableException: Missing URI template variable ‘date‘ for</code></p><p><strong>解决</strong></p><p>@RequestMapping注解中 value的参数要用{ }</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"cdsq数据推到push表"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/cdsqpush/{date}"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="6-2Controller层的路径开始不能一样"><a href="#6-2Controller层的路径开始不能一样" class="headerlink" title="6.2Controller层的路径开始不能一样"></a>6.2Controller层的路径开始不能一样</h3><p><strong>错误例子</strong></p><pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/cdsqpush/{date1}"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span> <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/cdsqpush/{date1}"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>/cdsqpush</code>相同会报错</p><p><strong>正确例子</strong></p><pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/cdsqpush1/{date1}"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span> <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/cdsqpush2/{date1}"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="1-Swagger接口地址"><a href="#1-Swagger接口地址" class="headerlink" title="1.Swagger接口地址"></a>1.Swagger接口地址</h3><p><a href="http://127.0.0.1:39129/swagger-ui/index.html" target="_blank" rel="noopener">http://127.0.0.1:39129/swagger-ui/index.html</a></p><h3 id="2-Java程序生成的Jar在Linux和Windows兼容问题"><a href="#2-Java程序生成的Jar在Linux和Windows兼容问题" class="headerlink" title="2.Java程序生成的Jar在Linux和Windows兼容问题"></a>2.Java程序生成的Jar在Linux和Windows兼容问题</h3><p><strong>Error</strong></p><p><code>Invalid or corrupt jarfile</code></p><p>参考<a href="https://blog.csdn.net/u012477338/article/details/79216607" target="_blank" rel="noopener">https://blog.csdn.net/u012477338/article/details/79216607</a></p><p><strong>分析</strong></p><p>复制jar包的时候不能通过qq传输,也不知直接从windows直接拖到其他地方</p><p><strong>解决</strong></p><p>通过scp从windows传输到linux</p><pre class="line-numbers language-bash"><code class="language-bash">Administrator@MTC-20210705EUZ MINGW64 ~/Desktop$ <span class="token function">scp</span> ~/Desktop/test-jar.zip sunyun@192.168.50.122:~/Desktop<span class="token punctuation">(</span>sunyun@192.168.50.122<span class="token punctuation">)</span> Password:test-jar.zip                                  100%   68MB   4.0MB/s   00:17<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后在linux下解压启动就不会报错了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mybatis-generator-gui的使用</title>
      <link href="posts/b349adba/"/>
      <url>posts/b349adba/</url>
      
        <content type="html"><![CDATA[<h1 id="mybatis-generator-gui的使用"><a href="#mybatis-generator-gui的使用" class="headerlink" title="mybatis-generator-gui的使用"></a>mybatis-generator-gui的使用</h1><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><img src="/posts/b349adba/image-20210713171400650.png" alt="image-20210713171400650" style="zoom:80%;"><h2 id="对应效果"><a href="#对应效果" class="headerlink" title="对应效果"></a>对应效果</h2><img src="/posts/b349adba/image-20210713171633447.png" alt="image-20210713171633447" style="zoom:50%;">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mac的zsh终端mvn命令无效解决</title>
      <link href="posts/fcdd7f2a/"/>
      <url>posts/fcdd7f2a/</url>
      
        <content type="html"><![CDATA[<h1 id="mac的zsh终端mvn命令无效解决"><a href="#mac的zsh终端mvn命令无效解决" class="headerlink" title="mac的zsh终端mvn命令无效解决"></a>mac的zsh终端mvn命令无效解决</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><img src="/posts/fcdd7f2a/image-20210711201058103.png" alt="image-20210711201058103" style="zoom:50%;"><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h4 id="1、编辑-zshrc-文件"><a href="#1、编辑-zshrc-文件" class="headerlink" title="1、编辑 .zshrc 文件"></a>1、编辑 .zshrc 文件</h4><p><code>vim ~/.zshrc</code></p><h4 id="2、然后在末尾加上"><a href="#2、然后在末尾加上" class="headerlink" title="2、然后在末尾加上"></a>2、然后在末尾加上</h4><p><code>source ~/.bash_profile；</code></p><p>保存退出</p><h4 id="3、让配置文件修改后生效"><a href="#3、让配置文件修改后生效" class="headerlink" title="3、让配置文件修改后生效"></a>3、让配置文件修改后生效</h4><p><code>source ~/.bash_profile</code></p><h2 id="效果如图"><a href="#效果如图" class="headerlink" title="效果如图"></a>效果如图</h2><img src="/posts/fcdd7f2a/image-20210711201255785.png" alt="image-20210711201255785" style="zoom:50%;"><p>参考 <a href="https://www.liuyanzhao.com/6489.html" target="_blank" rel="noopener">https://www.liuyanzhao.com/6489.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>注解@Scheduled</title>
      <link href="posts/ec4495c3/"/>
      <url>posts/ec4495c3/</url>
      
        <content type="html"><![CDATA[<h1 id="注解-Scheduled"><a href="#注解-Scheduled" class="headerlink" title="注解@Scheduled"></a>注解@Scheduled</h1><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@ConditionalOnExpression</span><span class="token punctuation">(</span><span class="token string">"${gisq.platform.supervise.collection.analysisquartz}==true"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnalysisQuartz</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    ReceiveRgAppServiceImpl receiveRgAppService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>fixedDelay <span class="token operator">=</span> <span class="token number">15000</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">analysis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        LogbackHelper<span class="token punctuation">.</span>logjx<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"定时任务开始触发解析数据包服务，请稍后……"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        receiveRgAppService<span class="token punctuation">.</span><span class="token function">analysisByDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-属性fixedDelay"><a href="#1-属性fixedDelay" class="headerlink" title="1.属性fixedDelay"></a>1.属性<code>fixedDelay</code></h3><p>时间间隔是根据上次的任务结束的时候开始算</p><p><code>fixedDelay = 15*1000</code>  方法执行结束后，开始计算时间，当时间达到15秒，就开始再次执行该方法</p><h3 id="2-属性corn-quot-0-59-23-quot"><a href="#2-属性corn-quot-0-59-23-quot" class="headerlink" title="2.属性corn=&quot;0 59 23 * * ?&quot;"></a>2.属性<code>corn=&quot;0 59 23 * * ?&quot;</code></h3><pre class="line-numbers language-markdown"><code class="language-markdown">cronExpression定义时间规则，Cron表达式由6或7个空格分隔的时间字段组成：秒 分钟 小时 日期 月份 星期 年（可选）；字段　　     允许值　　   允许的特殊字符 秒     　 0-59 　　　　, - <span class="token italic"><span class="token punctuation">*</span> / 分     　 0-59　　　　 , - <span class="token punctuation">*</span></span> / 小时      0-23 　　　　, - <span class="token italic"><span class="token punctuation">*</span> / 日期      1-31 　　　　, - <span class="token punctuation">*</span></span> ? / L W C 月份      1-12 　　　　, - <span class="token italic"><span class="token punctuation">*</span> / 星期      1-7 　　　　  , - <span class="token punctuation">*</span></span> ? / L C # 年     1970-2099 　　, - <span class="token italic"><span class="token punctuation">*</span> /解析：0/5 <span class="token punctuation">*</span></span> <span class="token italic"><span class="token punctuation">*</span> <span class="token punctuation">*</span></span> <span class="token italic"><span class="token punctuation">*</span> ? ： 每5秒执行一次“<span class="token punctuation">*</span></span>”字符被用来指定所有的值。如："<span class="token italic"><span class="token punctuation">*</span>"在分钟的字段域里表示“每分钟”。 “?”字符只在日期域和星期域中使用。它被用来指定“非明确的值”。当你需要通过在这两个域中的一个来指定一些东西的时候，它是有用的。看下面的例子你就会明白。 月份中的日期和星期中的日期这两个元素时互斥的一起应该通过设置一个问号来表明不想设置那个字段。“-”字符被用来指定一个范围。如：“10-12”在小时域意味着“10点、11点、12点”。“,”字符被用来指定另外的值。如：“MON,WED,FRI”在星期域里表示”星期一、星期三、星期五”。“/”字符用于指定增量。如：“0/15”在秒域意思是每分钟的0，15，30和45秒。“5/15”在分钟域表示每小时的5，20，35和50。 符号“<span class="token punctuation">*</span></span>”在“/”前面（如：*/10）等价于0在“/”前面（如：0/10）。记住一条本质：表达式的每个数值域都是一个有最大值和最小值的集合，如： 秒域和分钟域的集合是0-59，日期域是1-31，月份域是1-12。字符“/”可以帮助你在每个字符域中取相应的数值。如：“7/6”在月份域的时候只 有当7月的时候才会触发，并不是表示每个6月。L是‘last’的省略写法可以表示day-of-month和day-of-week域，但在两个字段中的意思不同，例如day-of- month域中表示一个月的最后一天。如果在day-of-week域表示‘7’或者‘SAT’，如果在day-of-week域中前面加上数字，它表示 一个月的最后几天，例如‘6L’就表示一个月的最后一个星期五。字符“W”只允许日期域出现。这个字符用于指定日期的最近工作日。例如：如果你在日期域中写 “15W”，表示：这个月15号最近的工作日。所以，如果15号是周六，则任务会在14号触发。如果15好是周日，则任务会在周一也就是16号触发。如果 是在日期域填写“1W”即使1号是周六，那么任务也只会在下周一，也就是3号触发，“W”字符指定的最近工作日是不能够跨月份的。字符“W”只能配合一个 单独的数值使用，不能够是一个数字段，如：1-15W是错误的。“L”和“W”可以在日期域中联合使用，LW表示这个月最后一周的工作日。字符“#”只允许在星期域中出现。这个字符用于指定本月的某某天。例如：“6#3”表示本月第三周的星期五（6表示星期五，3表示第三周）。“2#1”表示本月第一周的星期一。“4#5”表示第五周的星期三。字符“C”允许在日期域和星期域出现。这个字符依靠一个指定的“日历”。也就是说这个表达式的值依赖于相关的“日历”的计算结果，如果没有“日历” 关联，则等价于所有包含的“日历”。如：日期域是“5C”表示关联“日历”中第一天，或者这个月开始的第一天的后5天。星期域是“1C”表示关联“日历” 中第一天，或者星期的第一天的后1天，也就是周日的后一天（周一）。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-corn例子："><a href="#3-corn例子：" class="headerlink" title="3.corn例子："></a>3.corn例子：</h3><pre class="line-numbers language-markdown"><code class="language-markdown">0 0 10,14,16 <span class="token italic"><span class="token punctuation">*</span> <span class="token punctuation">*</span></span> ? 每天上午10点，下午2点，4点0 0/30 9-17 <span class="token italic"><span class="token punctuation">*</span> <span class="token punctuation">*</span></span> ?   朝九晚五工作时间内每半小时0 0 12 ? <span class="token italic"><span class="token punctuation">*</span> WED 表示每个星期三中午12点 "0 0 12 <span class="token punctuation">*</span></span> <span class="token italic"><span class="token punctuation">*</span> ?" 每天中午12点触发 "0 15 10 ? <span class="token punctuation">*</span></span> <span class="token italic"><span class="token punctuation">*</span>" 每天上午10:15触发 "0 15 10 <span class="token punctuation">*</span></span> <span class="token italic"><span class="token punctuation">*</span> ?" 每天上午10:15触发 "0 15 10 <span class="token punctuation">*</span></span> <span class="token italic"><span class="token punctuation">*</span> ? <span class="token punctuation">*</span></span>" 每天上午10:15触发 "0 15 10 <span class="token italic"><span class="token punctuation">*</span> <span class="token punctuation">*</span></span> ? 2005" 2005年的每天上午10:15触发 "0 <span class="token italic"><span class="token punctuation">*</span> 14 <span class="token punctuation">*</span></span> <span class="token italic"><span class="token punctuation">*</span> ?" 在每天下午2点到下午2:59期间的每1分钟触发 "0 0/5 14 <span class="token punctuation">*</span></span> <span class="token italic"><span class="token punctuation">*</span> ?" 在每天下午2点到下午2:55期间的每5分钟触发 "0 0/5 14,18 <span class="token punctuation">*</span></span> <span class="token italic"><span class="token punctuation">*</span> ?" 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发 "0 0-5 14 <span class="token punctuation">*</span></span> <span class="token italic"><span class="token punctuation">*</span> ?" 在每天下午2点到下午2:05期间的每1分钟触发 "0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发 "0 15 10 ? <span class="token punctuation">*</span></span> MON-FRI" 周一至周五的上午10:15触发 "0 15 10 15 <span class="token italic"><span class="token punctuation">*</span> ?" 每月15日上午10:15触发 "0 15 10 L <span class="token punctuation">*</span></span> ?" 每月最后一日的上午10:15触发 "0 15 10 ? <span class="token italic"><span class="token punctuation">*</span> 6L" 每月的最后一个星期五上午10:15触发 "0 15 10 ? <span class="token punctuation">*</span></span> 6L 2002-2005" 2002年至2005年的每月的最后一个星期五上午10:15触发 "0 15 10 ? * 6#3" 每月的第三个星期五上午10:15触发<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-application-yml配置"><a href="#4-application-yml配置" class="headerlink" title="4.application.yml配置"></a>4.application.yml配置</h3><pre class="line-numbers language-java"><code class="language-java">#按分钟定时触发数据签名推送服务，默认 <span class="token number">30</span> 分钟fixedDelaytime<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">30</span> <span class="token number">22</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">?</span>#设置失败重推的定时时间，一般设置为晚上 <span class="token number">10</span> 点将日志推送失败的数据再次推送failToPushfixedDelaytime<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">22</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">?</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2021-7-15新建Demo测试"><a href="#2021-7-15新建Demo测试" class="headerlink" title="2021-7-15新建Demo测试"></a>2021-7-15新建Demo测试</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Logback实例</title>
      <link href="posts/38737c4e/"/>
      <url>posts/38737c4e/</url>
      
        <content type="html"><![CDATA[<h1 id="Logback实例"><a href="#Logback实例" class="headerlink" title="Logback实例"></a>Logback实例</h1><h2 id="resources文件下"><a href="#resources文件下" class="headerlink" title="resources文件下"></a>resources文件下</h2><h3 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h3><pre class="line-numbers language-java"><code class="language-java">logging<span class="token operator">:</span>  level<span class="token operator">:</span> debug<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="logback-yml"><a href="#logback-yml" class="headerlink" title="logback.yml"></a>logback.yml</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>scan<span class="token operator">:</span>当此属性设置为<span class="token boolean">true</span>时，配置文件如果发生改变，将会被重新加载，默认值为<span class="token boolean">true</span>。scanPeriod<span class="token operator">:</span>设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为<span class="token boolean">true</span>时，此属性生效。默认的时间间隔为<span class="token number">1</span>分钟。debug<span class="token operator">:</span>当此属性设置为<span class="token boolean">true</span>时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为<span class="token boolean">false</span>。<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>configuration debug<span class="token operator">=</span><span class="token string">"true"</span> scan<span class="token operator">=</span><span class="token string">"true"</span> scanPeriod<span class="token operator">=</span><span class="token string">"60 seconds"</span> packagingData<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    property：用来定义变量值的标签，<span class="token operator">&lt;</span>property<span class="token operator">></span> 有两个属性，name和value。通过<span class="token operator">&lt;</span>property<span class="token operator">></span>定义的值会被插入到logger上下文中。定义变量后，可以使“$<span class="token punctuation">{</span><span class="token punctuation">}</span>”来使用变量。    例如使用<span class="token operator">&lt;</span>property<span class="token operator">></span>定义上下文名称，然后在<span class="token operator">&lt;</span>contentName<span class="token operator">></span>设置logger上下文时使用。    <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"contextName"</span> value<span class="token operator">=</span><span class="token string">"context-name"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log_home"</span> value<span class="token operator">=</span><span class="token string">"/Users/sunyun/Downloads"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    contextName：每个logger都关联到logger上下文，默认上下文名称为“<span class="token keyword">default</span>”。    但可以使用<span class="token operator">&lt;</span>contextName<span class="token operator">></span>设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改。    <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>contextName<span class="token operator">></span>$<span class="token punctuation">{</span>contextName<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>contextName<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> appender：日志目的地 start <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 标准输出：console <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">"console"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.ConsoleAppender"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> encoder 默认配置为PatternLayoutEncoder <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>encoder<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>格式化输出：<span class="token operator">%</span>d表示日期，<span class="token operator">%</span>thread表示线程名，<span class="token operator">%</span><span class="token operator">-</span>5level：级别从左显示<span class="token number">5</span>个字符宽度<span class="token operator">%</span>msg：日志消息，<span class="token operator">%</span>n是换行符<span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>pattern<span class="token operator">></span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd HH<span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span>SSS<span class="token punctuation">}</span> <span class="token punctuation">[</span><span class="token operator">%</span>thread<span class="token punctuation">]</span> <span class="token operator">%</span><span class="token operator">-</span>5level <span class="token operator">%</span>logger<span class="token punctuation">{</span><span class="token number">36</span><span class="token punctuation">}</span> <span class="token operator">-</span> <span class="token operator">%</span>msg<span class="token operator">%</span>n<span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 文件输出：file <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">"file"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.RollingFileAppender"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>file<span class="token operator">></span>$<span class="token punctuation">{</span>log_home<span class="token punctuation">}</span><span class="token operator">/</span>logback<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>file<span class="token operator">></span>        <span class="token operator">&lt;</span>rollingPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>日志文件输出的文件名<span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>FileNamePattern<span class="token operator">></span>$<span class="token punctuation">{</span>log_home<span class="token punctuation">}</span><span class="token operator">/</span>logback<span class="token punctuation">.</span>%d<span class="token punctuation">{</span>yyyyMMddHHmm<span class="token punctuation">}</span><span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>FileNamePattern<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>rollingPolicy<span class="token operator">></span>        <span class="token operator">&lt;</span>encoder<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>格式化输出：<span class="token operator">%</span>d表示日期，<span class="token operator">%</span>thread表示线程名，<span class="token operator">%</span><span class="token operator">-</span>5level：级别从左显示<span class="token number">5</span>个字符宽度<span class="token operator">%</span>msg：日志消息，<span class="token operator">%</span>n是换行符<span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>pattern<span class="token operator">></span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd HH<span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span>SSS<span class="token punctuation">}</span> <span class="token punctuation">[</span><span class="token operator">%</span>thread<span class="token punctuation">]</span> <span class="token operator">%</span><span class="token operator">-</span>5level <span class="token operator">%</span>logger<span class="token punctuation">{</span><span class="token number">36</span><span class="token punctuation">}</span> <span class="token operator">-</span> <span class="token operator">%</span>msg<span class="token operator">%</span>n<span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>日志文件最大的大小<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>        <span class="token operator">&lt;</span>triggeringPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>MaxFileSize<span class="token operator">></span>10MB<span class="token operator">&lt;</span><span class="token operator">/</span>MaxFileSize<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>triggeringPolicy<span class="token operator">></span>        <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> appender：日志目的地 end <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> logger：精确配置<span class="token keyword">package</span>或<span class="token keyword">class</span>的level、appender<span class="token punctuation">,</span>可以配置<span class="token number">0</span>个或多个 end <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    level<span class="token operator">:</span>日志级别（logger中的level会覆盖root中的，即以logger中为准，不管是否向上传递）    name<span class="token operator">:</span>包名 或 类的全路径    addtivity<span class="token operator">:</span>日志信息是否向上（root）传递    <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>logger name<span class="token operator">=</span><span class="token string">"logback"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>logback<span class="token punctuation">.</span>LogbackDemo：类的全路径 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>logger name<span class="token operator">=</span><span class="token string">"logback.LogbackDemo"</span> level<span class="token operator">=</span><span class="token string">"warn"</span> additivity<span class="token operator">=</span><span class="token string">"false"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"console"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"file"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>logger<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> logger：精确配置<span class="token keyword">package</span>或<span class="token keyword">class</span>日志的level、appender end <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> root：定义日志的level、appender，且最多只能配置一个 start <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>TRACE <span class="token operator">&lt;</span> DEBUG <span class="token operator">&lt;</span> INFO <span class="token operator">&lt;</span>  WARN <span class="token operator">&lt;</span> ERROR<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>root level<span class="token operator">=</span><span class="token string">"debug"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 定义了INFO及以上级别的日志，分别在文件和控制台输出 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>level value<span class="token operator">=</span><span class="token string">"debug"</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"file"</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"console"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>root<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> root：定义日志的level、appender，且最多只能配置一个 end <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试实例"><a href="#测试实例" class="headerlink" title="测试实例"></a>测试实例</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">;</span><span class="token keyword">import</span> ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>Level<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestLogback</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>TestLogback<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//这里强制类型转换时为了能设置 logger 的 Level : TRACE &lt; DEBUG &lt; INFO &lt;  WARN &lt; ERROR</span>        ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>Logger logback_logger <span class="token operator">=</span> <span class="token punctuation">(</span>ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>Logger<span class="token punctuation">)</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">"com.foo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logback_logger<span class="token punctuation">.</span><span class="token function">setLevel</span><span class="token punctuation">(</span>Level<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span><span class="token punctuation">;</span>        logback_logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"logback_logger.error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logback_logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"logback_logger.warn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logback_logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"logback_logger.info"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logback_logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"logback_logger.debug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logback_logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">"logback_logger.trace"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"logger.error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"logger.warn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"logger.info"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"logger.debug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">"logger.trace"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"日志开始处理....."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> res <span class="token operator">=</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"程序开始！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span><span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">int</span> r1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//被除数</span>                <span class="token keyword">int</span> r2<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token operator">+</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//除数</span>                logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"第"</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">"次计算表达式为："</span><span class="token operator">+</span>r2<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>r1<span class="token punctuation">)</span><span class="token punctuation">;</span>                logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"计算结果："</span><span class="token operator">+</span><span class="token punctuation">(</span>r2<span class="token operator">/</span>r1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"----------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ArithmeticException</span>  e<span class="token punctuation">)</span><span class="token punctuation">{</span>            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"程序异常！除数等于0！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//log.error(e.getStackTrace().toString());</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"程序异常！"</span><span class="token operator">+</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="预期结果"><a href="#预期结果" class="headerlink" title="预期结果"></a>预期结果</h2><h3 id="控制台"><a href="#控制台" class="headerlink" title="控制台"></a>控制台</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>bin<span class="token operator">/</span>java <span class="token string">"-javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57703:/Applications/IntelliJ IDEA.app/Contents/bin"</span> <span class="token operator">-</span>Dfile<span class="token punctuation">.</span>encoding<span class="token operator">=</span>UTF<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">-</span>classpath <span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>charsets<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>deploy<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>ext<span class="token operator">/</span>cldrdata<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>ext<span class="token operator">/</span>dnsns<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>ext<span class="token operator">/</span>jaccess<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>ext<span class="token operator">/</span>jfxrt<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>ext<span class="token operator">/</span>localedata<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>ext<span class="token operator">/</span>nashorn<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>ext<span class="token operator">/</span>sunec<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>ext<span class="token operator">/</span>sunjce_provider<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>ext<span class="token operator">/</span>sunpkcs11<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>ext<span class="token operator">/</span>zipfs<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>javaws<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>jce<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>jfr<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>jfxswt<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>jsse<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>management<span class="token operator">-</span>agent<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>plugin<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>resources<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>jre<span class="token operator">/</span>lib<span class="token operator">/</span>rt<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>lib<span class="token operator">/</span>ant<span class="token operator">-</span>javafx<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>lib<span class="token operator">/</span>dt<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>lib<span class="token operator">/</span>javafx<span class="token operator">-</span>mx<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>lib<span class="token operator">/</span>jconsole<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>lib<span class="token operator">/</span>packager<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>lib<span class="token operator">/</span>sa<span class="token operator">-</span>jdi<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>JavaVirtualMachines<span class="token operator">/</span>jdk1<span class="token number">.8</span><span class="token punctuation">.</span>0_241<span class="token punctuation">.</span>jdk<span class="token operator">/</span>Contents<span class="token operator">/</span>Home<span class="token operator">/</span>lib<span class="token operator">/</span>tools<span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Volumes<span class="token operator">/</span>Share<span class="token operator">/</span>工作<span class="token operator">/</span>logback<span class="token operator">/</span>target<span class="token operator">/</span>classes<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>springframework<span class="token operator">/</span>boot<span class="token operator">/</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">/</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token operator">/</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>springframework<span class="token operator">/</span>boot<span class="token operator">/</span>spring<span class="token operator">-</span>boot<span class="token operator">/</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token operator">/</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>springframework<span class="token operator">/</span>spring<span class="token operator">-</span>context<span class="token operator">/</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token operator">/</span>spring<span class="token operator">-</span>context<span class="token operator">-</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>springframework<span class="token operator">/</span>spring<span class="token operator">-</span>aop<span class="token operator">/</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token operator">/</span>spring<span class="token operator">-</span>aop<span class="token operator">-</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>springframework<span class="token operator">/</span>spring<span class="token operator">-</span>beans<span class="token operator">/</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token operator">/</span>spring<span class="token operator">-</span>beans<span class="token operator">-</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>springframework<span class="token operator">/</span>spring<span class="token operator">-</span>expression<span class="token operator">/</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token operator">/</span>spring<span class="token operator">-</span>expression<span class="token operator">-</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>springframework<span class="token operator">/</span>boot<span class="token operator">/</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>autoconfigure<span class="token operator">/</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token operator">/</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>autoconfigure<span class="token operator">-</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>springframework<span class="token operator">/</span>boot<span class="token operator">/</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>logging<span class="token operator">/</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token operator">/</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>logging<span class="token operator">-</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>apache<span class="token operator">/</span>logging<span class="token operator">/</span>log4j<span class="token operator">/</span>log4j<span class="token operator">-</span>to<span class="token operator">-</span>slf4j<span class="token operator">/</span><span class="token number">2.14</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">/</span>log4j<span class="token operator">-</span>to<span class="token operator">-</span>slf4j<span class="token operator">-</span><span class="token number">2.14</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>apache<span class="token operator">/</span>logging<span class="token operator">/</span>log4j<span class="token operator">/</span>log4j<span class="token operator">-</span>api<span class="token operator">/</span><span class="token number">2.14</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">/</span>log4j<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">2.14</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>slf4j<span class="token operator">/</span>jul<span class="token operator">-</span>to<span class="token operator">-</span>slf4j<span class="token operator">/</span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">31</span><span class="token operator">/</span>jul<span class="token operator">-</span>to<span class="token operator">-</span>slf4j<span class="token operator">-</span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">31</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>jakarta<span class="token operator">/</span>annotation<span class="token operator">/</span>jakarta<span class="token punctuation">.</span>annotation<span class="token operator">-</span>api<span class="token operator">/</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">5</span><span class="token operator">/</span>jakarta<span class="token punctuation">.</span>annotation<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">5</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>springframework<span class="token operator">/</span>spring<span class="token operator">-</span>core<span class="token operator">/</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token operator">/</span>spring<span class="token operator">-</span>core<span class="token operator">-</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>springframework<span class="token operator">/</span>spring<span class="token operator">-</span>jcl<span class="token operator">/</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token operator">/</span>spring<span class="token operator">-</span>jcl<span class="token operator">-</span><span class="token number">5.3</span><span class="token punctuation">.</span><span class="token number">8</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>yaml<span class="token operator">/</span>snakeyaml<span class="token operator">/</span><span class="token number">1.28</span><span class="token operator">/</span>snakeyaml<span class="token operator">-</span><span class="token number">1.28</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>org<span class="token operator">/</span>slf4j<span class="token operator">/</span>slf4j<span class="token operator">-</span>api<span class="token operator">/</span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">21</span><span class="token operator">/</span>slf4j<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">21</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>ch<span class="token operator">/</span>qos<span class="token operator">/</span>logback<span class="token operator">/</span>logback<span class="token operator">-</span>core<span class="token operator">/</span><span class="token number">1.2</span><span class="token punctuation">.</span><span class="token number">3</span><span class="token operator">/</span>logback<span class="token operator">-</span>core<span class="token operator">-</span><span class="token number">1.2</span><span class="token punctuation">.</span><span class="token number">3</span><span class="token punctuation">.</span>jar<span class="token operator">:</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span><span class="token punctuation">.</span>m2<span class="token operator">/</span>repository<span class="token operator">/</span>ch<span class="token operator">/</span>qos<span class="token operator">/</span>logback<span class="token operator">/</span>logback<span class="token operator">-</span>classic<span class="token operator">/</span><span class="token number">1.2</span><span class="token punctuation">.</span><span class="token number">3</span><span class="token operator">/</span>logback<span class="token operator">-</span>classic<span class="token operator">-</span><span class="token number">1.2</span><span class="token punctuation">.</span><span class="token number">3</span><span class="token punctuation">.</span>jar com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback<span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">985</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>LoggerContext<span class="token punctuation">[</span><span class="token keyword">default</span><span class="token punctuation">]</span> <span class="token operator">-</span> Could NOT find resource <span class="token punctuation">[</span>logback<span class="token operator">-</span>test<span class="token punctuation">.</span>xml<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">985</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>LoggerContext<span class="token punctuation">[</span><span class="token keyword">default</span><span class="token punctuation">]</span> <span class="token operator">-</span> Could NOT find resource <span class="token punctuation">[</span>logback<span class="token punctuation">.</span>groovy<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">985</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>LoggerContext<span class="token punctuation">[</span><span class="token keyword">default</span><span class="token punctuation">]</span> <span class="token operator">-</span> Found resource <span class="token punctuation">[</span>logback<span class="token punctuation">.</span>xml<span class="token punctuation">]</span> at <span class="token punctuation">[</span>file<span class="token operator">:</span><span class="token operator">/</span>Volumes<span class="token operator">/</span>Share<span class="token operator">/</span><span class="token operator">%</span>e5<span class="token operator">%</span>b7<span class="token operator">%</span>a5<span class="token operator">%</span>e4<span class="token operator">%</span>bd<span class="token operator">%</span>9c<span class="token operator">/</span>logback<span class="token operator">/</span>target<span class="token operator">/</span>classes<span class="token operator">/</span>logback<span class="token punctuation">.</span>xml<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">284</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>ConfigurationAction <span class="token operator">-</span> Will scan <span class="token keyword">for</span> changes in <span class="token punctuation">[</span>file<span class="token operator">:</span><span class="token operator">/</span>Volumes<span class="token operator">/</span>Share<span class="token operator">/</span><span class="token operator">%</span>e5<span class="token operator">%</span>b7<span class="token operator">%</span>a5<span class="token operator">%</span>e4<span class="token operator">%</span>bd<span class="token operator">%</span>9c<span class="token operator">/</span>logback<span class="token operator">/</span>target<span class="token operator">/</span>classes<span class="token operator">/</span>logback<span class="token punctuation">.</span>xml<span class="token punctuation">]</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">284</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>ConfigurationAction <span class="token operator">-</span> Setting ReconfigureOnChangeTask scanning period to <span class="token number">1</span> minutes<span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">305</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>ContextNameAction <span class="token operator">-</span> Setting logger context name as <span class="token punctuation">[</span>context<span class="token operator">-</span>name<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">306</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>AppenderAction <span class="token operator">-</span> About to instantiate appender of type <span class="token punctuation">[</span>ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ConsoleAppender<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">315</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>AppenderAction <span class="token operator">-</span> Naming appender as <span class="token punctuation">[</span>console<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">350</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>NestedComplexPropertyIA <span class="token operator">-</span> Assuming <span class="token keyword">default</span> type <span class="token punctuation">[</span>ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>encoder<span class="token punctuation">.</span>PatternLayoutEncoder<span class="token punctuation">]</span> <span class="token keyword">for</span> <span class="token punctuation">[</span>encoder<span class="token punctuation">]</span> property<span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">454</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>AppenderAction <span class="token operator">-</span> About to instantiate appender of type <span class="token punctuation">[</span>ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>rolling<span class="token punctuation">.</span>RollingFileAppender<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">470</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>AppenderAction <span class="token operator">-</span> Naming appender as <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">506</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in c<span class="token punctuation">.</span>q<span class="token punctuation">.</span>l<span class="token punctuation">.</span>core<span class="token punctuation">.</span>rolling<span class="token punctuation">.</span>TimeBasedRollingPolicy<span class="token annotation punctuation">@2075203460</span> <span class="token operator">-</span> No compression will be used<span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">509</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in c<span class="token punctuation">.</span>q<span class="token punctuation">.</span>l<span class="token punctuation">.</span>core<span class="token punctuation">.</span>rolling<span class="token punctuation">.</span>TimeBasedRollingPolicy<span class="token annotation punctuation">@2075203460</span> <span class="token operator">-</span> Will use the pattern <span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span>Downloads<span class="token operator">/</span>logback<span class="token punctuation">.</span>%d<span class="token punctuation">{</span>yyyyMMddHHmm<span class="token punctuation">}</span><span class="token punctuation">.</span>log <span class="token keyword">for</span> the active file<span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">519</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in c<span class="token punctuation">.</span>q<span class="token punctuation">.</span>l<span class="token punctuation">.</span>core<span class="token punctuation">.</span>rolling<span class="token punctuation">.</span>DefaultTimeBasedFileNamingAndTriggeringPolicy <span class="token operator">-</span> The date pattern is <span class="token string">'yyyyMMddHHmm'</span> from file name pattern <span class="token string">'/Users/sunyun/Downloads/logback.%d{yyyyMMddHHmm}.log'</span><span class="token punctuation">.</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">519</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in c<span class="token punctuation">.</span>q<span class="token punctuation">.</span>l<span class="token punctuation">.</span>core<span class="token punctuation">.</span>rolling<span class="token punctuation">.</span>DefaultTimeBasedFileNamingAndTriggeringPolicy <span class="token operator">-</span> Roll<span class="token operator">-</span>over every minute<span class="token punctuation">.</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">532</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in c<span class="token punctuation">.</span>q<span class="token punctuation">.</span>l<span class="token punctuation">.</span>core<span class="token punctuation">.</span>rolling<span class="token punctuation">.</span>DefaultTimeBasedFileNamingAndTriggeringPolicy <span class="token operator">-</span> Setting initial period to Wed Jul <span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">27</span><span class="token operator">:</span><span class="token number">25</span> CST <span class="token number">2021</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">538</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>NestedComplexPropertyIA <span class="token operator">-</span> Assuming <span class="token keyword">default</span> type <span class="token punctuation">[</span>ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>encoder<span class="token punctuation">.</span>PatternLayoutEncoder<span class="token punctuation">]</span> <span class="token keyword">for</span> <span class="token punctuation">[</span>encoder<span class="token punctuation">]</span> property<span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">544</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>rolling<span class="token punctuation">.</span>RollingFileAppender<span class="token punctuation">[</span>file<span class="token punctuation">]</span> <span class="token operator">-</span> Active log file name<span class="token operator">:</span> <span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span>Downloads<span class="token operator">/</span>logback<span class="token punctuation">.</span>log<span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">545</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>rolling<span class="token punctuation">.</span>RollingFileAppender<span class="token punctuation">[</span>file<span class="token punctuation">]</span> <span class="token operator">-</span> File property is set to <span class="token punctuation">[</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span>Downloads<span class="token operator">/</span>logback<span class="token punctuation">.</span>log<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">549</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>LoggerAction <span class="token operator">-</span> Setting level of logger <span class="token punctuation">[</span>logback<span class="token punctuation">.</span>LogbackDemo<span class="token punctuation">]</span> to WARN<span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">550</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>LoggerAction <span class="token operator">-</span> Setting additivity of logger <span class="token punctuation">[</span>logback<span class="token punctuation">.</span>LogbackDemo<span class="token punctuation">]</span> to <span class="token boolean">false</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">550</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>AppenderRefAction <span class="token operator">-</span> Attaching appender named <span class="token punctuation">[</span>console<span class="token punctuation">]</span> to Logger<span class="token punctuation">[</span>logback<span class="token punctuation">.</span>LogbackDemo<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">551</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>AppenderRefAction <span class="token operator">-</span> Attaching appender named <span class="token punctuation">[</span>file<span class="token punctuation">]</span> to Logger<span class="token punctuation">[</span>logback<span class="token punctuation">.</span>LogbackDemo<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">551</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>RootLoggerAction <span class="token operator">-</span> Setting level of ROOT logger to DEBUG<span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">552</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>LevelAction <span class="token operator">-</span> ROOT level set to DEBUG<span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">552</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>AppenderRefAction <span class="token operator">-</span> Attaching appender named <span class="token punctuation">[</span>file<span class="token punctuation">]</span> to Logger<span class="token punctuation">[</span>ROOT<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">552</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>core<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>AppenderRefAction <span class="token operator">-</span> Attaching appender named <span class="token punctuation">[</span>console<span class="token punctuation">]</span> to Logger<span class="token punctuation">[</span>ROOT<span class="token punctuation">]</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">552</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>action<span class="token punctuation">.</span>ConfigurationAction <span class="token operator">-</span> End of configuration<span class="token punctuation">.</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">554</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token punctuation">.</span>classic<span class="token punctuation">.</span>joran<span class="token punctuation">.</span>JoranConfigurator<span class="token annotation punctuation">@d7b1517</span> <span class="token operator">-</span> Registering current configuration as safe fallback point<span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">564</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in c<span class="token punctuation">.</span>q<span class="token punctuation">.</span>l<span class="token punctuation">.</span>core<span class="token punctuation">.</span>rolling<span class="token punctuation">.</span>DefaultTimeBasedFileNamingAndTriggeringPolicy <span class="token operator">-</span> Elapsed period<span class="token operator">:</span> Wed Jul <span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">27</span><span class="token operator">:</span><span class="token number">25</span> CST <span class="token number">2021</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">565</span> <span class="token operator">|</span><span class="token operator">-</span>INFO in c<span class="token punctuation">.</span>q<span class="token punctuation">.</span>l<span class="token punctuation">.</span>co<span class="token punctuation">.</span>rolling<span class="token punctuation">.</span>helper<span class="token punctuation">.</span>RenameUtil <span class="token operator">-</span> Renaming file <span class="token punctuation">[</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span>Downloads<span class="token operator">/</span>logback<span class="token punctuation">.</span>log<span class="token punctuation">]</span> to <span class="token punctuation">[</span><span class="token operator">/</span>Users<span class="token operator">/</span>sunyun<span class="token operator">/</span>Downloads<span class="token operator">/</span>logback<span class="token number">.202107070927</span><span class="token punctuation">.</span>log<span class="token punctuation">]</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.564</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> ERROR com<span class="token punctuation">.</span>foo <span class="token operator">-</span> logback_logger<span class="token punctuation">.</span>error<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.574</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> WARN  com<span class="token punctuation">.</span>foo <span class="token operator">-</span> logback_logger<span class="token punctuation">.</span>warn<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.576</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>foo <span class="token operator">-</span> logback_logger<span class="token punctuation">.</span>info<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.576</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>foo <span class="token operator">-</span> logback_logger<span class="token punctuation">.</span>debug<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.577</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> ERROR com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> logger<span class="token punctuation">.</span>error<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.577</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> WARN  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> logger<span class="token punctuation">.</span>warn<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.577</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> logger<span class="token punctuation">.</span>info<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.578</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> logger<span class="token punctuation">.</span>debug<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.578</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 日志开始处理<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">300</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.579</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token number">300</span>Hello World<span class="token operator">!</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.582</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 程序开始！<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.584</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">1</span>次计算表达式为：<span class="token number">129</span><span class="token operator">/</span><span class="token number">7</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.584</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">18</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.584</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.585</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">2</span>次计算表达式为：<span class="token number">162</span><span class="token operator">/</span><span class="token number">8</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.585</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">20</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.585</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.585</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">3</span>次计算表达式为：<span class="token number">140</span><span class="token operator">/</span><span class="token number">5</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.585</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">28</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.586</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.587</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">4</span>次计算表达式为：<span class="token number">153</span><span class="token operator">/</span><span class="token number">3</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.589</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">51</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.589</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.589</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">5</span>次计算表达式为：<span class="token number">184</span><span class="token operator">/</span><span class="token number">4</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.589</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">46</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">6</span>次计算表达式为：<span class="token number">102</span><span class="token operator">/</span><span class="token number">1</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">102</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">7</span>次计算表达式为：<span class="token number">136</span><span class="token operator">/</span><span class="token number">5</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.591</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">27</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.591</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.591</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">8</span>次计算表达式为：<span class="token number">105</span><span class="token operator">/</span><span class="token number">1</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.591</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">105</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.592</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.592</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">9</span>次计算表达式为：<span class="token number">173</span><span class="token operator">/</span><span class="token number">1</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.592</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">173</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.592</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.592</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">10</span>次计算表达式为：<span class="token number">112</span><span class="token operator">/</span><span class="token number">9</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.593</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">12</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.593</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>Process finished with exit code <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文件输出"><a href="#文件输出" class="headerlink" title="文件输出"></a>文件输出</h3><img src="/posts/38737c4e/image-20210707093114966.png" alt="image-20210707093114966" style="zoom:33%;"><pre class="line-numbers language-java"><code class="language-java"><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.564</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> ERROR com<span class="token punctuation">.</span>foo <span class="token operator">-</span> logback_logger<span class="token punctuation">.</span>error<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.574</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> WARN  com<span class="token punctuation">.</span>foo <span class="token operator">-</span> logback_logger<span class="token punctuation">.</span>warn<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.576</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>foo <span class="token operator">-</span> logback_logger<span class="token punctuation">.</span>info<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.576</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>foo <span class="token operator">-</span> logback_logger<span class="token punctuation">.</span>debug<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.577</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> ERROR com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> logger<span class="token punctuation">.</span>error<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.577</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> WARN  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> logger<span class="token punctuation">.</span>warn<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.577</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> logger<span class="token punctuation">.</span>info<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.578</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> logger<span class="token punctuation">.</span>debug<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.578</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 日志开始处理<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.579</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token number">300</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.582</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 程序开始！<span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.584</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">1</span>次计算表达式为：<span class="token number">129</span><span class="token operator">/</span><span class="token number">7</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.584</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">18</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.584</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.585</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">2</span>次计算表达式为：<span class="token number">162</span><span class="token operator">/</span><span class="token number">8</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.585</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">20</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.585</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.585</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">3</span>次计算表达式为：<span class="token number">140</span><span class="token operator">/</span><span class="token number">5</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.585</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">28</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.586</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.587</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">4</span>次计算表达式为：<span class="token number">153</span><span class="token operator">/</span><span class="token number">3</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.589</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">51</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.589</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.589</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">5</span>次计算表达式为：<span class="token number">184</span><span class="token operator">/</span><span class="token number">4</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.589</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">46</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">6</span>次计算表达式为：<span class="token number">102</span><span class="token operator">/</span><span class="token number">1</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">102</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">7</span>次计算表达式为：<span class="token number">136</span><span class="token operator">/</span><span class="token number">5</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.591</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">27</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.591</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.591</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">8</span>次计算表达式为：<span class="token number">105</span><span class="token operator">/</span><span class="token number">1</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.591</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">105</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.592</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.592</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">9</span>次计算表达式为：<span class="token number">173</span><span class="token operator">/</span><span class="token number">1</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.592</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">173</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.592</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.592</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 第<span class="token number">10</span>次计算表达式为：<span class="token number">112</span><span class="token operator">/</span><span class="token number">9</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.593</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> DEBUG com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> 计算结果：<span class="token number">12</span><span class="token number">2021</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">21.593</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>TestLogback <span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置参考"><a href="#配置参考" class="headerlink" title="配置参考"></a>配置参考</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span>configuration  scan<span class="token operator">=</span><span class="token string">"true"</span> scanPeriod<span class="token operator">=</span><span class="token string">"10 seconds"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>contextName<span class="token operator">></span>logback<span class="token operator">&lt;</span><span class="token operator">/</span>contextName<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义后，可以使“$<span class="token punctuation">{</span><span class="token punctuation">}</span>”来使用变量。 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log.path"</span> value<span class="token operator">=</span><span class="token string">"./logs/supervise-collection"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token number">0</span><span class="token punctuation">.</span> 日志格式和颜色渲染 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 彩色日志依赖的渲染类 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>conversionRule conversionWord<span class="token operator">=</span><span class="token string">"clr"</span> converterClass<span class="token operator">=</span><span class="token string">"org.springframework.boot.logging.logback.ColorConverter"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>conversionRule conversionWord<span class="token operator">=</span><span class="token string">"wex"</span> converterClass<span class="token operator">=</span><span class="token string">"org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>conversionRule conversionWord<span class="token operator">=</span><span class="token string">"wEx"</span> converterClass<span class="token operator">=</span><span class="token string">"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 彩色日志格式 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"CONSOLE_LOG_PATTERN"</span> value<span class="token operator">=</span><span class="token string">"${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token number">1</span><span class="token punctuation">.</span> 输出到控制台<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">"CONSOLE"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.ConsoleAppender"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>filter <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.classic.filter.ThresholdFilter"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>level<span class="token operator">></span>debug<span class="token operator">&lt;</span><span class="token operator">/</span>level<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span>encoder<span class="token operator">></span>            <span class="token operator">&lt;</span>Pattern<span class="token operator">></span>$<span class="token punctuation">{</span>CONSOLE_LOG_PATTERN<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Pattern<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>系统INFO级别日志<span class="token operator">-</span>滚动记录日志<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">"SYS_INFO"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.RollingFileAppender"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>File<span class="token operator">></span>$<span class="token punctuation">{</span>log<span class="token punctuation">.</span>path<span class="token punctuation">}</span><span class="token operator">/</span>sys_info<span class="token operator">/</span>sys_info<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>File<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>如果是 <span class="token boolean">true</span>，日志被追加到文件结尾，如果是 <span class="token boolean">false</span>，清空现存文件，默认是<span class="token boolean">true</span>。<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>append<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>append<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>级别过滤器（LevelFilter）<span class="token punctuation">,</span>此处只打INFO级别的日志<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>filter <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.classic.filter.LevelFilter"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>level<span class="token operator">></span>INFO<span class="token operator">&lt;</span><span class="token operator">/</span>level<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>下面<span class="token number">2</span>个属性表示匹配规定level的接受打印，不匹配的（即非INFO）拒绝打印<span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>onMatch<span class="token operator">></span>ACCEPT<span class="token operator">&lt;</span><span class="token operator">/</span>onMatch<span class="token operator">></span>            <span class="token operator">&lt;</span>onMismatch<span class="token operator">></span>DENY<span class="token operator">&lt;</span><span class="token operator">/</span>onMismatch<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>rollingPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>设置滚动文件规则，如果直接使用 <span class="token operator">%</span>d，默认格式是 yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd<span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>fileNamePattern<span class="token operator">></span>$<span class="token punctuation">{</span>log<span class="token punctuation">.</span>path<span class="token punctuation">}</span><span class="token operator">/</span>sys_info<span class="token operator">/</span>sys_info<span class="token operator">-</span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd<span class="token punctuation">}</span><span class="token punctuation">.</span>%i<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>fileNamePattern<span class="token operator">></span>            <span class="token operator">&lt;</span>timeBasedFileNamingAndTriggeringPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>maxFileSize<span class="token operator">></span>10MB<span class="token operator">&lt;</span><span class="token operator">/</span>maxFileSize<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>timeBasedFileNamingAndTriggeringPolicy<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>保留<span class="token number">30</span>天的日志<span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>maxHistory<span class="token operator">></span><span class="token number">180</span><span class="token operator">&lt;</span><span class="token operator">/</span>maxHistory<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>rollingPolicy<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>日志文档输出格式<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>encoder charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>pattern<span class="token operator">></span><span class="token punctuation">[</span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd HH<span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span>SSS<span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">%</span>level <span class="token punctuation">[</span><span class="token operator">%</span>thread<span class="token punctuation">]</span> <span class="token operator">%</span>file<span class="token operator">:</span><span class="token operator">%</span>line <span class="token operator">-</span> <span class="token operator">%</span>msg<span class="token operator">%</span>n<span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">></span>            <span class="token operator">&lt;</span>charset<span class="token operator">></span>UTF<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>charset<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>系统ERROR级别日志<span class="token operator">-</span>滚动记录日志<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">"SYS_ERROR"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.RollingFileAppender"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>File<span class="token operator">></span>$<span class="token punctuation">{</span>log<span class="token punctuation">.</span>path<span class="token punctuation">}</span><span class="token operator">/</span>sys_error<span class="token operator">/</span>sys_error<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>File<span class="token operator">></span>        <span class="token operator">&lt;</span>append<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>append<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>此处只打ERROR级别的日志<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>filter <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.classic.filter.LevelFilter"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>level<span class="token operator">></span>ERROR<span class="token operator">&lt;</span><span class="token operator">/</span>level<span class="token operator">></span>            <span class="token operator">&lt;</span>onMatch<span class="token operator">></span>ACCEPT<span class="token operator">&lt;</span><span class="token operator">/</span>onMatch<span class="token operator">></span>            <span class="token operator">&lt;</span>onMismatch<span class="token operator">></span>DENY<span class="token operator">&lt;</span><span class="token operator">/</span>onMismatch<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span>rollingPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>设置滚动文件规则，如果直接使用 <span class="token operator">%</span>d，默认格式是 yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd<span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>fileNamePattern<span class="token operator">></span>$<span class="token punctuation">{</span>log<span class="token punctuation">.</span>path<span class="token punctuation">}</span><span class="token operator">/</span>sys_error<span class="token operator">/</span>sys_error<span class="token operator">-</span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd<span class="token punctuation">}</span><span class="token punctuation">.</span>%i<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>fileNamePattern<span class="token operator">></span>            <span class="token operator">&lt;</span>timeBasedFileNamingAndTriggeringPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>maxFileSize<span class="token operator">></span>10MB<span class="token operator">&lt;</span><span class="token operator">/</span>maxFileSize<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>timeBasedFileNamingAndTriggeringPolicy<span class="token operator">></span>            <span class="token operator">&lt;</span>maxHistory<span class="token operator">></span><span class="token number">180</span><span class="token operator">&lt;</span><span class="token operator">/</span>maxHistory<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>rollingPolicy<span class="token operator">></span>        <span class="token operator">&lt;</span>encoder charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>pattern<span class="token operator">></span><span class="token punctuation">[</span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd HH<span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span>SSS<span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">%</span>level <span class="token punctuation">[</span><span class="token operator">%</span>thread<span class="token punctuation">]</span> <span class="token operator">%</span>file<span class="token operator">:</span><span class="token operator">%</span>line <span class="token operator">-</span> <span class="token operator">%</span>msg<span class="token operator">%</span>n<span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">></span>            <span class="token operator">&lt;</span>charset<span class="token operator">></span>UTF<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>charset<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>不同业务逻辑的日志打印到不同文件，见下面<span class="token number">2</span>种业务日志<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>数据包解析日志（Sjsb_XmlJX）<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">"Sjsb_XmlJX_Appender"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.RollingFileAppender"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>File<span class="token operator">></span>$<span class="token punctuation">{</span>log<span class="token punctuation">.</span>path<span class="token punctuation">}</span><span class="token operator">/</span>Sjsb_XmlJX<span class="token operator">/</span>logjx<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>File<span class="token operator">></span>        <span class="token operator">&lt;</span>append<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>append<span class="token operator">></span>        <span class="token operator">&lt;</span>filter <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.classic.filter.LevelFilter"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>level<span class="token operator">></span>INFO<span class="token operator">&lt;</span><span class="token operator">/</span>level<span class="token operator">></span>            <span class="token operator">&lt;</span>onMatch<span class="token operator">></span>ACCEPT<span class="token operator">&lt;</span><span class="token operator">/</span>onMatch<span class="token operator">></span>            <span class="token operator">&lt;</span>onMismatch<span class="token operator">></span>DENY<span class="token operator">&lt;</span><span class="token operator">/</span>onMismatch<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span>rollingPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>fileNamePattern<span class="token operator">></span>$<span class="token punctuation">{</span>log<span class="token punctuation">.</span>path<span class="token punctuation">}</span><span class="token operator">/</span>Sjsb_XmlJX<span class="token operator">/</span>logjx<span class="token operator">-</span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd<span class="token punctuation">}</span><span class="token punctuation">.</span>%i<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>fileNamePattern<span class="token operator">></span>            <span class="token operator">&lt;</span>timeBasedFileNamingAndTriggeringPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>maxFileSize<span class="token operator">></span>20MB<span class="token operator">&lt;</span><span class="token operator">/</span>maxFileSize<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>timeBasedFileNamingAndTriggeringPolicy<span class="token operator">></span>            <span class="token operator">&lt;</span>maxHistory<span class="token operator">></span><span class="token number">180</span><span class="token operator">&lt;</span><span class="token operator">/</span>maxHistory<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>rollingPolicy<span class="token operator">></span>        <span class="token operator">&lt;</span>encoder charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>pattern<span class="token operator">></span><span class="token punctuation">[</span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd HH<span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span>SSS<span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">%</span>level <span class="token punctuation">[</span><span class="token operator">%</span>thread<span class="token punctuation">]</span> <span class="token operator">%</span>file<span class="token operator">:</span><span class="token operator">%</span>line <span class="token operator">-</span> <span class="token operator">%</span>msg<span class="token operator">%</span>n<span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">></span>            <span class="token operator">&lt;</span>charset<span class="token operator">></span>UTF<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>charset<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>记录索引表接口接收日志（Sjsb_SybJX）<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">"Sjsb_SybJX_Appender"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.RollingFileAppender"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>File<span class="token operator">></span>$<span class="token punctuation">{</span>log<span class="token punctuation">.</span>path<span class="token punctuation">}</span><span class="token operator">/</span>Sjsb_SybJX<span class="token operator">/</span>log<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>File<span class="token operator">></span>        <span class="token operator">&lt;</span>append<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>append<span class="token operator">></span>        <span class="token operator">&lt;</span>filter <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.classic.filter.LevelFilter"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>level<span class="token operator">></span>INFO<span class="token operator">&lt;</span><span class="token operator">/</span>level<span class="token operator">></span>            <span class="token operator">&lt;</span>onMatch<span class="token operator">></span>ACCEPT<span class="token operator">&lt;</span><span class="token operator">/</span>onMatch<span class="token operator">></span>            <span class="token operator">&lt;</span>onMismatch<span class="token operator">></span>DENY<span class="token operator">&lt;</span><span class="token operator">/</span>onMismatch<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span>rollingPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>fileNamePattern<span class="token operator">></span>$<span class="token punctuation">{</span>log<span class="token punctuation">.</span>path<span class="token punctuation">}</span><span class="token operator">/</span>Sjsb_SybJX<span class="token operator">/</span>log<span class="token operator">-</span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd<span class="token punctuation">}</span><span class="token punctuation">.</span>%i<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>fileNamePattern<span class="token operator">></span>            <span class="token operator">&lt;</span>timeBasedFileNamingAndTriggeringPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>maxFileSize<span class="token operator">></span>20MB<span class="token operator">&lt;</span><span class="token operator">/</span>maxFileSize<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>timeBasedFileNamingAndTriggeringPolicy<span class="token operator">></span>            <span class="token operator">&lt;</span>maxHistory<span class="token operator">></span><span class="token number">180</span><span class="token operator">&lt;</span><span class="token operator">/</span>maxHistory<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>rollingPolicy<span class="token operator">></span>        <span class="token operator">&lt;</span>encoder charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>pattern<span class="token operator">></span><span class="token punctuation">[</span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd HH<span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span>SSS<span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">%</span>level <span class="token punctuation">[</span><span class="token operator">%</span>thread<span class="token punctuation">]</span> <span class="token operator">%</span>file<span class="token operator">:</span><span class="token operator">%</span>line <span class="token operator">-</span> <span class="token operator">%</span>msg<span class="token operator">%</span>n<span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">></span>            <span class="token operator">&lt;</span>charset<span class="token operator">></span>UTF<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>charset<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>记录数据包转移日志（Sjsb_Sjbzy）<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">"Sjsb_Sjbzy_Appender"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.RollingFileAppender"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>File<span class="token operator">></span>$<span class="token punctuation">{</span>log<span class="token punctuation">.</span>path<span class="token punctuation">}</span><span class="token operator">/</span>Sjsb_Sjbzy<span class="token operator">/</span>log<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>File<span class="token operator">></span>        <span class="token operator">&lt;</span>append<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>append<span class="token operator">></span>        <span class="token operator">&lt;</span>filter <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.classic.filter.LevelFilter"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>level<span class="token operator">></span>INFO<span class="token operator">&lt;</span><span class="token operator">/</span>level<span class="token operator">></span>            <span class="token operator">&lt;</span>onMatch<span class="token operator">></span>ACCEPT<span class="token operator">&lt;</span><span class="token operator">/</span>onMatch<span class="token operator">></span>            <span class="token operator">&lt;</span>onMismatch<span class="token operator">></span>DENY<span class="token operator">&lt;</span><span class="token operator">/</span>onMismatch<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span>rollingPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>fileNamePattern<span class="token operator">></span>$<span class="token punctuation">{</span>log<span class="token punctuation">.</span>path<span class="token punctuation">}</span><span class="token operator">/</span>Sjsb_Sjbzy<span class="token operator">/</span>log<span class="token operator">-</span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd<span class="token punctuation">}</span><span class="token punctuation">.</span>%i<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>fileNamePattern<span class="token operator">></span>            <span class="token operator">&lt;</span>timeBasedFileNamingAndTriggeringPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>maxFileSize<span class="token operator">></span>20MB<span class="token operator">&lt;</span><span class="token operator">/</span>maxFileSize<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>timeBasedFileNamingAndTriggeringPolicy<span class="token operator">></span>            <span class="token operator">&lt;</span>maxHistory<span class="token operator">></span><span class="token number">180</span><span class="token operator">&lt;</span><span class="token operator">/</span>maxHistory<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>rollingPolicy<span class="token operator">></span>        <span class="token operator">&lt;</span>encoder charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>pattern<span class="token operator">></span><span class="token punctuation">[</span><span class="token operator">%</span>d<span class="token punctuation">{</span>yyyy<span class="token operator">-</span>MM<span class="token operator">-</span>dd HH<span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span>SSS<span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">%</span>level <span class="token punctuation">[</span><span class="token operator">%</span>thread<span class="token punctuation">]</span> <span class="token operator">%</span>file<span class="token operator">:</span><span class="token operator">%</span>line <span class="token operator">-</span> <span class="token operator">%</span>msg<span class="token operator">%</span>n<span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">></span>            <span class="token operator">&lt;</span>charset<span class="token operator">></span>UTF<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>charset<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> additivity属性为<span class="token boolean">false</span>，表示此logger的打印信息不再向上级传递<span class="token punctuation">(</span>注：该值默认为<span class="token boolean">true</span>，logger的日志信息会依次向上级传递，最高级logger为root，如果不加则至少打印<span class="token number">2</span>次，本身一次，root一次<span class="token punctuation">)</span><span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>logger name<span class="token operator">=</span><span class="token string">"Sjsb_XmlJX"</span> additivity<span class="token operator">=</span><span class="token string">"false"</span> level<span class="token operator">=</span><span class="token string">"INFO"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"Sjsb_XmlJX_Appender"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>logger<span class="token operator">></span>    <span class="token operator">&lt;</span>logger name<span class="token operator">=</span><span class="token string">"Sjsb_SybJX"</span> additivity<span class="token operator">=</span><span class="token string">"false"</span> level<span class="token operator">=</span><span class="token string">"INFO"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"Sjsb_SybJX_Appender"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>logger<span class="token operator">></span>    <span class="token operator">&lt;</span>logger name<span class="token operator">=</span><span class="token string">"Sjsb_Sjbzy"</span> additivity<span class="token operator">=</span><span class="token string">"false"</span> level<span class="token operator">=</span><span class="token string">"INFO"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"Sjsb_Sjbzy_Appender"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>logger<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>info和error分开打印，注：ERROR <span class="token operator">></span> WARN <span class="token operator">></span> INFO <span class="token operator">></span> DEBUG <span class="token operator">></span> TRACE<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>root level<span class="token operator">=</span><span class="token string">"INFO"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"CONSOLE"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"SYS_INFO"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"SYS_ERROR"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>root<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>logback日志学习</title>
      <link href="posts/e9c56f54/"/>
      <url>posts/e9c56f54/</url>
      
        <content type="html"><![CDATA[<h1 id="logback日志学习"><a href="#logback日志学习" class="headerlink" title="logback日志学习"></a>logback日志学习</h1><h2 id="1-日志的概念"><a href="#1-日志的概念" class="headerlink" title="1.日志的概念"></a>1.日志的概念</h2><h3 id="调试日志"><a href="#调试日志" class="headerlink" title="调试日志"></a>调试日志</h3><p>上线的时候关闭</p><h3 id="系统日志"><a href="#系统日志" class="headerlink" title="系统日志"></a>系统日志</h3><p>用户访问日志，操作等</p><h2 id="2-JAVA日志框架"><a href="#2-JAVA日志框架" class="headerlink" title="2.JAVA日志框架"></a>2.JAVA日志框架</h2><p>日志输出格式、位置、日志优化、性能、</p><p>日志门面 JCL、slf4j</p><p>日志实现JUL（小型）、logback、log4j、log4j2（apache性能最好）</p><h2 id="3-JUL"><a href="#3-JUL" class="headerlink" title="3.JUL"></a>3.JUL</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用MybatisGeneratorGUI</title>
      <link href="posts/892a4ef3/"/>
      <url>posts/892a4ef3/</url>
      
        <content type="html"><![CDATA[<h1 id="使用MybatisGeneratorGUI"><a href="#使用MybatisGeneratorGUI" class="headerlink" title="使用MybatisGeneratorGUI"></a>使用MybatisGeneratorGUI</h1><p>参考链接：<a href="https://github.com/zouzg/mybatis-generator-gui" target="_blank" rel="noopener">https://github.com/zouzg/mybatis-generator-gui</a></p><img src="/posts/892a4ef3/image-20210706150448493.png" alt="image-20210706150448493" style="zoom:33%;"><img src="/posts/892a4ef3/image-20210706150512472.png" alt="image-20210706150512472" style="zoom:33%;"><p><img src="/posts/892a4ef3/image-20210706151013192.png" alt="image-20210706151013192" style="zoom:33%;"><img src="/posts/892a4ef3/image-20210706151032301.png" alt="image-20210706151032301"></p><p><img src="/posts/892a4ef3/image-20210706151013192.png" alt="image-20210706151013192" style="zoom:33%;"><img src="/posts/892a4ef3/image-20210706151032301.png" alt="image-20210706151032301"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MAC安装ORACLE数据库</title>
      <link href="posts/b4905090/"/>
      <url>posts/b4905090/</url>
      
        <content type="html"><![CDATA[<h1 id="MAC安装ORACLE数据库"><a href="#MAC安装ORACLE数据库" class="headerlink" title="MAC安装ORACLE数据库"></a>MAC安装ORACLE数据库</h1><h2 id="1-搜索源"><a href="#1-搜索源" class="headerlink" title="1.搜索源"></a>1.搜索源</h2><p><code>sudo docker search docker-oracle-xe-11g</code></p><img src="/posts/b4905090/image-20210705193028569.png" alt="image-20210705193028569" style="zoom:33%;"><h2 id="2-拉取镜像"><a href="#2-拉取镜像" class="headerlink" title="2.拉取镜像"></a>2.拉取镜像</h2><p><code>sudo docker pull deepdiver/docker-oracle-xe-11g</code></p><img src="/posts/b4905090/image-20210705193125762.png" alt="image-20210705193125762" style="zoom:33%;"><h2 id="3-启动"><a href="#3-启动" class="headerlink" title="3.启动"></a>3.启动</h2><p><code>sudo docker run -d -p 1521:1521 --name oracle11g deepdiver/docker-oracle-xe-11g</code></p><img src="/posts/b4905090/image-20210705193247796.png" alt="image-20210705193247796" style="zoom:33%;"><p>值得注意的就是将容器内部的1521端口映射到宿主机中的1521端口，这样一来就能在宿主机中通过Navicat等数据库可视化管理工具进行连接了。在这步完成之后，我们需要进到容器内部对已经安装的Oracle进行简单配置。</p><h2 id="4-在Oracle容器中简单配置你的Oracle数据库并通过Navicat进行连接"><a href="#4-在Oracle容器中简单配置你的Oracle数据库并通过Navicat进行连接" class="headerlink" title="4.在Oracle容器中简单配置你的Oracle数据库并通过Navicat进行连接"></a>4.在Oracle容器中简单配置你的Oracle数据库并通过Navicat进行连接</h2><p><code>docker ps</code>查看容器id</p><img src="/posts/b4905090/image-20210705195605067.png" alt="image-20210705195605067" style="zoom:33%;"><p><code>sudo docker exec -it 50e89b9d76cb /bin/bash </code> 启动容器内部命令</p><p><code>sqlplus system/oracle </code></p><p>通过sqlplus进入Oracle</p><img src="/posts/b4905090/image-20210705195733492.png" alt="image-20210705195733492" style="zoom:33%;"><p><code>select username,password from **dba_users**;</code>查看数据库用户名和密码：</p><img src="/posts/b4905090/image-20210705195752899.png" alt="image-20210705195752899" style="zoom:33%;"><p>使用新创建的用户来进行数据库的登录，sql如下：</p><p><code>create user steafan(用户名) identified by password(密码)</code></p><p><code>create user steafan identified by password980107sy;</code></p><p><code>select * from all_users; </code>  </p><img src="/posts/b4905090/image-20210705202243977.png" alt="image-20210705202243977" style="zoom:33%;"><p>在创建完新用户之后，需要对该用户进行授权，该用户具有什么权限都是通过自己指定的，这也是为什么推荐使用自定义用户登录数据库的原因，sql如下：<br><code>  grant connect,resource to STEAFAN;</code>(这里需要将用户名大写，否则授权不成功)</p><img src="/posts/b4905090/image-20210705202423425.png" alt="image-20210705202423425" style="zoom:33%;"><p> <code> connect</code>表示具有连接数据库的权限；</p><p><code>resource</code>表示具有操作数据库的权限<br> 至此，所有需要配置的数据库配置都已经配置完毕</p><p>可以通过Navicat进行连接了，如下图所示：</p><img src="/posts/b4905090/image-20210705203253309.png" alt="image-20210705203253309" style="zoom:33%;"><img src="/posts/b4905090/image-20210705203310538.png" alt="image-20210705203310538" style="zoom:33%;">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>云安全期末复习</title>
      <link href="posts/b3ab0d9f/"/>
      <url>posts/b3ab0d9f/</url>
      
        <content type="html"><![CDATA[<h1 id="云安全期末复习"><a href="#云安全期末复习" class="headerlink" title="云安全期末复习"></a>云安全期末复习</h1><h2 id="题型分布："><a href="#题型分布：" class="headerlink" title="题型分布："></a>题型分布：</h2><p>填空（20分左右）</p><p>选择（40分，2分一个）</p><p>判断题</p><p>简答题（2个）</p><p>大题（DES算法一个）</p><h2 id="简答题（2个）"><a href="#简答题（2个）" class="headerlink" title="简答题（2个）"></a>简答题（2个）</h2><h3 id="1-VPC和安全组（功能？概念？）"><a href="#1-VPC和安全组（功能？概念？）" class="headerlink" title="1.VPC和安全组（功能？概念？）"></a>1.VPC和安全组（功能？概念？）</h3><h4 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h4><p>VPC(Virtual Private Cloud)专用网络是基于阿里云构建的一个隔离的网络环境，专有网络之 </p><p>间逻辑上彻底隔离。用户可以在自己创建的专有网络内创建和管理云资源，例如ECS、SLB和 </p><p>RDS等。专有网络VPC是地域性服务，它不可以跨地域，但地域内可用区之间是可见的。 </p><h4 id="VPC主要提供了两个能力："><a href="#VPC主要提供了两个能力：" class="headerlink" title="VPC主要提供了两个能力："></a>VPC主要提供了两个能力：</h4><p>用户可以自定义网络拓扑，包括选择自有IP地址范围、划分网段、配置路由表和网关等； </p><p>通过专线或VPN与原有数据中心连接，云上和云下的资源使用同一个网络地址规划，实现应 </p><p>用的平滑迁移上云。 </p><img src="/posts/b3ab0d9f/image-20210627180333685.png" alt="image-20210627180333685" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627180351324.png" alt="image-20210627180351324" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627180412417.png" alt="image-20210627180412417" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627180427125.png" alt="image-20210627180427125" style="zoom:50%;"><h3 id="2-公钥的工作原理，密码体制（加密认证混合模型）"><a href="#2-公钥的工作原理，密码体制（加密认证混合模型）" class="headerlink" title="2.公钥的工作原理，密码体制（加密认证混合模型）"></a>2.公钥的工作原理，密码体制（加密认证混合模型）</h3><img src="/posts/b3ab0d9f/image-20210627180859278.png" alt="image-20210627180859278" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627180907087.png" alt="image-20210627180907087" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627180914622.png" alt="image-20210627180914622" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627180927846.png" alt="image-20210627180927846" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627181029636.png" alt="image-20210627181029636" style="zoom:50%;"><h2 id="大题（1个）"><a href="#大题（1个）" class="headerlink" title="大题（1个）"></a>大题（1个）</h2><h3 id="1-DES算法综合（知道初始置换是怎么对应的）"><a href="#1-DES算法综合（知道初始置换是怎么对应的）" class="headerlink" title="1.DES算法综合（知道初始置换是怎么对应的）"></a>1.DES算法综合（知道初始置换是怎么对应的）</h3><h4 id="考点：给一个表，计算L0，R0，S盒，循环左移"><a href="#考点：给一个表，计算L0，R0，S盒，循环左移" class="headerlink" title="考点：给一个表，计算L0，R0，S盒，循环左移"></a>考点：给一个表，计算L0，R0，S盒，循环左移</h4><h4 id="初始置换："><a href="#初始置换：" class="headerlink" title="初始置换："></a>初始置换：</h4><h5 id="将原来的64位二进制重新排序，Eg：输入的第58位换到第1位"><a href="#将原来的64位二进制重新排序，Eg：输入的第58位换到第1位" class="headerlink" title="将原来的64位二进制重新排序，Eg：输入的第58位换到第1位"></a>将原来的64位二进制重新排序，Eg：输入的第58位换到第1位</h5><h4 id="扩展置换-："><a href="#扩展置换-：" class="headerlink" title="扩展置换 ："></a>扩展置换 ：</h4><h5 id="32位-gt-48位，（每4位变6位）"><a href="#32位-gt-48位，（每4位变6位）" class="headerlink" title="32位-&gt;48位，（每4位变6位）"></a>32位-&gt;48位，（每4位变6位）</h5><h5 id="旧组的第一位复制到前一个新组的最后一位"><a href="#旧组的第一位复制到前一个新组的最后一位" class="headerlink" title="旧组的第一位复制到前一个新组的最后一位"></a>旧组的第一位复制到前一个新组的最后一位</h5><h5 id="旧组最后一位复制到下一个新组第一位"><a href="#旧组最后一位复制到下一个新组第一位" class="headerlink" title="旧组最后一位复制到下一个新组第一位"></a>旧组最后一位复制到下一个新组第一位</h5><h5 id="最后复制每组中间的4个元素到新组中"><a href="#最后复制每组中间的4个元素到新组中" class="headerlink" title="最后复制每组中间的4个元素到新组中"></a>最后复制每组中间的4个元素到新组中</h5><h4 id="S盒压缩处理："><a href="#S盒压缩处理：" class="headerlink" title="S盒压缩处理："></a>S盒压缩处理：</h4><h5 id="48位-gt-32位"><a href="#48位-gt-32位" class="headerlink" title="48位-&gt;32位"></a>48位-&gt;32位</h5><h5 id="48位分成8组，每组6位"><a href="#48位分成8组，每组6位" class="headerlink" title="48位分成8组，每组6位"></a>48位分成8组，每组6位</h5><h5 id="每6位的首位和末尾组成二进制数字-gt-十进制：就是行数"><a href="#每6位的首位和末尾组成二进制数字-gt-十进制：就是行数" class="headerlink" title="每6位的首位和末尾组成二进制数字-&gt;十进制：就是行数"></a>每6位的首位和末尾组成二进制数字-&gt;十进制：就是行数</h5><h5 id="每6位的中间4位组成二进制数字-gt-十进制：就是列数"><a href="#每6位的中间4位组成二进制数字-gt-十进制：就是列数" class="headerlink" title="每6位的中间4位组成二进制数字-&gt;十进制：就是列数"></a>每6位的中间4位组成二进制数字-&gt;十进制：就是列数</h5><img src="/posts/b3ab0d9f/image-20210627181322374.png" alt="image-20210627181322374" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627181331989.png" alt="image-20210627181331989" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627181338296.png" alt="image-20210627181338296" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627181344540.png" alt="image-20210627181344540" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627181350580.png" alt="image-20210627181350580" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627181357629.png" alt="image-20210627181357629" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627181404836.png" alt="image-20210627181404836" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627181412269.png" alt="image-20210627181412269" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627181425453.png" alt="image-20210627181425453" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627181432599.png" alt="image-20210627181432599" style="zoom:50%;"><h2 id="考点总结"><a href="#考点总结" class="headerlink" title="考点总结"></a>考点总结</h2><h3 id="1-VPC的组成"><a href="#1-VPC的组成" class="headerlink" title="1.VPC的组成"></a>1.VPC的组成</h3><p>每个VPC都由一个路由器、至少一个私网网段和至少一个交换机组成。 </p><p>（要先建交换机，然后添加组件）</p><h3 id="2-负债均衡的概念、工作原理（1～2个选择题）"><a href="#2-负债均衡的概念、工作原理（1～2个选择题）" class="headerlink" title="2.负债均衡的概念、工作原理（1～2个选择题）"></a>2.负债均衡的概念、工作原理（1～2个选择题）</h3><h4 id="考点：几种转发方式？3种"><a href="#考点：几种转发方式？3种" class="headerlink" title="考点：几种转发方式？3种"></a>考点：几种转发方式？3种</h4><h4 id="概念：-1"><a href="#概念：-1" class="headerlink" title="概念："></a>概念：<img src="/posts/b3ab0d9f/image-20210627181717776.png" alt="image-20210627181717776" style="zoom:33%;"></h4><h4 id="工作原理："><a href="#工作原理：" class="headerlink" title="工作原理："></a>工作原理：</h4><img src="/posts/b3ab0d9f/image-20210627181743555.png" alt="image-20210627181743555" style="zoom:33%;"><img src="/posts/b3ab0d9f/image-20210627181805029.png" alt="image-20210627181805029" style="zoom:33%;"><h3 id="3-OSI的7层模型（主要设备协议对应哪一层？）"><a href="#3-OSI的7层模型（主要设备协议对应哪一层？）" class="headerlink" title="3.OSI的7层模型（主要设备协议对应哪一层？）"></a>3.OSI的7层模型（主要设备协议对应哪一层？）</h3><img src="/posts/b3ab0d9f/image-20210627181937377.png" alt="image-20210627181937377" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627181951459.png" alt="image-20210627181951459" style="zoom:50%;"><h3 id="4-特殊的IP地址"><a href="#4-特殊的IP地址" class="headerlink" title="4.特殊的IP地址"></a>4.特殊的IP地址</h3><img src="/posts/b3ab0d9f/image-20210627182008400.png" alt="image-20210627182008400" style="zoom:50%;"><h3 id="5-密码体制（5部分）"><a href="#5-密码体制（5部分）" class="headerlink" title="5.密码体制（5部分）"></a>5.密码体制（5部分）</h3><img src="/posts/b3ab0d9f/image-20210627182052642.png" alt="image-20210627182052642" style="zoom:33%;"><h3 id="6-古典密码（2种怎么算的？仿射密码？）"><a href="#6-古典密码（2种怎么算的？仿射密码？）" class="headerlink" title="6.古典密码（2种怎么算的？仿射密码？）"></a>6.古典密码（2种怎么算的？仿射密码？）</h3><img src="/posts/b3ab0d9f/image-20210627182157625.png" alt="image-20210627182157625" style="zoom:33%;"><img src="/posts/b3ab0d9f/image-20210627182216917.png" alt="image-20210627182216917" style="zoom:33%;"><img src="/posts/b3ab0d9f/image-20210627182225613.png" alt="image-20210627182225613" style="zoom:30%;"><h3 id="7-DES算法（很多选择题）"><a href="#7-DES算法（很多选择题）" class="headerlink" title="7.DES算法（很多选择题）"></a>7.DES算法（很多选择题）</h3><p>S盒代换怎么算的？</p><p>怎么进行初始置换？</p><h3 id="8-ADE算法（选择题）"><a href="#8-ADE算法（选择题）" class="headerlink" title="8.ADE算法（选择题）"></a>8.ADE算法（选择题）</h3><h4 id="考点：AES算法的流程"><a href="#考点：AES算法的流程" class="headerlink" title="考点：AES算法的流程"></a>考点：AES算法的流程</h4><img src="/posts/b3ab0d9f/image-20210627182511338.png" alt="image-20210627182511338" style="zoom:50%;"><h3 id="9-什么是弱密钥，半弱密钥？"><a href="#9-什么是弱密钥，半弱密钥？" class="headerlink" title="9.什么是弱密钥，半弱密钥？"></a>9.什么是弱密钥，半弱密钥？</h3><img src="/posts/b3ab0d9f/image-20210627182740316.png" alt="image-20210627182740316" style="zoom:50%;"><h3 id="10-AES，DES的S盒比较"><a href="#10-AES，DES的S盒比较" class="headerlink" title="10.AES，DES的S盒比较"></a>10.AES，DES的S盒比较</h3><img src="/posts/b3ab0d9f/image-20210627182900128.png" alt="image-20210627182900128" style="zoom:50%;"><h3 id="11-SM4密码算法（稍微看看）"><a href="#11-SM4密码算法（稍微看看）" class="headerlink" title="11.SM4密码算法（稍微看看）"></a>11.SM4密码算法（稍微看看）</h3><img src="/posts/b3ab0d9f/image-20210627183041612.png" alt="image-20210627183041612" style="zoom:50%;"><h3 id="12-数字信封解决什么问题？"><a href="#12-数字信封解决什么问题？" class="headerlink" title="12.数字信封解决什么问题？"></a>12.数字信封解决什么问题？</h3><h3 id="13-分组密码的工作模式（哪几种）"><a href="#13-分组密码的工作模式（哪几种）" class="headerlink" title="13.分组密码的工作模式（哪几种）"></a>13.分组密码的工作模式（哪几种）</h3><img src="/posts/b3ab0d9f/image-20210627183707597.png" alt="image-20210627183707597" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627183716055.png" alt="image-20210627183716055" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627183745216.png" alt="image-20210627183745216" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627183755386.png" alt="image-20210627183755386" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627183807367.png" alt="image-20210627183807367" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627183827824.png" alt="image-20210627183827824" style="zoom:50%;"><h3 id="14-RC4"><a href="#14-RC4" class="headerlink" title="14.RC4"></a>14.RC4</h3><img src="/posts/b3ab0d9f/image-20210627183947646.png" alt="image-20210627183947646" style="zoom:50%;"><h3 id="15-HASH函数"><a href="#15-HASH函数" class="headerlink" title="15.HASH函数"></a>15.HASH函数</h3><img src="/posts/b3ab0d9f/image-20210627184018241.png" alt="image-20210627184018241" style="zoom:50%;"><h3 id="16-SHA压缩处理"><a href="#16-SHA压缩处理" class="headerlink" title="16.SHA压缩处理"></a>16.SHA压缩处理</h3><img src="/posts/b3ab0d9f/image-20210627184134885.png" alt="image-20210627184134885" style="zoom:50%;"><img src="/posts/b3ab0d9f/image-20210627184142918.png" alt="image-20210627184142918" style="zoom:40%;">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>软件工程期中练习</title>
      <link href="posts/f29bfee8/"/>
      <url>posts/f29bfee8/</url>
      
        <content type="html"><![CDATA[<h6 id="一、-单选题"><a href="#一、-单选题" class="headerlink" title="一、 单选题"></a><strong>一、</strong> <strong>单选题</strong></h6><p><strong>1、软件产品与物质产品有很大区别,软件产品是一种( )产品。（1.5）</strong> </p><p>A、 有形 </p><p>B、 消耗 </p><p>C、 逻辑 </p><p>D、 文档 </p><p>正确答案： C </p><p>解析：</p><p><strong>2、计算机系统工程的目的是分析基于计算机的系统的()、性能等要求,并把它们分配到基于计算机系统的各个系统元素中,确定它们的约束条件和接口。（1.5）</strong> </p><p>A、 功能 </p><p>B、 非功能 </p><p>C、 人员 </p><p>D、 数据库 </p><p>正确答案： A </p><p>解析：</p><p><strong>3、抽象和()是结构化开发方法的主要思想,同时也是控制复杂性的两个基本手段。（1.5）</strong> </p><p>A、 细化 </p><p>B、 继承 </p><p>C、 分解 </p><p>D、 合并 </p><p>正确答案： C </p><p>解析：</p><p><strong>4、( )不是20世纪60年代中期以前软件开发的特点。（1.5）</strong> </p><p>A、 开发中已形成文档规范 </p><p>B、 开发依赖个人技能 </p><p>C、 没有开发方法指导 </p><p>D、 开发过程缺乏有效管理 </p><p>正确答案： A </p><p>解析：</p><p><strong>5、模块化是把软件按照规定原则,划分为一个个较小的,相互独立的但又相互()的部件。（1.5）</strong> </p><p>A、 关联 </p><p>B、 分隔 </p><p>C、 无关 </p><p>D、 集成 </p><p>正确答案： A </p><p>解析：</p><p><strong>6、软件工程要解决的问题是( )。（1.5）</strong> </p><p>A、 加快软件开发速度 </p><p>B、 降低软件开发成本 </p><p>C、 提高软件质量 </p><p>D、 以上都是 </p><p>正确答案： D </p><p>解析：</p><p><strong>7、开发一个基于计算机的系统通常都受到( )(人力、财力、设备等)和时间上的限制。（1.5）</strong> </p><p>A、 经费 </p><p>B、 环境 </p><p>C、 资源 </p><p>D、 软件 </p><p>正确答案： C </p><p>解析：</p><p><strong>8、软件设计的抽象包括过程抽象和()抽象。（1.5）</strong> </p><p>A、 数据 </p><p>B、 结构 </p><p>C、 功能 </p><p>D、 非功能 </p><p>正确答案： A </p><p>解析：</p><p><strong>9、瀑布模型突出的缺点是不适应( )的变动。（1.5）</strong> </p><p>A、 算法 </p><p>B、 程序语言 </p><p>C、 平台 </p><p>D、 用户需求 </p><p>正确答案： D </p><p>解析：</p><p><strong>10、软件会逐渐退化而不会磨损,其原因在于( )。（1.5）</strong> </p><p>A、 软件通常暴露在恶劣的环境下 </p><p>B、 软件错误通常发生在使用之后 </p><p>C、 不断的变更使组件接口之间引起错误 </p><p>D、 软件备件很难订购 </p><p>正确答案： C </p><p>解析：</p><p><strong>11、需求分析的任务是( )。（1.5）</strong> </p><p>A、 正确说明让软件“做什么” </p><p>B、 用DFD建模 </p><p>C、 用DD建立数学模型 </p><p>D、 给出需求规格说明书 </p><p>正确答案： A </p><p>解析：</p><p><strong>12、软件设计是把( )转换为软件表示的过程。（1.5）</strong> </p><p>A、 软件需要 </p><p>B、 系统分析 </p><p>C、 数据库 </p><p>D、 软件代码 </p><p>正确答案： A </p><p>解析：</p><p><strong>13、在系统结构图中,宽度是指()。（1.5）</strong> </p><p>A、 结构图中的层数 </p><p>B、 结构图中去除顶层后的层数 </p><p>C、 结构图中同一层次上模块总数的最大值 </p><p>D、 结构图中最底层次上的模块数 </p><p>正确答案： C </p><p>解析：</p><p><strong>14、软件设计是将软件分析模型中通过数据、功能和行为模型所展示的软件需求的信息,传送给设计阶段,产生数据/类设计、体系结构设计、()、部件级设计。（1.5）</strong> </p><p>A、 接口设计 </p><p>B、 数据库设计 </p><p>C、 人机界面设计 </p><p>D、 详细设计 </p><p>正确答案： A </p><p>解析：</p><p><strong>15、软件工程的出现主要是由于( ; ; ;)。（1.5）</strong> </p><p>A、 程序设计方法学的影响 ; </p><p>B、 其它工程科学的影响 ; </p><p>C、 软件危机的出现 </p><p>D、 计算机的发展 </p><p>正确答案： C </p><p>解析：C </p><p><strong>16、软件工程的主要目标是( ; ;)（1.5）</strong> </p><p>A、 软件需求 ; </p><p>B、 风险分析 </p><p>C、 软件实现 </p><p>D、 软件设计 </p><p>正确答案： C </p><p>解析：C </p><p><strong>17、软件生命周期中所花费用最多的阶段是()（1.5）</strong> </p><p>A、 详细设计 </p><p>B、 软件编码 </p><p>C、 软件测试 </p><p>D、 软件维护 </p><p>正确答案： D </p><p>解析：软件维护是一个漫长的过程</p><p><strong>18、下列属于应用软件的是()。I. 计算机辅助教学软件II. 软件测试工具III. 办公自动化软件IV. 工程与科学计算软件。()（1.5）</strong> </p><p>A、 I、II和III </p><p>B、 I、III和IV </p><p>C、 II、III和IV </p><p>D、 以上都正确 </p><p>正确答案： B </p><p>解析：</p><p><strong>19、软件工程方法是在实践中不断发展的方法,而早期的软件工程方法是指:()（1.5）</strong> </p><p>A、 原型化方法 </p><p>B、 结构化方法 </p><p>C、 面向对象方法 </p><p>D、 功能分解方法 </p><p>正确答案： B </p><p>解析：</p><p><strong>20、软件工程三要素是()（1.5）</strong> </p><p>A、 技术、方法和工具 </p><p>B、 方法、对象和类 </p><p>C、 过程、模型、方法 </p><p>D、 方法、工具和过程 </p><p>正确答案： D </p><p>解析：D </p><p><strong>21、软件工程的概念是( )年提出的。（1.5）</strong> </p><p>A、 1988 </p><p>B、 1968 </p><p>C、 1948 </p><p>D、 1928 </p><p>正确答案： B </p><p>解析：</p><p><strong>22、下面不是软件工程的三个要素的是( )（1.5）</strong> </p><p>A、 过程 </p><p>B、 方法 </p><p>C、 环境 </p><p>D、 工具 </p><p>正确答案： C </p><p>解析：</p><p><strong>23、下面不属于软件的组成的是( )（1.5）</strong> </p><p>A、 程序 </p><p>B、 记录 </p><p>C、 文档 </p><p>D、 数据 </p><p>正确答案： B </p><p>解析：</p><p><strong>24、软件工程的出现是由于( )（1.5）</strong> </p><p>A、 程序设计方法学的影响 </p><p>B、 软件产业化的需求 </p><p>C、 软件危机的出现 </p><p>D、 计算机的发展 </p><p>正确答案： C </p><p>解析：</p><p><strong>25、软件工程学的目的是以较低的成本,研制( )质量的软件（1.5）</strong> </p><p>A、 较高 </p><p>B、 较低 </p><p>C、 可靠 </p><p>D、 优秀 </p><p>正确答案： A </p><p>解析：</p><p><strong>26、软件可行性研究的目的是( )。（1.5）</strong> </p><p>A、 证明软件开发项目可行 </p><p>B、 证明软件开发项目不可行 </p><p>C、 阐述软件开发项目值得或不值得做 </p><p>D、 为了确定软件开发项目要不要做 </p><p>正确答案： C </p><p>解析：</p><p><strong>27、技术可行性研究要解决的问题是( )。（1.5）</strong> </p><p>A、 从技术方面说明项目是否可行 </p><p>B、 从技术上定义项目要解决的问题 </p><p>C、 给出项目开发可行的技术路线 </p><p>D、 给出精简的项目需求设计报告 </p><p>正确答案： A </p><p>解析：</p><p><strong>28、可行性研究的步骤首先是( )。（1.5）</strong> </p><p>A、 确定项目目标,即对要解决的问题进行定义 </p><p>B、 研究项目要求 </p><p>C、 对项目目标进行可行性分析 </p><p>D、 给出可行的解决方案 </p><p>正确答案： A </p><p>解析：</p><p><strong>29、可行性研究的任务不包括( )。（1.5）</strong> </p><p>A、 技术可行性 </p><p>B、 经济可行性 </p><p>C、 法律可行性 </p><p>D、 政治可行性 </p><p>正确答案： D </p><p>解析：</p><p><strong>30、数据流图(DFD)是( )方法中用于表示系统的逻辑模型的一种图形工具。（1.5）</strong> </p><p>A、 SA </p><p>B、 SD </p><p>C、 SP </p><p>D、 SC </p><p>正确答案： A </p><p>解析：</p><p><strong>31、需求规格说明书的作用不包括( )。（1.5）</strong> </p><p>A、 软件验收的依据 </p><p>B、 用户与开发人员对软件要做什么的共同理解 </p><p>C、 软件可行性研究的依据 </p><p>D、 软件设计的依据 </p><p>正确答案： C </p><p>解析：</p><p><strong>32、结构化分析方法(SA)是一种面向( )的分析方法。（1.5）</strong> </p><p>A、 数据结构 </p><p>B、 数据流 </p><p>C、 结构化数据系统 </p><p>D、 对象 </p><p>正确答案： B </p><p>解析：</p><p><strong>33、软件开发的需求活动,其主要任务是( )。（1.5）</strong> </p><p>A、 给出软件解决方案 </p><p>B、 给出系统模块结构 </p><p>C、 定义模块算法 </p><p>D、 定义需求并建立系统模型 </p><p>正确答案： D </p><p>解析：</p><p><strong>34、软件结构图的形态特征能反映程序重用率的是( )。（1.5）</strong> </p><p>A、 深度 </p><p>B、 宽度 </p><p>C、 扇入 </p><p>D、 扇出 </p><p>正确答案： C </p><p>解析：</p><p><strong>35、概要设计的目的是确定整个系统的( )。（1.5）</strong> </p><p>A、 规模 </p><p>B、 功能及模块结构 </p><p>C、 费用 </p><p>D、 测试方案 </p><p>正确答案： B </p><p>解析：</p><p><strong>36、耦合是对软件不同模块之间互连程度的度量。各种耦合从强到弱的排列为( )。（1.5）</strong> </p><p>A、 内容耦合,控制耦合,数据耦合,公共环境耦合 </p><p>B、 内容耦合,控制耦合,公共环境耦合,数据耦合 </p><p>C、 内容耦合,公共环境耦合,控制耦合,数据耦合 </p><p>D、 控制耦合,内容耦合,数据耦合,公共环境耦合 </p><p>正确答案： C </p><p>解析：</p><p><strong>37、当一个模块直接使用另一个模块的内部数据时,这种模块之间的耦合为( )。（1.5）</strong> </p><p>A、 数据耦合 </p><p>B、 公共耦合 </p><p>C、 标记耦合 </p><p>D、 内容耦合 </p><p>正确答案： D </p><p>解析：</p><p><strong>38、数据耦合和控制耦合相比,则( )成立。（1.5）</strong> </p><p>A、 数据耦合的耦合性强 </p><p>B、 控制耦合的耦合性强 </p><p>C、 两者的耦合性相当 </p><p>D、 两者的耦合性需要根据具体情况分析 </p><p>正确答案： B </p><p>解析：</p><p><strong>39、借助于软件工具,可将( )容易地转换为高级语言源程序。（1.5）</strong> </p><p>A、 程序流程图 </p><p>B、 N-S图 </p><p>C、 PAD图 </p><p>D、 判定表 </p><p>正确答案： C </p><p>解析：</p><p><strong>40、程序的三种基本结构是( )。（1.5）</strong> </p><p>A、 过程、子过程和子程序 </p><p>B、 递归、堆栈和队列 </p><p>C、 顺序、选择和重复 </p><p>D、 调用、返回和转移 </p><p>正确答案： C </p><p>解析：</p><h6 id="二、-判断题"><a href="#二、-判断题" class="headerlink" title="二、 判断题"></a><strong>二、</strong> <strong>判断题</strong></h6><p><strong>1、在软件产品交付给用户使用之后,就进入了软件运维阶段。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>2、软件运维的目标是保证软件在一个相当长的时期内能够正常运行,并且为了改正错误或满足新的需求对软件进行修改维护。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>3、当软件工程师知道软件或文档有涉及到社会关切的明显问题时,应确认、文档记录和报告给雇主或客户。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>4、软件工程的目标是生产具有正确性、可用性以及开销合宜的产品,这些目标都能满足。()（2.0）</strong> </p><p>正确答案： 错误</p><p>解析：</p><p><strong>5、面向对象模型适于大型复杂且需求模糊的项目。（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>6、在系统建模后可用原型进行系统模拟。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>7、____在数据流图中,带有箭头的线段表示的是控制流。（2.0）</strong> </p><p>正确答案： 错误</p><p>解析：</p><p><strong>8、风险分析是螺旋模型的重要内容之一。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>9、软件生存周期是指一个软件从定义开始直到该软件最终退役为止的整个时期。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>10、软件工程即是软件过程。()（2.0）</strong> </p><p>正确答案： 错误</p><p>解析：</p><p><strong>11、需要对项目进行有计划和可控制的管理。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>12、____软件需求分析阶段要确定软件系统要“做什么”。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>13、____需求分析员可以参加最后的需求评审工作。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>14、____在软件生产过程中,需求信息的来源是项目经理。()（2.0）</strong> </p><p>正确答案： 错误</p><p>解析：</p><p><strong>15、____需求分析阶段的任务是确定软件的功能。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>16、____如果在需求分析阶段采用了结构化分析方法,则软件设计阶段就应采用结构化设计方法。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>17、____概要设计与详细设计之间的关系是全局和局部的关系。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>18、详细设计也称模块设计。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p><p><strong>19、在数据代码设计时,应可能设计字母和数字混合代码。()（2.0）</strong> </p><p>正确答案： 错误</p><p>解析：</p><p><strong>20、概要设计的目的是确定整个系统的功能及模块结构。()（2.0）</strong> </p><p>正确答案： 正确</p><p>解析：</p>]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件工程单项选择练习</title>
      <link href="posts/f9182c22/"/>
      <url>posts/f9182c22/</url>
      
        <content type="html"><![CDATA[<p>**1、面向数据结构的开发方法的特点是()**。</p><p><strong>（1.0）</strong> </p><p>A、 将数据结构映射为程序结构 </p><p>B、 将数据流映射为程序结构 </p><p>C、 将程序流程图映射为控制流程图 </p><p>D、 将数据映射为代码 </p><p>正确答案： A </p><p>解析：</p><p><strong>2、软件测试是一个()而执行程序的过程。（1.2）</strong> </p><p>A、 为了证明程序是正确的 </p><p>B、 为了发现错误 </p><p>C、 为了体现程序满足需求 </p><p>D、 为了让程序能运行 </p><p>正确答案： B </p><p>解析：</p><p><strong>3、下面的()是正确的。（1.2）</strong> </p><p>A、 只有质量差的软件产品才需要维护 </p><p>B、 软件的维护成本通常比开发成本低 </p><p>C、 软件的不断修改将导致系统结构的恶化 </p><p>D、 重新开发一个新系统通常要比再工程的成本要低 </p><p>正确答案： C </p><p>解析：</p><p><strong>4、下面的()不是良好编码的原则。（1.2）</strong> </p><p>A、 在开始编码之前建立单元测试 </p><p>B、 建立一种有助于理解的直观布局 </p><p>C、 确保注释与代码完全一致 </p><p>D、 保持变量名简短以便代码紧凑 </p><p>正确答案： D </p><p>解析：</p><p><strong>5、对象是指一组属性以及这组属性上的专用操作的()。（1.2）</strong> </p><p>A、 结构体 </p><p>B、 集合 </p><p>C、 封装体 </p><p>D、 抽象体 </p><p>正确答案： C </p><p>解析：</p><p><strong>6、下面的()决策是在需求分析时做出的。（1.2）</strong> </p><p>A、 自动售票机系统的开发时间预计是6个月 </p><p>B、 自动售票机系统由用户界面子系统、价格计算子系统以及与中心计算机通信的网络子系统组成 </p><p>C、 自动售票机系统已经达到交付的要求 </p><p>D、 自动售票机系统将为使用者提供在线帮助 </p><p>正确答案： D </p><p>解析：</p><p><strong>7、条件覆盖的目的是()。（1.2）</strong> </p><p>A、 使程序中的每个判定中条件结果的所有可能组合都至少出现一次 </p><p>B、 使程序中的每个判定的所有可能结果都至少执行一次 </p><p>C、 使程序中的每个判定中每个条件的所有可能结果都至少出现一次 </p><p>D、 使程序中的每个可执行语句至少执行一次 </p><p>正确答案： C </p><p>解析：</p><p><strong>8、软件项目进度管理的目的是确保软件项目在规定的时间内()完成。（1.2）</strong> </p><p>A、 按期 </p><p>B、 提前 </p><p>C、 尽量 </p><p>D、 超期 </p><p>正确答案： A </p><p>解析：</p><p><strong>9、( )不是20世纪60年代中期以前软件开发的特点。（1.2）</strong> </p><p>A、 开发中已形成文档规范 </p><p>B、 开发依赖个人技能 </p><p>C、 没有开发方法指导 </p><p>D、 开发过程缺乏有效管理 </p><p>正确答案： A </p><p>解析：</p><p><strong>10、甘特图和()是两种常用的进度安排的图示方法。（1.2）</strong> </p><p>A、 网格图 </p><p>B、 网络图 </p><p>C、 流程图 </p><p>D、 因果图 </p><p>正确答案： B </p><p>解析：</p><p><strong>11、多态性是指()。（1.2）</strong> </p><p>A、 不同操作作用于不同的对象上可以有不同的解释,并产生不同的执行结果 </p><p>B、 不同操作作用于同一个对象上可以有同样的解释,并产生同样的执行结果 </p><p>C、 同一个操作作用于不同的对象上可以有不同的解释,并产生不同的执行结果 </p><p>D、 同一个操作作用于不同的对象上可以有同样的解释,并产生同样的执行结果 </p><p>正确答案： C </p><p>解析：</p><p><strong>12、在软件生存周期中,( )阶段主要任务是“弄清楚要做什么?” 。（1.2）</strong> </p><p>A、 软件设计 </p><p>B、 需求分析 </p><p>C、 软件测试 </p><p>D、 编码实现 </p><p>正确答案： B </p><p>解析：</p><p><strong>13、软件设计是将软件分析模型中通过数据、功能和行为模型所展示的软件需求的信息,传送给设计阶段,产生数据/类设计、体系结构设计、()、部件级设计。（1.2）</strong> </p><p>A、 接口设计 </p><p>B、 数据库设计 </p><p>C、 人机界面设计 </p><p>D、 详细设计 </p><p>正确答案： A </p><p>解析：</p><p><strong>14、软件产品与物质产品有很大区别,软件产品是一种( )产品（1.2）</strong> </p><p>A、 有形 </p><p>B、 消耗 </p><p>C、 逻辑 </p><p>D、 文档 </p><p>正确答案： C </p><p>解析：</p><p><strong>15、在软件项目管理中,通常将项目分解为任务-子任务等,其分解准则是()。（1.2）</strong> </p><p>A、 由用户指定 </p><p>B、 基于软件工程的过程 </p><p>C、 由开发人员自行决定 </p><p>D、 基于软件项目的要求 </p><p>正确答案： B </p><p>解析：</p><p><strong>16、下面的()是错误的。（1.2）</strong> </p><p>A、 软件交付的主要工作是将程序代码和相关文档交给用户 </p><p>B、 用户培训是帮助用户理解产品并掌握系统的使用和操作 </p><p>C、 软件部署是通过配置、安装和激活等活动保证软件系统的正常运行 </p><p>D、 持续集成是频繁持续地将团队成员的工作进行集成 </p><p>正确答案： A </p><p>解析：</p><p><strong>17、继承是类间的基本关系,它是基于层次关系的不同类()的一种机制。（1.2）</strong> </p><p>A、 共享数据和操作 </p><p>B、 定义数据和操作 </p><p>C、 区分数据和操作 </p><p>D、 实现数据和操作 </p><p>正确答案： A </p><p>解析：</p><p><strong>18、在系统结构图中,宽度是指()。（1.2）</strong> </p><p>A、 结构图中的层数 </p><p>B、 结构图中去除顶层后的层数 </p><p>C、 结构图中同一层次上模块总数的最大值 </p><p>D、 结构图中最底层次上的模块数 </p><p>正确答案： C </p><p>解析：</p><p><strong>19、一个由n个人组成的项目组内共存在()条通信路径。（1.2）</strong> </p><p>A、 n </p><p>B、 n(n-1)/2 </p><p>C、 n(n-1) </p><p>D、 n(n+1)/2 </p><p>正确答案： B </p><p>解析：</p><p><strong>20、软件方法是提供如何()软件的技术。（1.2）</strong> </p><p>A、 构造 </p><p>B、 获取 </p><p>C、 测试 </p><p>D、 分析 </p><p>正确答案： A </p><p>解析：</p><p><strong>21、概要设计的主要成果是( )。（1.2）</strong> </p><p>A、 用户的界面需求 </p><p>B、 用户的分析方案 </p><p>C、 概要设计说明书 </p><p>D、 系统总体方案 </p><p>正确答案： C </p><p>解析：</p><p><strong>22、测试和调试最大的不同在于( )。（1.2）</strong> </p><p>A、 操作者的心理状态不同 </p><p>B、 它们的行为取向不同 </p><p>C、 使用的工具不同 </p><p>D、 运用的方法不同 </p><p>正确答案： A </p><p>解析：</p><p><strong>23、瀑布模型不适合用于( )的软件开发。（1.2）</strong> </p><p>A、 需求模糊不清 </p><p>B、 用户不能参与开发 </p><p>C、 用户对计算机不了解 </p><p>D、 开发人员对业务知识不熟悉 </p><p>正确答案： A </p><p>解析：</p><p><strong>24、如果编写系统软件,可选用的语言是( )。（1.2）</strong> </p><p>A、 FoxPro </p><p>B、 COBOL </p><p>C、 C </p><p>D、 FORTRAN </p><p>正确答案： C </p><p>解析：</p><p><strong>25、如果你是某项目的项目经理,你已经估算出每个单元的成本是￥129。这个项目一共有1200单元,你采用什么估算方法?（1.2）</strong> </p><p>A、 自下而上估算法 </p><p>B、 类比估算法 </p><p>C、 专家估算法 </p><p>D、 参数估算法 </p><p>正确答案： B </p><p>解析：</p><p><strong>26、检查软件产品是否符合需求定义的过程称为( )。（1.2）</strong> </p><p>A、 确认测试 </p><p>B、 集成测试 </p><p>C、 验证测试 </p><p>D、 验收测试 </p><p>正确答案： A </p><p>解析：</p><p><strong>27、瀑布模型突出的缺点是不适应( )的变动。（1.2）</strong> </p><p>A、 算法 </p><p>B、 程序语言 </p><p>C、 平台 </p><p>D、 用户需求 </p><p>正确答案： D </p><p>解析：</p><p><strong>28、功能性注释的主要内容不包括( )。（1.2）</strong> </p><p>A、 程序段的功能 </p><p>B、 模块的功能 </p><p>C、 数据的状态 </p><p>D、 语句的功能 </p><p>正确答案： B </p><p>解析：</p><p><strong>29、软件开发方法是( )。（1.2）</strong> </p><p>A、 指导软件开发的一系列规则和约定 </p><p>B、 软件开发的步骤 </p><p>C、 软件开发的技术 </p><p>D、 软件开发的思想 </p><p>正确答案： A </p><p>解析：</p><p><strong>30、需求分析是回答系统必须( )的问题（1.2）</strong> </p><p>A、 做什么 </p><p>B、 怎么做 </p><p>C、 何时做 </p><p>D、 为谁做 </p><p>正确答案： A </p><p>解析：</p><p><strong>31、需求分析的任务是( )。（1.2）</strong> </p><p>A、 正确说明让软件“做什么” </p><p>B、 用DFD建模 </p><p>C、 用DD建立数学模型 </p><p>D、 给出需求规格说明书 </p><p>正确答案： A </p><p>解析：</p><p><strong>32、不属于序言性注释内容的是( )。（1.2）</strong> </p><p>A、 模块设计者 </p><p>B、 修改日期 </p><p>C、 程序的整体说明 </p><p>D、 语句功能 </p><p>正确答案： D </p><p>解析：</p><p><strong>33、质量控制是( )（1.2）</strong> </p><p>A、 对每个工作包增加工作时间 </p><p>B、 项目生存期的各个阶段都需要实施的 </p><p>C、 只需要做一次 </p><p>D、 只有大的项目才需要的 </p><p>正确答案： B </p><p>解析：</p><p><strong>34、衡量模块独立性的标准是( )。（1.2）</strong> </p><p>A、 耦合的类型 </p><p>B、 内聚的类型 </p><p>C、 模块信息的隐藏性 </p><p>D、 耦合性和内聚性 </p><p>正确答案： D </p><p>解析：</p><p><strong>35、软件需求分析阶段的工作,可以分为四个方面:需求获取、需求分析、编写需求规格说明书以及( )。（1.2）</strong> </p><p>A、 阶段性报告 </p><p>B、 需求评估 </p><p>C、 总结 </p><p>D、 都不正确 </p><p>正确答案： B </p><p>解析：</p><p><strong>36、概要设计的目的是确定整个系统的( )。（1.2）</strong> </p><p>A、 规模 </p><p>B、 功能及模块结构 </p><p>C、 费用 </p><p>D、 测试方案 </p><p>正确答案： B </p><p>解析：</p><p><strong>37、集成化开发环境中的环境集成机制不包括( )。（1.2）</strong> </p><p>A、 数据集成 </p><p>B、 控制集成 </p><p>C、 界面集成 </p><p>D、 服务集成 </p><p>正确答案： D </p><p>解析：</p><p><strong>38、编制一个好的程序应强调良好的编程风格,例如,选择标识符的名字时应考虑( )。（1.2）</strong> </p><p>A、 名字长度越短越好,以减少源程序的输入量 </p><p>B、 多个变量共用一个名字,以减少变量名的数目 </p><p>C、 选择含义明确的名字,以正确提示所代表的实体 </p><p>D、 尽量用关键字作名字,以使名字标准化 </p><p>正确答案： C </p><p>解析：</p><p><strong>39、关于浮动,下面除了哪个之外都是不正确的?（1.2）</strong> </p><p>A、 每个任务都有浮动 </p><p>B、 只有复杂的项目有浮动 </p><p>C、 浮动是在不增加项目成本的条件下,一个活动可以延迟的时间量 </p><p>D、 浮动是在不影响项目完成时间的前提下,一个活动可以延迟的时间量 </p><p>正确答案： D </p><p>解析：</p><p><strong>40、“软件危机”产生的主要原因是( )。（1.2）</strong> </p><p>A、 软件日益庞大 </p><p>B、 开发方法不当 </p><p>C、 开发人员编写程序能力差 </p><p>D、 没有维护好软件 </p><p>正确答案： A </p><p>解析：</p><p><strong>41、研究开发所需要的成本和资源是属于可行性研究中的 ( ) 。（1.2）</strong> </p><p>A、 技术可行性研究 </p><p>B、 经济可行性研究 </p><p>C、 社会可行性研究 </p><p>D、 法律可行性研究 </p><p>正确答案： B </p><p>解析：</p><p><strong>42、年利率为i,现存入P元不计复利,n年后本金利息为( )。（1.2）</strong> </p><p>A、 P×(1+i)n </p><p>B、 P×(1-i×n) </p><p>C、 P×(1+i×n) </p><p>D、 P×(1+i)×n </p><p>正确答案： C </p><p>解析：</p><p><strong>43、需求分析阶段最重要的技术文档之一是( )。（1.2）</strong> </p><p>A、 项目开发计划 </p><p>B、 设计说明书 </p><p>C、 需求规格说明书 </p><p>D、 可行性分析报告 </p><p>正确答案： C </p><p>解析：</p><p><strong>44、软件需求分析阶段建立原型的主要目的是( )。（1.2）</strong> </p><p>A、 确定系统的功能和性能要求 </p><p>B、 确定系统的运行要求 </p><p>C、 确定系统是否满足用户需要 </p><p>D、 确定系统是否满足开发人员需要 </p><p>正确答案： C </p><p>解析：</p><p><strong>45、数据字典不包括的条目是( )。（1.2）</strong> </p><p>A、 数据项 </p><p>B、 数据流 </p><p>C、 数据类型 </p><p>D、 数据加工 </p><p>正确答案： C </p><p>解析：</p><p><strong>46、软件设计中划分模块的一个准则是( )。（1.2）</strong> </p><p>A、 低内聚低耦合 </p><p>B、 低内聚高耦合 </p><p>C、 高内聚低耦合 </p><p>D、 高内聚高耦合 </p><p>正确答案： C </p><p>解析：</p><p><strong>47、为了提高模块的独立性,模块内部最好是( )。（1.2）</strong> </p><p>A、 逻辑内聚 </p><p>B、 时间内聚 </p><p>C、 功能内聚 </p><p>D、 通信内聚 </p><p>正确答案： C </p><p>解析：</p><p><strong>48、在详细设计阶段,经常采用的工具包括( )。（1.2）</strong> </p><p>A、 SC图 </p><p>B、 DFD图 </p><p>C、 PAD图 </p><p>D、 IDEF图 </p><p>正确答案： C </p><p>解析：</p><p><strong>49、软件设计一般分为总体设计和详细设计,它们之间的关系是( )。（1.2）</strong> </p><p>A、 全局和局部 </p><p>B、 抽象和具体 </p><p>C、 总体和层次 </p><p>D、 功能和结构 </p><p>正确答案： B </p><p>解析：</p><p><strong>50、软件测试不需要了解软件设计的( )。（1.2）</strong> </p><p>A、 功能 </p><p>B、 内部结构 </p><p>C、 处理过程 </p><p>D、 条件 </p><p>正确答案： B </p><p>解析：</p><p><strong>51、软件按照设计的要求,在规定时间和条件下达到不出故障、持续运行的要求的质量特性称为( )。（1.2）</strong> </p><p>A、 可用性 </p><p>B、 可靠性 </p><p>C、 正确性 </p><p>D、 完整性 </p><p>正确答案： B </p><p>解析：</p><p><strong>52、在软件生存周期中,时间最长、所花费的精力和费用也最多的阶段是( )。（1.2）</strong> </p><p>A、 详细设计 </p><p>B、 维护 </p><p>C、 概要设计 </p><p>D、 测试 </p><p>正确答案： B </p><p>解析：</p><p><strong>53、开发一个基于计算机的系统通常都受到()(人力、财力、设备等)和时间上的限制。（1.2）</strong> </p><p>A、 经费 </p><p>B、 环境 </p><p>C、 资源 </p><p>D、 软件 </p><p>正确答案： C </p><p>解析：</p><p><strong>54、软件测试用例由测试输入数据、()及实际输出组成。（1.2）</strong> </p><p>A、 输出数据 </p><p>B、 预期结果 </p><p>C、 软件需求 </p><p>D、 软件设计 </p><p>正确答案： B </p><p>解析：</p><p><strong>55、需求分析的结果是产生定义下面()问题域的分析模型。（1.2）</strong> </p><p>A、 信息 </p><p>B、 功能 </p><p>C、 性能 </p><p>D、 以上所有选项 </p><p>正确答案： D </p><p>解析：</p><p><strong>56、下面的()是对提高程序编码效率没有影响的。（1.2）</strong> </p><p>A、 变量名的使用 </p><p>B、 选择良好的设计方法 </p><p>C、 选择良好的算法 </p><p>D、 选择良好的数据结构 </p><p>正确答案： A </p><p>解析：</p><p><strong>57、为了保证软件的质量,使其具有较好的可维护性,编码的关键在于()。（1.2）</strong> </p><p>A、 选择合适的程序设计语言 </p><p>B、 选择好的程序设计风格 </p><p>C、 具有好的数据结构 </p><p>D、 选择好的运行环境 </p><p>正确答案： B </p><p>解析：</p><p><strong>58、()是由于计算机软件和硬件环境变化而修改软件的过程。（1.2）</strong> </p><p>A、 改正性维护 </p><p>B、 适应性维护 </p><p>C、 完善性维护 </p><p>D、 预防性维护 </p><p>正确答案： B </p><p>解析：</p><p><strong>59、轿车类与汽车类之间是()关系。（1.2）</strong> </p><p>A、 一般-特殊 </p><p>B、 整体-部分 </p><p>C、 依赖 </p><p>D、 关联 </p><p>正确答案： A </p><p>解析：</p><p><strong>60、软件原来没有帮助信息,使用不方便,现在要增加帮助信息。这种维护性活动称之为()（1.2）</strong> </p><p>A、 改正性维护 </p><p>B、 适应性维护 </p><p>C、 完善性维护 </p><p>D、 预防性维护 </p><p>正确答案： C </p><p>解析：</p><p><strong>61、程序应具有良好的风格,力图从编码原则的角度提高程序的可读性,改善程序质量。程序设计风格包括源程序文档化、数据说明、语句结构和输入输出四个方面。为使软件具有清晰结构和良好的风格,关于程序设计风格不可取的是()。（1.2）</strong> </p><p>A、 程序编写考虑清晰性 </p><p>B、 应当有适量的注释 </p><p>C、 尽量在一行内写多个语句 </p><p>D、 使用有意义的标识符 </p><p>正确答案： C </p><p>解析：</p><p><strong>62、需求规格说明描述了( )。（1.2）</strong> </p><p>A、 计算机系统的功能、性能及其约束 </p><p>B、 每个指定系统的实现 </p><p>C、 软件体系结构的元素 </p><p>D、 系统仿真所需要的时间 </p><p>正确答案： A </p><p>解析：</p><p><strong>63、通常将软件生命周期划分为系统工程、需求分析、软件设计、编码实现、软件测试、运行维护等阶段,每个阶段都有各自侧重的任务和目标,以下不属于需求分析阶段的任务是()。（1.2）</strong> </p><p>A、 弄清楚需要做什么 </p><p>B、 弄清楚怎么做,规划系统体系结构 </p><p>C、 编制软件需求规格说明书 </p><p>D、 通过调研等方式获取需求 </p><p>正确答案： B </p><p>解析：</p><p><strong>64、基于计算机的系统本身可以成为一个更大的基于计算机系统中的一个()。（1.2）</strong> </p><p>A、 软件 </p><p>B、 硬件 </p><p>C、 文档 </p><p>D、 元素 </p><p>正确答案： D </p><p>解析：</p><p><strong>65、软件测试的关键是()。（1.2）</strong> </p><p>A、 设计测试用例 </p><p>B、 运行测试用例 </p><p>C、 分析源代码 </p><p>D、 获取用户需求 </p><p>正确答案： A </p><p>解析：</p><p><strong>66、计算机系统工程的目的是分析基于计算机的系统的()、性能等要求,并把它们分配到基于计算机系统的各个系统元素中,确定它们的约束条件和接口。（1.2）</strong> </p><p>A、 功能 </p><p>B、 非功能 </p><p>C、 人员 </p><p>D、 数据库 </p><p>正确答案： A </p><p>解析：</p><p><strong>67、软件工程要解决的问题是( )。（1.2）</strong> </p><p>A、 加快软件开发速度 </p><p>B、 降低软件开发成本 </p><p>C、 提高软件质量 </p><p>D、 以上都是 </p><p>正确答案： D </p><p>解析：</p><p><strong>68、模块化是把软件按照规定原则,划分为一个个较小的,相互独立的但又相互()的部件。（1.2）</strong> </p><p>A、 关联 </p><p>B、 分隔 </p><p>C、 无关 </p><p>D、 集成 </p><p>正确答案： A </p><p>解析：</p><p><strong>69、基于计算机系统的元素包括软件、硬件、人员、数据库、文档和()。（1.2）</strong> </p><p>A、 规程 </p><p>B、 规则 </p><p>C、 过程 </p><p>D、 规范 </p><p>正确答案： A </p><p>解析：</p><p><strong>70、经济可行性分析中的效益包括经济效益和()效益。（1.2）</strong> </p><p>A、 社会 </p><p>B、 成本 </p><p>C、 消耗 </p><p>D、 环境 </p><p>正确答案： A </p><p>解析：</p><p><strong>71、抽象和()是结构化开发方法的主要思想,同时也是控制复杂性的两个基本手段。（1.2）</strong> </p><p>A、 细化 </p><p>B、 继承 </p><p>C、 分解 </p><p>D、 合并 </p><p>正确答案： C </p><p>解析：</p><p><strong>72、数据流图主要用于()建模,描述系统的输入数据流,如何经过一系列的加工变换,逐步变换成系统的输出数据流。（1.2）</strong> </p><p>A、 行为 </p><p>B、 功能 </p><p>C、 状态 </p><p>D、 数据 </p><p>正确答案： B </p><p>解析：</p><p><strong>73、软件设计的抽象包括过程抽象和()抽象。（1.2）</strong> </p><p>A、 数据 </p><p>B、 结构 </p><p>C、 功能 </p><p>D、 非功能 </p><p>正确答案： A </p><p>解析：</p><p><strong>74、软件调试的目的是()。（1.2）</strong> </p><p>A、 发现软件中的错误 </p><p>B、 确定并纠正软件中的错误 </p><p>C、 修改软件的功能 </p><p>D、 发现软件的错误症状 </p><p>正确答案： B </p><p>解析：</p><p><strong>75、1968年的NATO会议上针对“软件危机”问题,提出了软件工程,它是将系统化的、规范的、可定量的方法应用于软件的开发、运行和维护的过程,即将( )应用于软件开发中。（1.2）</strong> </p><p>A、 文档化 </p><p>B、 工程化 </p><p>C、 信息化 </p><p>D、 自动化 </p><p>正确答案： B </p><p>解析：</p><p><strong>76、软件会逐渐退化而不会磨损,其原因在于( )。（1.2）</strong> </p><p>A、 软件通常暴露在恶劣的环境下 </p><p>B、 软件错误通常发生在使用之后 </p><p>C、 不断的变更使组件接口之间引起错误 </p><p>D、 软件备件很难订购 </p><p>正确答案： C </p><p>解析：</p><p><strong>77、部件级设计的任务是将软件体系结构的结构性元素变换为对软件部件的()。（1.2）</strong> </p><p>A、 抽象描述 </p><p>B、 数据说明 </p><p>C、 过程性描述 </p><p>D、 整体结构 </p><p>正确答案： C </p><p>解析：</p><p><strong>78、下面的()不是一种好的做法。（1.2）</strong> </p><p>A、 好的注释应解释为什么,而不是怎么样。 </p><p>B、 好的命名应一目了然,不需要读者去猜,甚至不需要注释。 </p><p>C、 如果项目中原有代码不符合新的规范,应允许其存在,同时在新的代码中要延续原有的风格。 </p><p>D、 如果项目中原有代码不符合新的规范,应允许其存在,但不应在新的代码中延续旧的风格。 </p><p>正确答案： C </p><p>解析：</p><p><strong>79、软件设计必须实现分析模型中描述的所有需求,包括满足用户希望的()需求。（1.2）</strong> </p><p>A、 功能 </p><p>B、 非功能 </p><p>C、 性能 </p><p>D、 隐式 </p><p>正确答案： D </p><p>解析：</p><p><strong>80、在软件各种维护活动中, () 所占比重最大,约占整个维护工作的50%。（1.2）</strong> </p><p>A、 纠错性维护 </p><p>B、 适应性维护 </p><p>C、 预防性维护 </p><p>D、 改善性维护 </p><p>正确答案： D </p><p>解析：</p><p><strong>81、Scrum方法的核心概念包括透明、()、适应。（1.2）</strong> </p><p>A、 检验 </p><p>B、 复用 </p><p>C、 继承 </p><p>D、 原型 </p><p>正确答案： A </p><p>解析：</p><p><strong>82、软件项目管理是指软件生存周期中软件管理者所进行的一系列活动,其目的是在一定的时间和预设范围内,有效地利用人力、资源、技术和工具,使软件系统或软件产品按原定计划和()如期完成。（2.8）</strong> </p><p>A、 质量要求 </p><p>B、 人员安排 </p><p>C、 资源限制 </p><p>D、 时间期限 </p><p>正确答案： A </p><p>解析：</p>]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据期末复习</title>
      <link href="posts/b509aa1e/"/>
      <url>posts/b509aa1e/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据期末复习"><a href="#大数据期末复习" class="headerlink" title="大数据期末复习"></a>大数据期末复习</h1><h2 id="1-Hadoop"><a href="#1-Hadoop" class="headerlink" title="1.Hadoop"></a>1.Hadoop</h2><img src="/posts/b509aa1e/image-20210625092903596.png" alt="image-20210625092903596" style="zoom:50%;"><img src="/posts/b509aa1e/image-20210625092923392.png" alt="image-20210625092923392" style="zoom:50%;"><h2 id="2-HDFS"><a href="#2-HDFS" class="headerlink" title="2.HDFS"></a>2.HDFS</h2><img src="/posts/b509aa1e/image-20210625092946941.png" alt="image-20210625092946941" style="zoom:50%;"><img src="/posts/b509aa1e/image-20210625093128073.png" alt="image-20210625093128073" style="zoom:50%;"><h2 id="3-Spark"><a href="#3-Spark" class="headerlink" title="3.Spark"></a>3.Spark</h2><img src="/posts/b509aa1e/image-20210625175711590.png" alt="image-20210625175711590" style="zoom:50%;"><h2 id="4-一些图"><a href="#4-一些图" class="headerlink" title="4.一些图"></a>4.一些图</h2><img src="/posts/b509aa1e/image-20210625175738601.png" alt="image-20210625175738601" style="zoom:50%;"><img src="/posts/b509aa1e/image-20210625175826717.png" alt="image-20210625175826717" style="zoom:50%;"><img src="/posts/b509aa1e/image-20210625175856387.png" alt="image-20210625175856387" style="zoom:50%;">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>软件工程期末复习</title>
      <link href="posts/8d265993/"/>
      <url>posts/8d265993/</url>
      
        <content type="html"><![CDATA[<h1 id="软件工程期末复习"><a href="#软件工程期末复习" class="headerlink" title="软件工程期末复习"></a>软件工程期末复习</h1><h2 id="第一章-概述"><a href="#第一章-概述" class="headerlink" title="第一章 概述"></a>第一章 概述</h2><h3 id="软件危机定义：⚠️"><a href="#软件危机定义：⚠️" class="headerlink" title="软件危机定义：⚠️"></a>软件危机定义：⚠️</h3><p>是指在计算机软件的开发和维护过程中所遇到的一系列严重问题。实际上，几乎所有软件都不同程度地存在这些问题。</p><h3 id="产生软件危机的原因-："><a href="#产生软件危机的原因-：" class="headerlink" title="产生软件危机的原因 ："></a>产生软件危机的原因 ：</h3><h4 id="1-与软件本身的特点有关"><a href="#1-与软件本身的特点有关" class="headerlink" title="1.与软件本身的特点有关"></a>1.与软件本身的特点有关</h4><p>软件是逻辑部件。</p><p>软件不会被“用坏”，如果发现了错误，很可能是开发时期引入。</p><p>软件规模庞大，而且程序复杂性将随着程序规模的增加而呈指数上升。</p><h4 id="2-与软件开发与维护的方法不正确有关"><a href="#2-与软件开发与维护的方法不正确有关" class="headerlink" title="2.与软件开发与维护的方法不正确有关"></a>2.与软件开发与维护的方法不正确有关</h4><p>忽视软件需求分析的重要性。对用户要求没有完整准确的认识就匆忙着手编写程序。越早开始写程序，完成它所需要用的时间往往越长。</p><p>认为软件开发就是写程序并设法使之运行。程序只是完整的软件产品的一个组成部分。一个软件产品必须由一个完整的配置组成，软件配置主要包括程序、文档和数据等成分。</p><p>轻视软件维护。维护是极端艰巨复杂的工作，需要花费很大代价。软件维护的费用占软件总费用的55%~70%。</p><h3 id="软件工程的定义："><a href="#软件工程的定义：" class="headerlink" title="软件工程的定义："></a>软件工程的定义：</h3><p>软件工程是指导计算机软件开发和维护的一门工程学科。采用工程的概念、原理、技术和方法来开发与维护软件，把经过时间考验而证明正确的管理技术和当前能够得到的最好的技术方法结合起来，以经济地开发出高质量的软件并有效地维护它，这就是软件工程。</p><p>Fritz Bauer：软件工程是为了经济地获得可靠的和能在实际机器上高效运行的软件而建立和使用的好的工程原则。</p><p> 1968年在第一届NATO会议上曾经给出了软件工程的一个早期定义:“软件工程就是为了经济地获得可靠的且能在实际机器上有效地运行的软件，而建立和使用完善的工程原理。”</p><p><strong>IEEE**</strong>(1993年)：软件工程是:①把系统的、规范的、可度量的途径应用于软件开发、运行和维护过程，也就是把工程应用于软件;②研究①中提到的途径。**</p><p>计算机科学技术百科全书：软件工程是应用计算机科学、数学及管理科学等原理，以工程化的原则和方法制作软件的工程。</p><h3 id="软件工程方法学3要素："><a href="#软件工程方法学3要素：" class="headerlink" title="软件工程方法学3要素："></a>软件工程方法学3要素：</h3><p>方法，工具，过程</p><h3 id="软件工程方法学："><a href="#软件工程方法学：" class="headerlink" title="软件工程方法学："></a>软件工程方法学：</h3><h4 id="1-传统方法学-生命周期方法学或结构化范型-——强调自顶向下"><a href="#1-传统方法学-生命周期方法学或结构化范型-——强调自顶向下" class="headerlink" title="1.传统方法学(生命周期方法学或结构化范型)——强调自顶向下"></a>1.传统方法学(生命周期方法学或结构化范型)——强调自顶向下</h4><p>n采用结构化技术来完成软件；</p><p>n划分为若干个阶段，然后顺序地完成每个阶段的任务；每个阶段的任务相对独立，而且比较简单，降低了整个软件开发工程的困难程度；</p><p>n前一个阶段是后一个阶段的前提和基础，而后一阶段提出的解法更具体，细节更多；</p><p>n每个阶段结束前必须从技术和管理两方面对这个阶段的开发成果进行严格的检查，通过之后这个阶段才算结束；保证质量，提高可维护性；</p><p>缺点：<br>当软件规模庞大，或者对软件的需求是模糊的或会随时间变化而变化的时候，使用传统方法学开发软件往往不成功<br>使用传统方法学开发出的软件，维护起来仍然很困难。<br>数据与操作相分离</p><h4 id="2-面向对象方法学——强调主动地多次反复迭代"><a href="#2-面向对象方法学——强调主动地多次反复迭代" class="headerlink" title="2. 面向对象方法学——强调主动地多次反复迭代"></a>2. 面向对象方法学——强调主动地多次反复迭代</h4><p>面向对象方法：把数据和行为看成同等重要，它是一种</p><p>以数据为主线，把数据和对数据的操作紧密地结合起来</p><p>的方法</p><p>面向对象方法学4个要点：</p><p>对象(object)：融合了数据及在数据上的操作行为。</p><p>类(class)：类是对具有相同数据和相同操作的一组相似对象的定义。</p><p>继承：按照父类与子类的关系，把若干个相关类组成一个层次结构的系统。</p><p>消息：对象彼此间仅能通过发送消息互相联系</p><p>面向对象方法学的优点：</p><p>面向对象方法学的尽量模拟人类习惯的思维方式，使开发软件的方法与过程尽可能接近人类认识世界解决问题的方法与过程。</p><p>面向对象方法学开发软件的过程，是一个主动地多次反复迭代的演化过程，保证了在各项开发活动之间的平滑过渡。</p><p>促进了软件重用。最终的软件产品由许多较小的、基本上独立的对象组成，每个对象相当于一个微型程序，而且大多数对象都与现实世界中的实体相对应，降低了复杂性，提高了可理解性，简化了开发和维护工作。</p><h3 id="软件生命周期-：（简答题）⚠️"><a href="#软件生命周期-：（简答题）⚠️" class="headerlink" title="软件生命周期 ：（简答题）⚠️"></a>软件生命周期 ：（简答题）⚠️</h3><h4 id="考点：为什么要划分阶段的去做软件工程的项目？每个时期对应哪个阶段？"><a href="#考点：为什么要划分阶段的去做软件工程的项目？每个时期对应哪个阶段？" class="headerlink" title="考点：为什么要划分阶段的去做软件工程的项目？每个时期对应哪个阶段？"></a>考点：为什么要划分阶段的去做软件工程的项目？每个时期对应哪个阶段？</h4><p>在软件维护阶段花的时间最久</p><h4 id="三个时期八个阶段："><a href="#三个时期八个阶段：" class="headerlink" title="三个时期八个阶段："></a>三个时期八个阶段：</h4><p>软件生命周期由软件定义、软件开发和运行维护(也称为软件维护)三个时期组成，每个时期又进一步划分成若干个阶段。</p><img src="/posts/8d265993/image-20210615085550431.png" alt="image-20210615085550431" style="zoom:50%;"><h3 id="软件过程：（必考传统模型，螺旋，喷泉）⚠️"><a href="#软件过程：（必考传统模型，螺旋，喷泉）⚠️" class="headerlink" title="软件过程：（必考传统模型，螺旋，喷泉）⚠️"></a>软件过程：（必考传统模型，螺旋，喷泉）⚠️</h3><h4 id="传统的瀑布模型瀑布模型"><a href="#传统的瀑布模型瀑布模型" class="headerlink" title="传统的瀑布模型瀑布模型"></a><strong>传统的瀑布模型</strong>瀑布模型</h4><img src="/posts/8d265993/image-20210615090003468.png" alt="image-20210615090003468" style="zoom:50%;"><h4 id="实际的瀑布模型"><a href="#实际的瀑布模型" class="headerlink" title="实际的瀑布模型"></a><strong>实际的瀑布模型</strong></h4><img src="/posts/8d265993/image-20210615090033946.png" alt="image-20210615090033946" style="zoom:50%;"><h4 id="瀑布模型的特点：（重点）"><a href="#瀑布模型的特点：（重点）" class="headerlink" title="瀑布模型的特点：（重点）"></a>瀑布模型的特点：（重点）</h4><ol><li>阶段间具有顺序性和依赖性</li></ol><p>前一阶段的工作完成之后，才能开始后一阶段的工作；</p><p>前一阶段的输出文档就是后一阶段的输入文档。</p><ol start="2"><li>推迟实现的观点</li></ol><p>n对于规模较大的软件项目来说，往往编码开始得越早最终完成开发工作所需要的时间反而越长。</p><ol start="3"><li>质量保证的观点</li></ol><p>每个阶段都必须完成规定的文档，是“文档驱动”的模型；</p><p>每个阶段结束前都要对所完成的文档进行评审，尽早发现问题，改正错误。</p><h4 id="瀑布模型的优点："><a href="#瀑布模型的优点：" class="headerlink" title="瀑布模型的优点："></a>瀑布模型的优点：</h4><p>可强迫开发人员采用规范的方法；</p><p>严格地规定了每个阶段必须提交的文档；</p><p>要求每个阶段交出的所有产品都必须经过质量保证小组的仔细验证。</p><h4 id="瀑布模型的缺点："><a href="#瀑布模型的缺点：" class="headerlink" title="瀑布模型的缺点："></a>瀑布模型的缺点：</h4><p>只能通过文档了解产品，不经过实践的需求是不切实际的。</p><p>瀑布模型适用于：  </p><p>需求是预知的；</p><p>软件实现方法是成熟的；  </p><p>项目周期较短。  </p><h4 id="快速原型："><a href="#快速原型：" class="headerlink" title="快速原型："></a>快速原型：</h4><p>是快速建立起来的可以在计算机上运行的程序，它所能完成的功能往往是最终产品能完成的功能的一个子集。 </p><h4 id="增量-渐增-模型："><a href="#增量-渐增-模型：" class="headerlink" title="增量(渐增)模型："></a>增量(渐增)模型：</h4><p>把软件产品作为一系列的增量构件来设计、编码、集成和测试。每个构件由多个相互作用的模块构成，并且能够完成特定的功能</p><h4 id="螺旋模型-（重点）："><a href="#螺旋模型-（重点）：" class="headerlink" title="螺旋模型 （重点）："></a>螺旋模型 （重点）：</h4><p>螺旋模型的基本思想：使用原型及其他方法来尽量降低风险。把它看作在每个阶段之前都增加了风险分析过程的快速原型模型。</p><p>快速+瀑布相结合 </p><p><strong>简化的螺旋模型</strong></p><img src="/posts/8d265993/image-20210615090436789.png" alt="image-20210615090436789" style="zoom:50%;"><p><strong>完整的螺旋模型</strong></p><img src="/posts/8d265993/image-20210615090457198.png" alt="image-20210615090457198" style="zoom:50%;"><p>制定计划、风险分析、实施工程、客户评估四种活动的循环</p><h4 id="螺旋模型的优点："><a href="#螺旋模型的优点：" class="headerlink" title="螺旋模型的优点："></a>螺旋模型的优点：</h4><p>n主要优势在于它是风险驱动的。</p><p>n对可选方案和约束条件的强调有利于已有软件的重用，也有助于把软件质量作为软件开发的一个重要目标；</p><p>n减少了过多测试或测试不足所带来的风险；</p><p>n维护只是模型的另一个周期，维护和开发之间没有本质区别。</p><h4 id="螺旋模型的缺点："><a href="#螺旋模型的缺点：" class="headerlink" title="螺旋模型的缺点："></a>螺旋模型的缺点：</h4><p>n采用螺旋模型需要具有相当丰富的风险评估经验和专门知识，在风险较大的项目开发中，如果未能够及时标识风险，势必造成重大损失。</p><p>n过多的迭代次数会增加开发成本，延迟提交时间。</p><p>螺旋模型适用于：</p><p>n特别适用于庞大、复杂并具有高风险的系统。</p><p>n适用于内部开发的大规模软件项目。</p><h4 id="喷泉模型："><a href="#喷泉模型：" class="headerlink" title="喷泉模型："></a>喷泉模型：</h4><p>是典型的面向对象生命周期模型。 </p><p>喷泉这词体现了面向对象软件开发过程迭代我无缝的特性。</p><p><strong><em>\</em>优点：**</strong>该模型的各个阶段没有明显的界限，开发人员可以同步进行开发。其优点是可以提高软件项目开发效率，节省开发时间，适应于<a href="https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1" target="_blank" rel="noopener">面向对象</a>的<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B" target="_blank" rel="noopener">软件开发过程</a>。</p><p><strong><em>\</em>缺点：**</strong>由于喷泉模型在各个<a href="https://baike.baidu.com/item/%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5" target="_blank" rel="noopener">开发阶段</a>是重叠的，因此在开发过程中需要大量的开发人员，因此*<strong>*不利于项目的管理**</strong>。此外这种模型要求严格管理<a href="https://baike.baidu.com/item/%E6%96%87%E6%A1%A3" target="_blank" rel="noopener">文档</a>，使得*<strong>*审核的难度加大**</strong>，尤其是面对可能随时加入各种信息、需求与资料的情况。</p><h2 id="第二章-可行性研究"><a href="#第二章-可行性研究" class="headerlink" title="第二章 可行性研究"></a>第二章 可行性研究</h2><h3 id="可行性研究的目的和任务：⚠️"><a href="#可行性研究的目的和任务：⚠️" class="headerlink" title="可行性研究的目的和任务：⚠️"></a>可行性研究的目的和任务：⚠️</h3><p><strong><em>\</em>可行性研究目的**</strong>是通过运用科学的方法对拟议中的工程项目进行全面的、综合的技术经济分析，来回答：本项目在技术上是否可行，经济上是否有生命力，财务上是否有利可图，需要多少投资，资金来源能否保证，建设周期多长，需要多少物力、人力资源等，进而判断该项目值不值得去做。</p><p><strong><em>\</em>基本任务**</strong>，是对新建或改建项目的主要问题，从技术经济角度进行全面的分析研究，并对其投产后的经济效果进行预测，在既定的范围内进行方案论证的选择，以便最合理地利用资源，达到预定的社会效益和经济效益。</p><img src="/posts/8d265993/image-20210625101851961.png" alt="image-20210625101851961" style="zoom:50%;"><img src="/posts/8d265993/image-20210625101910585.png" alt="image-20210625101910585" style="zoom:50%;"><h3 id="可行性研究的定义：⚠️"><a href="#可行性研究的定义：⚠️" class="headerlink" title="可行性研究的定义：⚠️"></a>可行性研究的定义：⚠️</h3><p>目的：弄清用户需要计算机解决的问题根本所在，以及项目所需的资源和经费。</p><p>任务：在向用户调查的基础上，编写《关于系统规模和目标的报告书 》</p><h3 id="可行性研究的内容："><a href="#可行性研究的内容：" class="headerlink" title="可行性研究的内容："></a>可行性研究的内容：</h3><p>•首先进一步分析和澄清问题定义，导出系统的逻辑模型；</p><p>•然后从系统逻辑模型出发，探索若干种可供选择的主要解法(即系统实现方案)；</p><p>•对每种解法都研究它的可行性，至少应该从三方面研究每种解法的可行性 。</p><p>技术可行性 经济可行性 操作可行性 运行可行性 法律可行性</p><h3 id="可行性研究过程："><a href="#可行性研究过程：" class="headerlink" title="可行性研究过程："></a><strong>可行性研究过程</strong>：</h3><ol><li>复查系统规模和目标</li></ol><p>•对问题定义阶段书写的关于规模和目标的报告书进一步复查确认。</p><ol start="2"><li>研究目前正在使用的系统</li></ol><p>•新的目标系统必须也能完成旧系统的基本功能；</p><p>•新系统必须能解决旧系统中存在的问题。</p><ol start="3"><li>导出新系统的高层逻辑模型</li></ol><p>•现有的物理系统(系统流程图)→现有系统的逻辑模型（数据流图+数据字典）→目标系统的逻辑模型→新的物理系统</p><ol start="4"><li>进一步定义问题</li></ol><p>•分析员应该和用户一起再次复查问题定义、工程规模和目标。 </p><ol start="5"><li>导出和评价供选择的解法</li></ol><p>•首先从技术角度出发排除不可行方案；</p><p>•其次考虑操作可行性，去掉用户不能接受的方案；</p><p>•接下来考虑经济可行性，估计余下的每个可能的系统的开发成本和运行费用，进行成本/效益分析；</p><p>•最后为每个在各方面都可行的系统制定实现进度表。</p><ol start="6"><li>推荐行动方针</li></ol><p>•根据可行性研究结果应该做出的一个关键性决定，是否继续进行这项开发工程。</p><p>•若继续开发，选择一种最好的解法，说明选择这个解决方案的理由。</p><p>•进行比较仔细的成本/效益分析。</p><ol start="7"><li>草拟开发计划</li></ol><p>•分析员应该为所推荐的方案草拟一份开发计划，制定工程进度表、估计对各类开发人员和各种资源的需要情况、估计系统生命周期每个阶段的成本、给出下一个阶段(需求分析)的详细进度表和成本估计。</p><img src="/posts/8d265993/image-20210615091223203.png" alt="image-20210615091223203" style="zoom:50%;"><h3 id="系统流程图："><a href="#系统流程图：" class="headerlink" title="系统流程图："></a>系统流程图：</h3><p>•是概括地描绘物理系统的传统工具。</p><p>•用图形符号以黑盒子形式描绘组成系统的每个部件(程序，文档，数据库，人工过程等)。</p><p>•表达的是数据在系统各部件之间流动的情况，而不是对数据进行加工处理的控制过程。</p><h3 id="数据流图-DFD-：（必考）⚠️"><a href="#数据流图-DFD-：（必考）⚠️" class="headerlink" title="数据流图 (DFD) ：（必考）⚠️"></a>数据流图 (DFD) ：（必考）⚠️</h3><h4 id="考点：符号代表什么意思"><a href="#考点：符号代表什么意思" class="headerlink" title="考点：符号代表什么意思"></a>考点：符号代表什么意思</h4><p>•是一种图形化技术，它描绘信息流和数据从输入移动到输出的过程中所经受的变换。</p><p>•在数据流图中没有任何具体的物理部件，它只是描绘数据在软件中流动和被处理的逻辑过程。</p><p>•描绘“做什么”，不考虑“怎么做”。</p><p>•今后进行软件设计的很好的出发点。</p><p>•描绘出所有可能的数据流向，而并非描绘出某个数据流的条件；忽略出错出处，内务处理（打开/关闭文件）。</p><p>为了避免可能引起的误解，如果代表同一个事物的同样符号在图中出现在n个地方，则在这个符号的一个角上画(n-1)条短斜线做标记</p><p>数据流图（Data Flow Diagram）：简称DFD，它从数据传递和加工角度，以图形方式来表达系统的逻辑功能、<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE/5947370" target="_blank" rel="noopener">数据</a>在系统内部的逻辑流向和逻辑变换过程，是<a href="https://baike.baidu.com/item/%E7%BB%93%E6%9E%84%E5%8C%96%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/4136420" target="_blank" rel="noopener">结构化系统分析方法</a>的主要表达工具及用于表示软件模型的一种图示方法。</p><h4 id="基本符号：⚠️"><a href="#基本符号：⚠️" class="headerlink" title="基本符号：⚠️"></a><strong>基本符号：</strong>⚠️</h4><img src="/posts/8d265993/image-20210615091526289.png" alt="image-20210615091526289" style="zoom:50%;"><p>•数据源点/终点：通常是人或部门，可重复表示；</p><p>•处理：一个处理框可以代表一系列程序、单个程序或程序的一个模块； 穿孔机穿孔或目视检查数据正确性等人工处理过程；</p><p>•数据存储：可以表示一个文件、文件的一部分、数据库的元素或记录的一部分等，可以存储在任何介质上；数据存储是处于静止状态的数据； </p><p>•数据流：描绘所有可能的数据流向，而不应该描绘出现某个数据流的条件 ，数据流是处于运动中的数据。数据流与程序流程图(参看本书第5章)中用箭头表示的控制流有本质不同，千万不要混淆。</p><h4 id="DFD-画法："><a href="#DFD-画法：" class="headerlink" title="DFD 画法："></a><strong>DFD</strong> 画法：</h4><p>(一)确定系统的输入输出<br>由于系统究竟包括哪些功能可能一时难于弄清楚，可使范围尽量大一些，把可能有的内容全部都包括进去。此时，应该向用户了解“系统从外界接受什么数据”、“系统向外界送出什么数据”等信息，然后，根据用户的答复画出数据流图的外围。<br>(二)由外向里画系统的顶层数据流图<br>首先，将系统的输入数据和输出数据用一连串的加工连接起来。在数据流的值发生变化的地方就是一个加工。接着，给各个加工命名。然后，给加工之间的数据命名。最后，给文件命名。<br>(三)自顶向下逐层分解，绘出分层数据流图<br>对于大型的系统，为了控制复杂性，便于理解，需要采用自顶向下逐层分解的方法进行，即用分层的方法将一个数据流图分解成几个数据流图来分别表示 [1]  。</p><h4 id="例2：高考录取统分子系统"><a href="#例2：高考录取统分子系统" class="headerlink" title="例2：高考录取统分子系统"></a>例2：高考录取统分子系统</h4><p>​    功能如下：<br>​          (1) 计算标准分——根据考生原始分计算标准分，存入考生分数文件；<br>​          (2) 计算录取线分——根据标准分和招生计划文件中的招生人数，计算录取线分，存入录取线文件。</p><ol><li><p>提取数据流图的四种成分<br>数据源点和终点：考生<br>处理：(1) 计算标准分</p><pre><code>         (2) 计算录取线分</code></pre><p>数据存储：(1) 考生分数文件   </p><pre><code>                 (2) 招生计划文件                 (3) 录取线文件</code></pre><p>数据流：原始分；标准分；</p><pre><code>             招生人数；录取线分 </code></pre></li><li><p>画基本数据流图</p><img src="/posts/8d265993/image-20210615092011736.png" alt="image-20210615092011736" style="zoom:50%;"></li><li><p>画功能级数据流图</p><img src="/posts/8d265993/image-20210615092031334.png" alt="image-20210615092031334" style="zoom:50%;"></li></ol><h3 id="成本-效益分析：⚠️"><a href="#成本-效益分析：⚠️" class="headerlink" title="成本/效益分析：⚠️"></a>成本/效益分析：⚠️</h3><h4 id="考点：记住公式，这一年的钱，算未来一年钱的公式"><a href="#考点：记住公式，这一年的钱，算未来一年钱的公式" class="headerlink" title="考点：记住公式，这一年的钱，算未来一年钱的公式"></a>考点：记住公式，这一年的钱，算未来一年钱的公式</h4><ol><li><h4 id="货币的时间价值-P-51-表-2-3-⚠️"><a href="#货币的时间价值-P-51-表-2-3-⚠️" class="headerlink" title="货币的时间价值 (P.51-表 2.3)⚠️"></a>货币的时间价值 (P.51-表 2.3)⚠️</h4></li></ol><p>通常用利率的形式表示货币的时间价值。<br>   假设年利率为 i ，如果现在存入 P 元，则 n 年后可以得到的钱数为<br>                            F = P ( 1 + i ) n<br>   反之，如果 n 年后能收入 F 元钱，那么这些钱的现在价值是<br>                              P = F / ( 1 + i ) n </p>   <img src="/posts/8d265993/image-20210615092329777.png" alt="image-20210615092329777" style="zoom:50%;"><h4 id="2-投资回收期"><a href="#2-投资回收期" class="headerlink" title="2. 投资回收期"></a><strong>2.</strong> <strong>投资回收期</strong></h4><p>所谓投资回收期就是使累计的经济效益等于最初投资所需要的时间。</p><img src="/posts/8d265993/image-20210615092413326.png" alt="image-20210615092413326" style="zoom:50%;"><p>通常用投资回收期衡量一项开发工程的价值。<br>例：投资回收期 = 2 + 774.88 / 1779.44 = 2.44年</p><h2 id="第三章-需求分析"><a href="#第三章-需求分析" class="headerlink" title="第三章 需求分析"></a>第三章 需求分析</h2><h4 id="需求分析的结构化分析方法-SA-，必需遵守的准则："><a href="#需求分析的结构化分析方法-SA-，必需遵守的准则：" class="headerlink" title="需求分析的结构化分析方法(SA)，必需遵守的准则："></a>需求分析的结构化分析方法(SA)，必需遵守的准则：</h4><p>必需理解并描述问题的信息域，根据这条准则应该建立数据模型。(E-R图)<br>必须定义软件应完成的功能，这条准则要求建立功能模型。（DFD图）<br>必须描述作为外部事件结果的软件行为，这条准则要求建立行为模型。（状态转换图）<br>必须对描述信息、功能和行为的模型进行分解，用层次的方式展示细节。</p><h4 id="需求分析过程应该建立3种模型，分别是："><a href="#需求分析过程应该建立3种模型，分别是：" class="headerlink" title="需求分析过程应该建立3种模型，分别是："></a>需求分析过程应该建立3种模型，分别是：</h4><p>数据模型 功能模型 行为模型</p><img src="/posts/8d265993/image-20210615092825074.png" alt="image-20210615092825074" style="zoom:50%;"><p>数据字典：是分析模型的核心，它描述软件使用或产生的所有数据对象。<br>实体-联系图：描绘数据对象及数据对象之间的关系，是用于建立数据模型的图形。<br>数据流图：描绘当数据在软件系统中移动时被变换的逻辑过程，指明系统具有的变换数据的功能，因此，数据流图是建立功能模型的基础。<br>状态转换图(简称为状态图)：指明了作为外部事件结果的系统行为。为此，状态转换图描绘了系统的各种行为模式(称为“状态”)和在不同状态间转换的方式。状态转换图是行为建模的基础。 </p><h3 id="ER图：⚠️"><a href="#ER图：⚠️" class="headerlink" title="ER图：⚠️"></a>ER图：⚠️</h3><h4 id="考点：知道ER图包括哪3个成分"><a href="#考点：知道ER图包括哪3个成分" class="headerlink" title="考点：知道ER图包括哪3个成分"></a>考点：知道ER图包括哪3个成分</h4><h4 id="ER图中包含："><a href="#ER图中包含：" class="headerlink" title="ER图中包含："></a>ER图中包含：</h4><p>实体(即数据对象)，用矩形框表示；</p><p>关系，用连接相关实体的菱形框表示；</p><p>属性，用椭圆形或圆角矩形表示，并用直线把实体(或关系)与其属性连接起来。</p><h4 id="例1：某校教学管理系统的ER图"><a href="#例1：某校教学管理系统的ER图" class="headerlink" title="例1：某校教学管理系统的ER图"></a>例1：某校教学管理系统的ER图</h4><img src="/posts/8d265993/image-20210615093014836.png" alt="image-20210615093014836" style="zoom:50%;"><h2 id="第五章-总体设计"><a href="#第五章-总体设计" class="headerlink" title="第五章 总体设计"></a>第五章 总体设计</h2><h3 id="描绘软件结构的图形工具：⚠️"><a href="#描绘软件结构的图形工具：⚠️" class="headerlink" title="描绘软件结构的图形工具：⚠️"></a>描绘软件结构的图形工具：⚠️</h3><p>层次图</p><p>HIPO图</p><p>结构图</p><h3 id="结构化分析和结构化设计的关系："><a href="#结构化分析和结构化设计的关系：" class="headerlink" title="结构化分析和结构化设计的关系："></a>结构化分析和结构化设计的关系：</h3><img src="/posts/8d265993/image-20210615093252351.png" alt="image-20210615093252351" style="zoom:50%;"><h3 id="模块独立程度的两个定性标准度量：⚠️"><a href="#模块独立程度的两个定性标准度量：⚠️" class="headerlink" title="模块独立程度的两个定性标准度量：⚠️"></a>模块独立程度的两个定性标准度量：⚠️</h3><p>耦合衡量不同模块彼此间互相依赖(连接)的紧密程度。耦合要低，即每个模块和其他模块之间的关系要简单；<br>内聚衡量一个模块内部各个元素彼此结合的紧密程度。内聚要高，每个模块完成一个相对独立的特定子功能。 </p><h3 id="1-耦合⚠️"><a href="#1-耦合⚠️" class="headerlink" title="1. 耦合⚠️"></a>1. 耦合⚠️</h3><p>耦合：是对一个软件结构内不同模块之间互连程度的度量。</p><p>要求：在软件设计中应该追求尽可能松散耦合的系统。</p><p>可以研究、测试或维护任何一个模块，而不需要对系统的其他模块有很多了解；</p><p>模块间联系简单，发生在一处的错误传播到整个系统的可能性就很小；</p><p>模块间的耦合程度强烈影响系统的可理解性、可测试性、可靠性和可维护性。</p><p>耦合程度的度量：</p><h4 id="1-非直接耦合-完全独立-no-direct-coupling"><a href="#1-非直接耦合-完全独立-no-direct-coupling" class="headerlink" title="(1) 非直接耦合/完全独立(no direct coupling)"></a>(1) 非直接耦合/完全独立(no direct coupling)</h4><p>如果两个模块中的每一个都能独立地工作而不需要另一个模块的存在，那么它们完全独立。</p><p>在一个软件系统中不可能所有模块之间都没有任何连接。</p><img src="/posts/8d265993/image-20210615093448480.png" alt="image-20210615093448480" style="zoom:50%;"><h4 id="2-数据耦合-data-coupling"><a href="#2-数据耦合-data-coupling" class="headerlink" title="(2) 数据耦合(data coupling)"></a>(2) 数据耦合(data coupling)</h4><p>如果两个模块彼此间通过<strong>参数</strong>交换信息，而且<strong>交换的信息仅仅是数据</strong>，那么这种耦合称为数据耦合</p><img src="/posts/8d265993/image-20210615093500552.png" alt="image-20210615093500552" style="zoom:50%;"><p>评价：</p><p><strong>系统中至少必须存在这种耦合</strong>。一般说来，<strong>一个系统内可以只包含数据耦合</strong>。</p><p>数据耦合是理想的目标。</p><p>维护更容易，对一个模块的修改不会是另一个模块产生退化错误。 </p><h4 id="3-控制耦合-control-coupling"><a href="#3-控制耦合-control-coupling" class="headerlink" title="(3) 控制耦合(control coupling)"></a>(3) 控制耦合(control coupling)</h4><p>如果两个<strong>模块彼此间</strong>传递的信息中有控制信息，这种耦合称为控制耦合。</p><img src="/posts/8d265993/image-20210615093525205.png" alt="image-20210615093525205" style="zoom:50%;"><p>评价：</p><p><strong>控制耦合往往是多余的</strong>，把模块适当分解之后通常可以用数据耦合代替它。</p><p>被调用的模块需知道调用模块的内部结构和逻辑，降低了重用的可能性 。</p><h4 id="4-特征耦合-stamp-coupling"><a href="#4-特征耦合-stamp-coupling" class="headerlink" title="(4) 特征耦合(stamp coupling)"></a>(4) 特征耦合(stamp coupling)</h4><p>当把<strong>整个数据结构作为参数传递</strong>而<strong>被调用的模块只需要使用其中一部分数据元素时</strong>，就出现了特征耦合。</p><p>评价：</p><p>被调用的模块可使用的数据多于它确实需要的数据，这将导致对数据的访问失去控制，从而给计算机犯罪提供了机会。</p><p>无论何时把指针作为参数进行传递，都应该仔细检查该耦合。</p><h4 id="5-公共环境耦合-common-coupling"><a href="#5-公共环境耦合-common-coupling" class="headerlink" title="(5) 公共环境耦合(common coupling)"></a>(5) 公共环境耦合(common coupling)</h4><p>当两个或多个模块通过一个公共数据环境相互作用时，它们之间的耦合称为公共环境耦合。公共环境可以是全程变量、共享的通信区、内存的公共覆盖区、任何存储介质上的文件、物理设备等等。</p><h4 id="公共环境耦合的类型："><a href="#公共环境耦合的类型：" class="headerlink" title="公共环境耦合的类型："></a>公共环境耦合的类型：</h4><p>一个模块往公共环境送数据，另一个模块从公共环境取数据。数据耦合的一种形式，是比较松散的耦合。</p><p>两个模块都既往公共环境送数据又从里面取数据，这种耦合比较紧密，介于数据耦合和控制耦合之间。</p><img src="/posts/8d265993/image-20210615093726746.png" alt="image-20210615093726746" style="zoom:50%;"><h4 id="6-内容耦合-content-coupling"><a href="#6-内容耦合-content-coupling" class="headerlink" title="(6) 内容耦合(content coupling)"></a>(6) 内容耦合(content coupling)</h4><p><strong>最高程度的耦合是内容耦合</strong>。如果出现下列情况之一，两个模块间就发生了内容耦合：</p><p>一个模块访问另一个模块的内部数据；</p><p>一个模块不通过正常入口转到另一个模块的内部；</p><p>两个模块有一部分程序代码重叠；</p><p>一个模块有多个入口。</p><img src="/posts/8d265993/image-20210615093741993.png" alt="image-20210615093741993" style="zoom:50%;"><p>耦合是影响软件复杂程度的一个重要因素。</p><h4 id="应该采取下述设计原则："><a href="#应该采取下述设计原则：" class="headerlink" title="应该采取下述设计原则："></a>应该采取下述设计原则：</h4><p>​     尽量<strong>使用数据耦合</strong>，少用控制耦合和特征耦合，</p><p>​     限制公共环境耦合的范围，<strong>完全不用内容耦合</strong>。 </p><h3 id="2-内聚⚠️"><a href="#2-内聚⚠️" class="headerlink" title="2. 内聚⚠️"></a>2. 内聚⚠️</h3><p>内聚：<strong>标志一个模块内各个元素彼此结合的紧密程度</strong>，它是信息隐藏和局部化概念的自然扩展。简单地说，理想内聚的模块只做一件事情。</p><p>要求：设计时应该力求做到<strong>高内聚</strong>，通常中等程度的内聚也是可以采用的，而且效果和高内聚相差不多；但是，低内聚不要使用。</p><p>内聚和耦合是密切相关的，模块内的<strong>高内聚往往意味着模块间的松耦合</strong>。实践表明内聚更重要，应该把更多注意力集中到<strong>提高模块的内聚程度</strong>上。</p><h3 id="内聚程度的度量："><a href="#内聚程度的度量：" class="headerlink" title="内聚程度的度量："></a>内聚程度的度量：</h3><h4 id="1-偶然内聚-coincidental-cohesion"><a href="#1-偶然内聚-coincidental-cohesion" class="headerlink" title="(1) 偶然内聚(coincidental cohesion)"></a>(1) 偶然内聚(coincidental cohesion)</h4><p>如果一个模块完成一组任务，这些任务彼此间即使有关系，关系也是很松散的，就叫做偶然内聚。</p><p>评价：</p><p>模块内各元素之间没有实质性联系，很可能在一种应用场合需要修改这个模块，在另一种应用场合又不允许这种修改，从而陷入困境；</p><p>可理解性差，可维护性产生退化；</p><p>模块是不可重用的。</p><p>解决方案：</p><p>将模块分成更小的模块，每个小模块执行一个操作。</p><h4 id="2-逻辑内聚-logical-cohesion"><a href="#2-逻辑内聚-logical-cohesion" class="headerlink" title="(2) 逻辑内聚(logical cohesion)"></a>(2) 逻辑内聚(logical cohesion)</h4><p>如果一个模块完成的任务在逻辑上属于相同或相似的一类，则称为逻辑内聚。</p><img src="/posts/8d265993/image-20210615094020180.png" alt="image-20210615094020180" style="zoom:50%;"><p>评价：</p><p>接口难以理解，造成整体上不易理解；</p><p>完成多个操作的代码互相纠缠在一起，即使局部功能的修改有时也会影响全局，导致严重的维护问题；</p><p>难以重用。</p><p>解决方案：</p><p>模块分解。 </p><h4 id="3-时间内聚-temporal-cohesion"><a href="#3-时间内聚-temporal-cohesion" class="headerlink" title="(3) 时间内聚(temporal cohesion)"></a>(3) 时间内聚(temporal cohesion)</h4><p>如果一个模块包含的任务必须在同一段时间内执行，就叫时间内聚。</p><p>评价：</p><p>时间关系在一定程度上反映了程序某些实质，所以时间内聚比逻辑内聚好一些。</p><p>模块内操作之间的关系很弱，与其他模块的操作却有很强的关联。</p><p>时间内聚的模块不太可能重用。 </p><h4 id="4-过程内聚-procedural-cohesion"><a href="#4-过程内聚-procedural-cohesion" class="headerlink" title="(4) 过程内聚(procedural cohesion)"></a>(4) 过程内聚(procedural cohesion)</h4><p>如果一个模块内的处理元素是相关的，而且必须以特定次序执行，则称为过程内聚。</p><p>使用程序流程图作为工具设计软件时，常常通过研究流程图确定模块的划分，这样得到的往往是过程内聚的模块。</p><p>评价：</p><p>比时间内聚好，至少操作之间是过程关联的</p><p>仍是弱连接，不太可能重用模块。</p><p>解决方案：</p><p>分割为单独的模块，每个模块执行一个操作。</p><h4 id="5-通信内聚-communicational-cohesion"><a href="#5-通信内聚-communicational-cohesion" class="headerlink" title="(5) 通信内聚(communicational cohesion)"></a>(5) 通信内聚(communicational cohesion)</h4><p>如果模块中所有元素都使用同一个输入数据和(或)产生同一个输出数据，则称为通信内聚。即在同一个数据结构上操作。</p><p>评价：</p><p>模块中各操作紧密相连，比过程内聚更好。</p><p>不能重用。</p><p>解决方案：</p><p>分成多个模块，每个模块执行一个操作。</p><h4 id="6-顺序内聚-sequential-cohesion"><a href="#6-顺序内聚-sequential-cohesion" class="headerlink" title="(6) 顺序内聚(sequential cohesion)"></a>(6) 顺序内聚(sequential cohesion)</h4><p>如果一个模块内的处理元素和同一个功能密切相关，而且这些处理必须顺序执行，则称为顺序内聚。</p><p>评价：</p><p>根据数据流图划分模块时，通常得到顺序内聚的模块，这种模块彼此间的连接往往比较简单。</p><h4 id="7-功能内聚-functional-cohesion"><a href="#7-功能内聚-functional-cohesion" class="headerlink" title="(7) 功能内聚(functional cohesion)"></a>(7) 功能内聚(functional cohesion)</h4><p>如果模块内所有处理元素属于一个整体，完成一个单一的功能，则称为功能内聚。<strong>功能内聚是最高程度的内聚</strong>。</p><p>评价：</p><p>模块可重用，应尽可能重用；</p><p>可隔离错误，维护更容易；</p><p>扩充产品功能时更容易。</p><h3 id="七种内聚的优劣评分结果："><a href="#七种内聚的优劣评分结果：" class="headerlink" title="七种内聚的优劣评分结果："></a>七种内聚的优劣评分结果：</h3><p>高内聚：<strong>功能内聚</strong>   10分</p><p>​          <strong>顺序内聚</strong>   9分 </p><p>中内聚：通信内聚   7分 </p><p>​          过程内聚   5分</p><p>低内聚：时间内聚   3分</p><p>​          逻辑内聚   1分</p><p>​          <strong>偶然内聚</strong>   0分</p><p><strong>设计时力争做到高内聚，并且能够辨认出低内聚的模块。</strong></p><h3 id="散入散出："><a href="#散入散出：" class="headerlink" title="散入散出："></a>散入散出：</h3><img src="/posts/8d265993/image-20210615094356906.png" alt="image-20210615094356906" style="zoom:50%;"><h3 id="事务流变换流：-有时间就看"><a href="#事务流变换流：-有时间就看" class="headerlink" title="事务流变换流：(有时间就看)"></a>事务流变换流：(有时间就看)</h3><img src="/posts/8d265993/image-20210615094441464.png" alt="image-20210615094441464" style="zoom:50%;"><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p>一般说来，如果数据流不具有显著的事务特点，最好使用变换分析；反之，如果具有明显的事务中心，则应该采用事务分析技术。</p><p>机械地遵循变换分析或事务分析的映射规则，可能会得到一些不必要的控制模块，如果它们确实用处不大，那么可以而且应该把它们合并。</p><p>如果一个控制模块功能过分复杂，则应该分解为两个或多个控制模块，或者增加中间层次的控制模块。 </p><h2 id="第六章-详细设计"><a href="#第六章-详细设计" class="headerlink" title="第六章 详细设计"></a>第六章 详细设计</h2><h3 id="程序控制结构结构："><a href="#程序控制结构结构：" class="headerlink" title="程序控制结构结构："></a>程序<strong>控制结构</strong>结构：</h3><img src="/posts/8d265993/image-20210615094924477.png" alt="image-20210615094924477" style="zoom:50%;"><img src="/posts/8d265993/image-20210615094932617.png" alt="image-20210615094932617" style="zoom:50%;"><p>经典的结构程序设计：只允许使用顺序、IF-THEN-ELSE型分支和DO-WHILE型循环这3种基本控制结构；</p><p>扩展的结构程序设计：如果除了上述3种基本控制结构之外，还允许使用DO-CASE型多分支结构和DO-UNTIL型循环结构；</p><p>修正的结构程序设计：再加上允许使用LEAVE(或BREAK)结构。 </p><h3 id="过程设计的工具：⚠️"><a href="#过程设计的工具：⚠️" class="headerlink" title="过程设计的工具：⚠️"></a>过程设计的工具：⚠️</h3><h4 id="程序流程图："><a href="#程序流程图：" class="headerlink" title="程序流程图："></a>程序流程图：</h4><p>程序流程图又称为程序框图，它是历史最悠久、使用最广泛的描述过程设计的方法。</p><p>它的主要优点是对控制流程的描绘很直观，便于初学者掌握。</p><p>程序流程图历史悠久，至今仍在广泛使用着。</p><h4 id="程序流程图基本符号："><a href="#程序流程图基本符号：" class="headerlink" title="程序流程图基本符号："></a>程序流程图基本符号：</h4><img src="/posts/8d265993/image-20210615095214735.png" alt="image-20210615095214735" style="zoom:50%;"><img src="/posts/8d265993/image-20210615095222120.png" alt="image-20210615095222120" style="zoom:33%;"><h4 id="程序流程图的主要缺点："><a href="#程序流程图的主要缺点：" class="headerlink" title="程序流程图的主要缺点："></a>程序流程图的主要缺点：</h4><p>程序流程图本质上不是逐步求精的好工具，它诱使程序员过早地考虑程序的控制流程，而不去考虑程序的全局结构。</p><p>程序流程图中用箭头代表控制流，因此程序员不受任何约束，可以完全不顾结构程序设计的精神，随意转移控制。</p><p>程序流程图不易表示数据结构。 </p><h4 id="盒图具有下述特点："><a href="#盒图具有下述特点：" class="headerlink" title="盒图具有下述特点："></a>盒图具有下述特点：</h4><p>功能域明确。</p><p>不可能任意转移控制。</p><p>很容易确定局部和全程数据的作用域。</p><p>很容易表现嵌套关系，也可以表示模块的层次结构。</p><h4 id="盒图基本符号："><a href="#盒图基本符号：" class="headerlink" title="盒图基本符号："></a>盒图基本符号：</h4><img src="/posts/8d265993/image-20210615095345846.png" alt="image-20210615095345846" style="zoom:50%;"><img src="/posts/8d265993/image-20210615095412577.png" alt="image-20210615095412577" style="zoom:33%;"><h4 id="PAD图："><a href="#PAD图：" class="headerlink" title="PAD图："></a>PAD图：</h4><p>PAD是问题分析图(problem analysis diagram)的英文缩写，自1973年由日本日立公司发明以后，已得到一定程度的推广。</p><p>它用二维树形结构的图来表示程序的控制流，将这种图翻译成程序代码比较容易。 </p><h4 id="PAD图基本符号："><a href="#PAD图基本符号：" class="headerlink" title="PAD图基本符号："></a>PAD图基本符号：</h4><img src="/posts/8d265993/image-20210615095502123.png" alt="image-20210615095502123" style="zoom:50%;"><img src="/posts/8d265993/image-20210615095516485.png" alt="image-20210615095516485" style="zoom:33%;"><h4 id="PAD图的主要优点如下："><a href="#PAD图的主要优点如下：" class="headerlink" title="PAD图的主要优点如下："></a>PAD图的主要优点如下：</h4><p>使用表示结构化控制结构的PAD符号设计出来的程序必然是结构化程序。</p><p>PAD图所描绘的程序结构十分清晰。</p><p>PAD图表现程序逻辑易读、易懂、易记。　</p><p>容易将PAD图转换成高级语言源程序，这种转换可用软件工具自动完成。</p><p>即可表示程序逻辑，也可描绘数据结构。</p><p>PAD图的符号支持自顶向下、逐步求精方法的使用。</p><h4 id="例题：某程序流程图如右图所示，请分别用N-S图和PAD图表示"><a href="#例题：某程序流程图如右图所示，请分别用N-S图和PAD图表示" class="headerlink" title="例题：某程序流程图如右图所示，请分别用N-S图和PAD图表示"></a>例题：某程序流程图如右图所示，请分别用N-S图和PAD图表示</h4><img src="/posts/8d265993/image-20210615095603547.png" alt="image-20210615095603547" style="zoom:50%;"><img src="/posts/8d265993/image-20210615095619219.png" alt="image-20210615095619219" style="zoom:40%;"><img src="/posts/8d265993/image-20210615095631980.png" alt="image-20210615095631980" style="zoom:40%;"><h2 id="第七章-实现（20分左右）"><a href="#第七章-实现（20分左右）" class="headerlink" title="第七章 实现（20分左右）"></a>第七章 实现（20分左右）</h2><h3 id="边界值分析：⚠️"><a href="#边界值分析：⚠️" class="headerlink" title="边界值分析：⚠️"></a>边界值分析：⚠️</h3><p>考点：给一个取值范围，要会怎么定义边界</p><img src="/posts/8d265993/image-20210625095237123.png" alt="image-20210625095237123" style="zoom:33%;"><img src="/posts/8d265993/image-20210625095707977.png" alt="image-20210625095707977" style="zoom:50%;"><h3 id="实现的概念："><a href="#实现的概念：" class="headerlink" title="实现的概念："></a>实现的概念：</h3><p>通常把编码和测试统称为实现。<br>所谓编码就是把软件设计结果翻译成用某种程序设计语言书写的程序。<br>软件测试在软件生命周期中横跨两个阶段。<br>通常在编写出每个模块之后就对它做单元测试。<br>在这个阶段结束之后，对软件系统还应该进行各种综合测试，通常由专门的测试人员承担这项工作。<br>通过测试发现错误之后还必须诊断并改正错误，这就是调试的目的。调试是测试阶段最困难的工作。<br>在对测试结果进行收集和评价的时候，使用故障率数据，估计软件将来出现故障的情况并预测软件的可靠性。  </p><h3 id="黑盒测试和白盒测试："><a href="#黑盒测试和白盒测试：" class="headerlink" title="黑盒测试和白盒测试："></a>黑盒测试和白盒测试：</h3><img src="/posts/8d265993/image-20210615100114726.png" alt="image-20210615100114726" style="zoom:50%;"><h3 id="测试步骤：⚠️（简答题）"><a href="#测试步骤：⚠️（简答题）" class="headerlink" title="测试步骤：⚠️（简答题）"></a><strong>测试步骤</strong>：⚠️（简答题）</h3><p>大型软件系统的测试过程基本上由模块测试、子系统测试、系统测试、验收测试和平行运行等五个步骤组成。</p><h3 id="测试总结：⚠️"><a href="#测试总结：⚠️" class="headerlink" title="测试总结：⚠️"></a>测试总结：⚠️</h3><p>每个阶段对应的关系，对应是黑盒还是白盒？</p><img src="/posts/8d265993/image-20210615100451659.png" alt="image-20210615100451659" style="zoom:50%;"><h4 id="白盒测试技术："><a href="#白盒测试技术：" class="headerlink" title="白盒测试技术："></a>白盒测试技术：</h4><p>设计测试方案是测试阶段的关键技术问题。所谓测试方案包括具体的测试目的（例如，预定要测试的具体功能），应该输入的测试数据和预期的结果。通常又把测试数据和预期的输出结果称为测试用例。</p><img src="/posts/8d265993/image-20210615100659390.png" alt="image-20210615100659390" style="zoom:50%;"><img src="/posts/8d265993/image-20210615100718163.png" alt="image-20210615100718163" style="zoom:50%;"><h3 id="例：求平均值过程"><a href="#例：求平均值过程" class="headerlink" title="例：求平均值过程"></a><strong>例：求平均值过程</strong></h3><img src="/posts/8d265993/image-20210615100906555.png" alt="image-20210615100906555" style="zoom:50%;"><h4 id="1-根据过程设计结果画出相应的流图。"><a href="#1-根据过程设计结果画出相应的流图。" class="headerlink" title="(1) 根据过程设计结果画出相应的流图。"></a><strong>(1)</strong> <strong>根据过程设计结果画出相应的流图。</strong></h4><img src="/posts/8d265993/image-20210615100934269.png" alt="image-20210615100934269" style="zoom:50%;"><h4 id="2-计算流图的环形复杂度。"><a href="#2-计算流图的环形复杂度。" class="headerlink" title="(2) 计算流图的环形复杂度。"></a><strong>(2)</strong> <strong>计算流图的环形复杂度。</strong></h4><p>   <strong>V(G)=6</strong></p><img src="/posts/8d265993/image-20210615101001669.png" alt="image-20210615101001669" style="zoom:50%;"><h4 id="3-确定线性独立路径的基本集合。"><a href="#3-确定线性独立路径的基本集合。" class="headerlink" title="(3) 确定线性独立路径的基本集合。"></a><strong>(3)</strong> <strong>确定线性独立路径的基本集合。</strong></h4><p><strong>所谓独立路径是指至少引入程序的一个新处理语句集合或一个新条件的路径。</strong></p><p><strong>用流图术语描述，独立路径至少包含一条在定义该路径之前不曾用过的边。</strong></p><p>路径1：1－2－10－11－13<br>路径2：1－2－10－12－13<br>路径3：1－2－3－10－11(12)－13<br>路径4：1－2－3－4－5－8－9－2－<br>              10－11(12)－13<br>路径5：1－2－3－4－5－6－8－9－<br>              2－10－11(12)－13<br>路径6：1－2－3－4－5－6－7－8－<br>              9－2－10－11(12)－13  </p><img src="/posts/8d265993/image-20210615101122511.png" alt="image-20210615101122511" style="zoom:50%;"><h4 id="4-设计可强制执行每条独立路径的测试用例。"><a href="#4-设计可强制执行每条独立路径的测试用例。" class="headerlink" title="(4) 设计可强制执行每条独立路径的测试用例。"></a><strong>(4)</strong> <strong>设计可强制执行每条独立路径的测试用例。</strong></h4><p><strong>应该选取测试数据使得在测试每条路径时都适当地设置好了各个判定结点的条件。</strong></p><p><strong>在测试过程中，执行每个测试用例并把实际输出结果与预期结果相比较。</strong></p><p><strong>一旦执行完所有测试用例，就可以确保程序中所有语句都至少被执行了一次，而且每个条件都分别取过true值和false值。</strong></p><p><strong>某些独立路径不能以独立的方式测试，这些路径必须作为另一个路径的一部分来测试。</strong></p><h3 id="黑盒测试着重测试软件功能，错误类型为："><a href="#黑盒测试着重测试软件功能，错误类型为：" class="headerlink" title="黑盒测试着重测试软件功能，错误类型为："></a>黑盒测试着重测试软件功能，错误类型为：</h3><p>功能不正确或遗漏了功能；<br>界面错误；<br>数据结构错误或外部数据库访问错误；<br>性能错误；<br>初始化和终止错误。<br>测试标准：<br>测试用例尽可能少；<br>一个测试用例能指出一类错误。 </p><h2 id="第八章-维护"><a href="#第八章-维护" class="headerlink" title="第八章 维护"></a>第八章 维护</h2><h3 id="软件维护定义："><a href="#软件维护定义：" class="headerlink" title="软件维护定义："></a>软件维护定义：</h3><p>所谓软件维护就是在软件已经交付使用之后，为了改正错误或满足新的需要而修改软件的过程。<br>可分为4项活动：<br>改正性维护  适应性维护  完善性维护  预防性维护 </p><img src="/posts/8d265993/image-20210615102057737.png" alt="image-20210615102057737" style="zoom:33%;"><h3 id="维护类型：⚠️"><a href="#维护类型：⚠️" class="headerlink" title="维护类型：⚠️"></a>维护类型：⚠️</h3><h4 id="考点：给例子能区分对应是什么维护类型。"><a href="#考点：给例子能区分对应是什么维护类型。" class="headerlink" title="考点：给例子能区分对应是什么维护类型。"></a>考点：给例子能区分对应是什么维护类型。</h4><p><strong>改正性维护</strong>是要改正在特定的使用条件下暴露出来的一些潜在程序错误或设计缺陷；<br><strong>适应性维护</strong>是要在软件使用过程中数据环境发生变化或处理环境发生变化时修改软件以适应这种变化；<br><strong>完善性维护</strong>是在用户和数据处理人员使用软件过程中提出改进现有功能，增加新的功能，以及改善总体性能的要求后，修改软件以把这些要求纳入到软件之中；<br><strong>预防性维护</strong>是为了提高软件的可维护性、可靠性等，事先采用先进的软件工程方法对需要维护的软件或软件中的某一部分（重新）进行设计、编制和测试，为以后进一步改进软件打下良好基础。</p><h2 id="第九章-面对对象方法学"><a href="#第九章-面对对象方法学" class="headerlink" title="第九章 面对对象方法学"></a>第九章 面对对象方法学</h2><h3 id="什么是面向对象的开发方法-："><a href="#什么是面向对象的开发方法-：" class="headerlink" title="什么是面向对象的开发方法 ："></a>什么是面向对象的开发方法 ：</h3><p> OOSD(Object-Oriented Software Development)法是一种把面向对象的思想应用于软件开发过程，指导开发活动的系统方法。<br>   面向对象的方法是一种运用对象、类、继承、封装、聚合、消息传送、多态性等概念来构造系统的软件开发方法。</p><h3 id="面向对象建模："><a href="#面向对象建模：" class="headerlink" title="面向对象建模："></a>面向对象建模：</h3><p>根据Coad和Yourdon的定义，按照以下4个概念设计和实现的系统，称为是面向对象的。<br>面向对象=对象 (object)<br>      +类  (classification)<br>      +继承(inheritance)<br>      +通信 (communication with messages)</p><h3 id="面向对象开发软件，需要建立3种形式的模型：⚠️"><a href="#面向对象开发软件，需要建立3种形式的模型：⚠️" class="headerlink" title="面向对象开发软件，需要建立3种形式的模型：⚠️"></a>面向对象开发软件，需要建立3种形式的模型：⚠️</h3><p>对象模型。描述系统数据结构—数据结构。<br>动态模型。描述系统控制结构—执行操作。<br>功能模型。描述系统功能—数值变化。<br>这三种模型从不同侧面描述了对系统的需求。在面向对象的分析(OOA)阶段，这三种模型是必不可少的。</p><h3 id="对象模型（P216）：（怎么画？有什么功能？分别做什么？）"><a href="#对象模型（P216）：（怎么画？有什么功能？分别做什么？）" class="headerlink" title="对象模型（P216）：（怎么画？有什么功能？分别做什么？）"></a>对象模型（P216）：（怎么画？有什么功能？分别做什么？）</h3><p>对象模型描述了系统的静态结构。OO方法强调围绕对象而不是功能来构造系统。</p><p>使用统一建模语言UML （Unified Modeling Language）提供的类图来建立对象模型。</p><p>UML用例图是建立功能模型的有力工具。</p><p>9.4.1 类图的基本符号</p><p>9.4.2 表示关系的符号</p><h3 id="动态模型-P-223"><a href="#动态模型-P-223" class="headerlink" title="动态模型(P.223-)"></a>动态模型(P.223-)</h3><p>动态模型表示瞬时的、行为化的系统的“控制”性质，它规定了对象模型中的对象的合法变化序列。动态模型描述系统控制结构。通常用状态图表示。</p><h3 id="功能模型-P-224-：（用例建模）"><a href="#功能模型-P-224-：（用例建模）" class="headerlink" title="功能模型(P.224-)：（用例建模）"></a>功能模型(P.224-)：（用例建模）</h3><p>功能模型表示变化的系统的“功能”性质，它指明了系统应该“做什么”，通常，功能模型由一组数据流图组成。</p><p>UML提供的用例图也是进行需求分析和建立功能模型的强有力工具。</p><img src="/posts/8d265993/image-20210615103005605.png" alt="image-20210615103005605" style="zoom:50%;"><h2 id="第十三章-项目管理"><a href="#第十三章-项目管理" class="headerlink" title="第十三章 项目管理"></a>第十三章 项目管理</h2><h3 id="估算软件规模："><a href="#估算软件规模：" class="headerlink" title="估算软件规模："></a>估算软件规模：</h3><h4 id="代码行技术"><a href="#代码行技术" class="headerlink" title="代码行技术"></a>代码行技术</h4><p>代码行技术是比较简单的定量估算软件规模的方法。</p><p>依据以往开发类似产品的经验和历史数据，估计实现一个功能所需要的源程序行数。</p><p>当有以往开发类似产品的历史数据可供参考时，估计出的数值还是比较准确的。把实现每个功能所需要的源程序行数累加起来，就可得到实现整个软件所需要的源程序行数。</p><h4 id="功能点技术"><a href="#功能点技术" class="headerlink" title="功能点技术"></a>功能点技术</h4><p>功能点技术依据对软件信息域特性和软件复杂性的评估结果，估算软件规模。</p><p>n这种方法用功能点(FP)为单位度量软件规模。 </p><h3 id="工作量估算（p308-309）"><a href="#工作量估算（p308-309）" class="headerlink" title="工作量估算（p308-309）"></a>工作量估算（p308-309）</h3><p>三个模型是干什么的？</p><h3 id="进度计划的工具："><a href="#进度计划的工具：" class="headerlink" title="进度计划的工具："></a>进度计划的工具：</h3><h4 id="Gantt-甘特-图"><a href="#Gantt-甘特-图" class="headerlink" title="Gantt(甘特)图"></a>Gantt(甘特)图</h4><p>Gantt(甘特)图是历史悠久、应用广泛的制定进度计划的工具。</p><p>例子：旧木板房刷漆工程(15名工人，工具各5把)<br>假设有一座陈旧的矩形木板房需要重新油漆。这项工作必须分3步完成:首先刮掉旧漆，然后刷上新漆，最后清除溅在窗户上的油漆。假设一共分配了15名工人去完成这项工作，然而工具却很有限:只有5把刮旧漆用的刮板，5把刷漆用的刷子，5把清除溅在窗户上的油漆用的小刮刀。怎样安排才能使工作进行得更有效呢?</p><img src="/posts/8d265993/image-20210615103705255.png" alt="image-20210615103705255" style="zoom:33%;"><img src="/posts/8d265993/image-20210615103714352.png" alt="image-20210615103714352" style="zoom:33%;"><h4 id="Gantt图的主要优点："><a href="#Gantt图的主要优点：" class="headerlink" title="Gantt图的主要优点："></a>Gantt图的主要优点：</h4><p>Gantt图能很形象地描绘任务分解情况，以及每个子任务(作业)的开始和结束时间。<br>具有直观简明和容易掌握、容易绘制的优点。</p><h4 id="Gantt图的3个主要缺点："><a href="#Gantt图的3个主要缺点：" class="headerlink" title="Gantt图的3个主要缺点："></a>Gantt图的3个主要缺点：</h4><p>不能显式地描绘各项作业彼此间的依赖关系；<br>进度计划的关键部分不明确，难于判定哪些部分应当是主攻和主控的对象；<br>计划中有潜力的部分及潜力的大小不明确，往往造成潜力的浪费。 </p><h3 id="工程网络：（不用细看）"><a href="#工程网络：（不用细看）" class="headerlink" title="工程网络：（不用细看）"></a><strong>工程网络</strong>：（不用细看）</h3><p>工程网络是制定进度计划时另一种常用的图形工具，它同样能描绘任务分解情况以及每项作业的开始时间和结束时间。<br>它能显式地描绘各个作业彼此间的依赖关系。<br>工程网络是系统分析和系统设计的强有力的工具。</p><img src="/posts/8d265993/image-20210615103830645.png" alt="image-20210615103830645" style="zoom:33%;"><img src="/posts/8d265993/image-20210615103844772.png" alt="image-20210615103844772" style="zoom:50%;"><h4 id="工程网络必要的信息："><a href="#工程网络必要的信息：" class="headerlink" title="工程网络必要的信息："></a>工程网络必要的信息：</h4><p>每个作业估计需要使用的时间：箭头长度和它代表的作业持续时间没有关系，箭头仅表示依赖关系，它上方的数字才表示作业的持续时间。<br>最早时刻EET：该事件可以发生的最早时间。<br>最迟时刻LET：在不影响竣工时间的前提下，该事件最晚可以发生的时刻。<br>机动时间：实际开始时间可以比预定时间晚一些，或者实际持续时间可以比预定的持续时间长一些，而并不影响工程的结束时间。 </p><img src="/posts/8d265993/image-20210615103916037.png" alt="image-20210615103916037" style="zoom:33%;"><h4 id="最早时刻的计算："><a href="#最早时刻的计算：" class="headerlink" title="最早时刻的计算："></a>最早时刻的计算：</h4><p>事件的最早时刻是该事件可以发生的最早时间。<br>通常工程网络中第一个事件的最早时刻定义为零，其他事件的最早时刻在工程网络上从左至右按事件发生顺序计算。<br>计算最早时刻EET使用下述3条简单规则：<br>考虑进入该事件的所有作业；<br>对于每个作业都计算它的持续时间与起始事件的EET之和；<br>选取上述和数中的最大值作为该事件的最早时刻EET。 </p><h4 id="最迟时刻的计算："><a href="#最迟时刻的计算：" class="headerlink" title="最迟时刻的计算："></a>最迟时刻的计算：</h4><p>事件的最迟时刻是在不影响工程竣工时间的前提下，该事件最晚可以发生的时刻。<br>按惯例，最后一个事件(工程结束)的最迟时刻就是它的最早时刻。其他事件的最迟时刻在工程网络上从右至左按逆作业流的方向计算。<br>计算最迟时刻LET使用下述3条规则：<br>考虑离开该事件的所有作业；<br>从每个作业的结束事件的最迟时刻中减去该作业的持续时间；<br>选取上述差数中的最小值作为该事件的最迟时刻LET。 </p><img src="/posts/8d265993/image-20210615104037854.png" alt="image-20210615104037854" style="zoom:33%;"><h4 id="旧木板房刷漆工程改进的Gantt图之一："><a href="#旧木板房刷漆工程改进的Gantt图之一：" class="headerlink" title="旧木板房刷漆工程改进的Gantt图之一："></a>旧木板房刷漆工程改进的Gantt图之一：</h4><img src="/posts/8d265993/image-20210615104058582.png" alt="image-20210615104058582" style="zoom:33%;"><img src="/posts/8d265993/image-20210615104110252.png" alt="image-20210615104110252" style="zoom:33%;"><h4 id="例题：假设一项工程分解成9个子任务，根据下表给出的信息，画出工程网络图，计算每个事件的最早时刻和最迟时刻，找出关键路径。"><a href="#例题：假设一项工程分解成9个子任务，根据下表给出的信息，画出工程网络图，计算每个事件的最早时刻和最迟时刻，找出关键路径。" class="headerlink" title="例题：假设一项工程分解成9个子任务，根据下表给出的信息，画出工程网络图，计算每个事件的最早时刻和最迟时刻，找出关键路径。"></a>例题：假设一项工程分解成9个子任务，根据下表给出的信息，画出工程网络图，计算每个事件的最早时刻和最迟时刻，找出关键路径。</h4><img src="/posts/8d265993/image-20210615104302188.png" alt="image-20210615104302188" style="zoom:33%;"><img src="/posts/8d265993/image-20210615104327822.png" alt="image-20210615104327822" style="zoom:33%;"><h2 id="大题总结：⚠️"><a href="#大题总结：⚠️" class="headerlink" title="大题总结：⚠️"></a>大题总结：⚠️</h2><h3 id="第一大题："><a href="#第一大题：" class="headerlink" title="第一大题："></a>第一大题：</h3><h4 id="考点：给一段程序画出程序流程图和对应的N-S（盒图）、PAD图。"><a href="#考点：给一段程序画出程序流程图和对应的N-S（盒图）、PAD图。" class="headerlink" title="考点：给一段程序画出程序流程图和对应的N-S（盒图）、PAD图。"></a>考点：给一段程序画出程序流程图和对应的N-S（盒图）、PAD图。</h4><img src="/posts/8d265993/image-20210625101237486.png" alt="image-20210625101237486" style="zoom:50%;"><img src="/posts/8d265993/image-20210625101302385.png" alt="image-20210625101302385" style="zoom:50%;"><h3 id="第二大题："><a href="#第二大题：" class="headerlink" title="第二大题："></a>第二大题：</h3><h4 id="考点：给一张图，计算环形复杂度，写出独立路径"><a href="#考点：给一张图，计算环形复杂度，写出独立路径" class="headerlink" title="考点：给一张图，计算环形复杂度，写出独立路径"></a>考点：给一张图，计算环形复杂度，写出独立路径</h4><img src="/posts/8d265993/image-20210625101222381.png" alt="image-20210625101222381" style="zoom:50%;"><h3 id="第三大题："><a href="#第三大题：" class="headerlink" title="第三大题："></a>第三大题：</h3><h4 id="考点：给一段文字，用例图画"><a href="#考点：给一段文字，用例图画" class="headerlink" title="考点：给一段文字，用例图画"></a>考点：给一段文字，用例图画</h4><img src="/posts/8d265993/image-20210625101450647.png" alt="image-20210625101450647" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于安卓校园快递代取APP部分截图及功能介绍</title>
      <link href="posts/c27ece64/"/>
      <url>posts/c27ece64/</url>
      
        <content type="html"><![CDATA[<h1 id="基于安卓校园快递代取APP部分截图及功能介绍"><a href="#基于安卓校园快递代取APP部分截图及功能介绍" class="headerlink" title="基于安卓校园快递代取APP部分截图及功能介绍"></a>基于安卓校园快递代取APP部分截图及功能介绍</h1><h3 id="首次下载安装使用该APP时的功能介绍（引导界面）"><a href="#首次下载安装使用该APP时的功能介绍（引导界面）" class="headerlink" title="首次下载安装使用该APP时的功能介绍（引导界面）"></a>首次下载安装使用该APP时的功能介绍（引导界面）</h3><img src="/posts/c27ece64/image-20210610183526583.png" alt="image-20210610183526583" style="zoom:50%;"><img src="/posts/c27ece64/image-20210610183534356.png" alt="image-20210610183534356" style="zoom:50%;"><img src="/posts/c27ece64/image-20210610183554692.png" alt="image-20210610183554692" style="zoom:50%;"><img src="/posts/c27ece64/image-20210610183604521.png" alt="image-20210610183604521" style="zoom:50%;"><h3 id="每次打开APP时的欢迎动画（可替换为广告）"><a href="#每次打开APP时的欢迎动画（可替换为广告）" class="headerlink" title="每次打开APP时的欢迎动画（可替换为广告）"></a>每次打开APP时的欢迎动画（可替换为广告）</h3><img src="/posts/c27ece64/image-20210610175120878.png" alt="image-20210610175120878" style="zoom:50%;"><h3 id="登录界面"><a href="#登录界面" class="headerlink" title="登录界面"></a>登录界面</h3><ol><li>登录界面</li><li>左上角X号可以点击，点击即结束此APP进程</li><li>编写了动画使得输入手机号和密码的时候弹出的键盘不会遮挡输入（输入的时候主要部分会适度上移动）</li></ol><img src="/posts/c27ece64/image-20210610175058931.png" alt="image-20210610175058931" style="zoom:50%;"><h3 id="注册界面"><a href="#注册界面" class="headerlink" title="注册界面"></a>注册界面</h3><ol><li>点击登录界面中的“注册新用户”即可跳转到该界面</li><li>手机号输入框限制为number</li><li>密码和确认密码限制为必须一致（否则有Toast提示），且密码输入框通过字符过滤器限制为不能输入特殊字符（有提示），不能输入空格回车</li><li>点击性别会弹出男/女供用户选择</li><li>学号限制为数字</li><li>学校默认为井冈山大学（该APP本意即为先做本学校使用的APP） </li><li>所有输入框不能为空，否则点击OK会Toast提示</li></ol><img src="/posts/c27ece64/image-20210610175408800.png" alt="image-20210610175408800" style="zoom:50%;"><h3 id="联系客服-关于我们"><a href="#联系客服-关于我们" class="headerlink" title="联系客服/关于我们"></a>联系客服/关于我们</h3><p>点击登录界面中的关于我们或者联系客服将会跳转到该界面</p><img src="/posts/c27ece64/image-20210610175533374.png" alt="image-20210610175533374" style="zoom:50%;"><h3 id="APP主页"><a href="#APP主页" class="headerlink" title="APP主页"></a>APP主页</h3><ol><li>可以无限下滑的RecycleView（只要数据库中任务足够）</li><li>显示的是当前所有未被接受的任务的缩略信息</li><li>右边的飞机图代表代发快递，箱子图代表代收快递</li><li>当下滑查看更多任务时，上部分的代发任务|代收任务会向上消失（增大显示界面效果）</li><li>点击“+”按钮，弹出两个按钮，一个发布代发任务，一个是发布代收任务</li><li>点击左下角主页，会刷新当前界面，更新任务列表</li></ol><img src="/posts/c27ece64/image-20210610175750329.png" alt="image-20210610175750329" style="zoom:50%;"><img src="/posts/c27ece64/image-20210610180015951.png" alt="image-20210610180015951" style="zoom:50%;"><h3 id><a href="#" class="headerlink" title></a></h3><ol><li>点击主页中的任何一个任务缩略布局即跳转到该任务的详细信息界面</li><li>点击发布者手机号右边的“手机图片”会动态申请权限，若用户同意该权限则调用系统拨号发布者（并不呼叫，只是拨号盘会自动输入好发布者的手机号）</li><li>点击接受任务，该任务会被标记为已被接受，个人中心界面也会实时更新接受任务数数据</li></ol><img src="/posts/c27ece64/image-20210610180044568.png" alt="image-20210610180044568" style="zoom:50%;"><img src="/posts/c27ece64/image-20210610180103577.png" alt="image-20210610180103577" style="zoom:50%;"><h3 id="发布任务（以发布代发快递任务为例）"><a href="#发布任务（以发布代发快递任务为例）" class="headerlink" title="发布任务（以发布代发快递任务为例）"></a>发布任务（以发布代发快递任务为例）</h3><ol><li>点击主页中“+”按钮中的代发任务，跳转到该界面（截图为已经输入好的，初始界面全部由与用户填写）</li><li>物件类型会弹出选择框供用户选择，亦可自己编辑</li><li>点击交易时间弹出时间选择器，用户不可自主输入交易时间</li></ol><img src="/posts/c27ece64/image-20210610181002099.png" alt="image-20210610181002099" style="zoom:50%;"><img src="/posts/c27ece64/image-20210610181010444.png" alt="image-20210610181010444" style="zoom:50%;"><ol start="4"><li>点击next会跳转到下面的这个界面。</li></ol><img src="/posts/c27ece64/image-20210610181131287.png" alt="image-20210610181131287" style="zoom:50%;"><ol start="4"><li>寄件人姓名手机号地址默认为当前用户信息</li><li>输入所有信息之后即可点击OK发布该代发任务</li><li>发布后个人中心会实时更新发布任务数数据!</li></ol><h3 id="本用户所有的发布任务"><a href="#本用户所有的发布任务" class="headerlink" title="本用户所有的发布任务"></a>本用户所有的发布任务</h3><ol><li>发布代发任务或者代收任务后，会跳转到该界面显示当前用户所有的发任务</li><li>点击个人中心的“发布的任务”也会跳转到该界面</li><li>每个item可以点击，点击后底部会显示是否已被接受，如果未被接受，还会显示一个取消该任务的按钮</li></ol><img src="/posts/c27ece64/image-20210610183232087.png" alt="image-20210610183232087" style="zoom:50%;"><img src="/posts/c27ece64/image-20210610183240824.png" alt="image-20210610183240824" style="zoom:50%;"><h3 id="当前用户所有的接受任务"><a href="#当前用户所有的接受任务" class="headerlink" title="当前用户所有的接受任务"></a>当前用户所有的接受任务</h3><ol><li>点击个人中心中的“接受的任务”，会跳转到该界面显示该用户所有接受的任务信息。</li><li>点击每个item会显示该任务的详细信息。</li></ol><img src="/posts/c27ece64/image-20210610183250496.png" alt="image-20210610183250496" style="zoom:50%;"><img src="/posts/c27ece64/image-20210610183250496.png" alt="image-20210610183250496" style="zoom:50%;"><h3 id="快递界面"><a href="#快递界面" class="headerlink" title="快递界面"></a>快递界面</h3><ol><li>中间如果查询的快递有信息更新的话，会在这个界面显示出来</li></ol><img src="/posts/c27ece64/image-20210610182102923.png" alt="image-20210610182102923" style="zoom:50%;"><h3 id="查询快递"><a href="#查询快递" class="headerlink" title="查询快递"></a>查询快递</h3><ol><li>可以输入运单号也可以扫一扫自动填写运单号</li><li>输入运单号的过程中，底部会实时查询运单号的快递公司，如果没找到，用户还可以选择快递公司</li><li>点击快递公司如果查询到，则会显示该快递的运送信息（未截图）</li><li>第三张图为所有的快递公司，右部索引可以点击快速定位</li><li>查找不到快递信息则会显示查找不到该快递信息界面</li></ol><img src="/posts/c27ece64/image-20210610182249112.png" alt="image-20210610182249112" style="zoom:50%;"><h3 id="历史记录"><a href="#历史记录" class="headerlink" title="历史记录"></a>历史记录</h3><p>所有查询过的信息都会显示在该界面中</p><img src="/posts/c27ece64/image-20210610182521103.png" alt="image-20210610182521103" style="zoom:50%;"><h3 id="扫一扫"><a href="#扫一扫" class="headerlink" title="扫一扫"></a>扫一扫</h3><ol><li>扫一扫也可以扫相册里的图，左下角第一按钮为灯光。</li></ol><img src="/posts/c27ece64/image-20210610182448455.png" alt="image-20210610182448455" style="zoom:50%;"><h3 id="编辑资料"><a href="#编辑资料" class="headerlink" title="编辑资料"></a>编辑资料</h3><ol><li>点击个人中心的编辑资料会跳转到修改信息界面</li><li>前面的信息可以修改，后面的信息不能修改</li><li>点击修改头像会显示第一站图</li><li>选择拍照，则拍照然后截取，并显示到当前头像框中</li><li>选择相册，则选取图片然后截取，并显示到当前头像框中</li><li>点击保存则把所有信息更改到数据库中并更新个人中心界面。</li></ol><img src="/posts/c27ece64/image-20210610182758779.png" alt="image-20210610182758779" style="zoom:50%;"><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li>点击个人中心里面的“退出登录”会登出当前账户，回到登录界面</li><li>两秒内连续按下返回键，会退出当前APP，结束其进程</li><li>每个数据库操作出现错误时，都会有相关Toast提示，比如手机号已被注册，发布失败等等。</li><li>快递查询的接口还有bug，待修复</li></ol><h3 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h3><p>软件工程第六小组共同完成</p><p>谢麒麟 孙昀 吴直渊 王国宝 罗文涛</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hadoop中提交python作业</title>
      <link href="posts/ba70908d/"/>
      <url>posts/ba70908d/</url>
      
        <content type="html"><![CDATA[<p>title: hadoop中提交python作业<br>author: fejxc<br>categories: hadoop<br>tags:</p><ul><li>大数据<br>date: 2021-5-20 09:51:03</li></ul><h2 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h2><pre class="line-numbers language-java"><code class="language-java">py4j<span class="token punctuation">.</span>protocol<span class="token punctuation">.</span>Py4JJavaError<span class="token operator">:</span> An error occurred <span class="token keyword">while</span> calling o20<span class="token punctuation">.</span>partitions<span class="token punctuation">.</span><span class="token operator">:</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token operator">:</span> Incomplete HDFS URI<span class="token punctuation">,</span> no host<span class="token operator">:</span> hdfs<span class="token operator">:</span><span class="token operator">/</span>ml<span class="token operator">-</span>100k<span class="token operator">/</span>u<span class="token punctuation">.</span>data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="解决1"><a href="#解决1" class="headerlink" title="解决1:"></a>解决1:</h2><img src="/posts/ba70908d/image-20210520094145616.png" alt="namenode" style="zoom:50%;"><pre class="line-numbers language-python"><code class="language-python">lines <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">"hdfs://localhost:8020/user/sunyun/ml-100k/u.data"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="问题2"><a href="#问题2" class="headerlink" title="问题2:"></a>问题2:</h2><p>spark环境配置中的python版本与我手动升级后的python不一致</p><h2 id="解决2"><a href="#解决2" class="headerlink" title="解决2:"></a>解决2:</h2><p>修改<code>/usr/local/Cellar/apache-spark/3.0.1/libexec/bin/load-spark-env.sh</code>文件</p><img src="/posts/ba70908d/image-20210520094708219.png" alt="image-20210520094708219" style="zoom:50%;"><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">[</span> -z <span class="token string">"<span class="token variable">${SPARK_HOME}</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token function">source</span> <span class="token string">"$(dirname "</span><span class="token variable">$0</span><span class="token string">")"</span>/find-spark-home<span class="token keyword">fi</span>SPARK_ENV_SH<span class="token operator">=</span><span class="token string">"spark-env.sh"</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -z <span class="token string">"<span class="token variable">$SPARK_ENV_LOADED</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token function">export</span> SPARK_ENV_LOADED<span class="token operator">=</span>1  <span class="token function">export</span> SPARK_CONF_DIR<span class="token operator">=</span><span class="token string">"${SPARK_CONF_DIR:-"</span><span class="token variable">${SPARK_HOME}</span><span class="token string">"/conf}"</span>  <span class="token function">export</span> PYSPARK_PYTHON<span class="token operator">=</span>/usr/bin/python3  SPARK_ENV_SH<span class="token operator">=</span><span class="token string">"<span class="token variable">${SPARK_CONF_DIR}</span>/<span class="token variable">${SPARK_ENV_SH}</span>"</span>  <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -f <span class="token string">"<span class="token variable">${SPARK_ENV_SH}</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token comment" spellcheck="true"># Promote all variable declarations to environment (exported) variables</span>    <span class="token keyword">set</span> -a    <span class="token keyword">.</span> <span class="token variable">${SPARK_ENV_SH}</span>    <span class="token keyword">set</span> +a  <span class="token keyword">fi</span><span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>指定pyhton3版本<code>  export PYSPARK_PYTHON=/usr/bin/python3</code></p><p>参考来自<a href="https://blog.csdn.net/weixin_43114954/article/details/113094958" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43114954/article/details/113094958</a></p><h2 id="问题3"><a href="#问题3" class="headerlink" title="问题3:"></a>问题3:</h2><p>UnicodeDecodeError: ‘utf-8’ codec can’t decode byte 0xe9 in position 2892: invalid continuation byte</p><h2 id="解决3"><a href="#解决3" class="headerlink" title="解决3:"></a>解决3:</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> codecsf1<span class="token operator">=</span>codecs<span class="token punctuation">.</span>open<span class="token punctuation">(</span><span class="token string">"fileName"</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding <span class="token operator">=</span> <span class="token string">"ISO-8859-1"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>参考来自<a href="https://blog.csdn.net/ningzhimeng/article/details/78488822" target="_blank" rel="noopener">https://blog.csdn.net/ningzhimeng/article/details/78488822</a></p><h2 id="python源码："><a href="#python源码：" class="headerlink" title="python源码："></a>python源码：</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> pyspark <span class="token keyword">import</span> SparkConf<span class="token punctuation">,</span> SparkContext<span class="token keyword">import</span> codecs<span class="token keyword">def</span> <span class="token function">loadMovieNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    movieNames <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"ml-100k/u.item"</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding <span class="token operator">=</span> <span class="token string">"ISO-8859-1"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>            fields <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span>            movieNames<span class="token punctuation">[</span>int<span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> fields<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> movieNames<span class="token keyword">def</span> <span class="token function">parseInput</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">:</span>    fields <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>int<span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>float<span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    conf <span class="token operator">=</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token string">"WorstMovies"</span><span class="token punctuation">)</span>    sc <span class="token operator">=</span> SparkContext<span class="token punctuation">(</span>conf <span class="token operator">=</span> conf<span class="token punctuation">)</span>    movieNames <span class="token operator">=</span> loadMovieNames<span class="token punctuation">(</span><span class="token punctuation">)</span>    lines <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">"hdfs://localhost:8020/user/sunyun/ml-100k/u.data"</span><span class="token punctuation">)</span>    movieRatings <span class="token operator">=</span> lines<span class="token punctuation">.</span>map<span class="token punctuation">(</span>parseInput<span class="token punctuation">)</span>    ratingTotalsAndCount <span class="token operator">=</span> movieRatings<span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span><span class="token keyword">lambda</span> movie1<span class="token punctuation">,</span> movie2<span class="token punctuation">:</span> <span class="token punctuation">(</span> movie1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> movie2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> movie1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> movie2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>    averageRatings <span class="token operator">=</span> ratingTotalsAndCount<span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span><span class="token keyword">lambda</span> totalAndCount <span class="token punctuation">:</span> totalAndCount<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">/</span> totalAndCount<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    sortedMovies <span class="token operator">=</span> averageRatings<span class="token punctuation">.</span>sortBy<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    results <span class="token operator">=</span> sortedMovies<span class="token punctuation">.</span>take<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> result <span class="token keyword">in</span> results<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>movieNames<span class="token punctuation">[</span>result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h2><pre class="line-numbers language-bash"><code class="language-bash">sunyun@MACBOOKPRO-5566 Downloads % spark-submit RatedMovieSpark.pyWARNING: An illegal reflective access operation has occurredWARNING: Illegal reflective access by org.apache.spark.unsafe.Platform <span class="token punctuation">(</span>file:/usr/local/Cellar/apache-spark/3.0.1/libexec/jars/spark-unsafe_2.12-3.0.1.jar<span class="token punctuation">)</span> to constructor java.nio.DirectByteBuffer<span class="token punctuation">(</span>long,int<span class="token punctuation">)</span>WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.PlatformWARNING: Use --illegal-access<span class="token operator">=</span>warn to <span class="token function">enable</span> warnings of further illegal reflective access operationsWARNING: All illegal access operations will be denied <span class="token keyword">in</span> a future release21/05/20 09:54:20 WARN NativeCodeLoader: Unable to load native-hadoop library <span class="token keyword">for</span> your platform<span class="token punctuation">..</span>. using builtin-java classes where applicableUsing Spark<span class="token string">'s default log4j profile: org/apache/spark/log4j-defaults.properties21/05/20 09:54:20 INFO SparkContext: Running Spark version 3.0.121/05/20 09:54:21 INFO ResourceUtils: ==============================================================21/05/20 09:54:21 INFO ResourceUtils: Resources for spark.driver:21/05/20 09:54:21 INFO ResourceUtils: ==============================================================21/05/20 09:54:21 INFO SparkContext: Submitted application: WorstMovies21/05/20 09:54:21 INFO SecurityManager: Changing view acls to: sunyun21/05/20 09:54:21 INFO SecurityManager: Changing modify acls to: sunyun21/05/20 09:54:21 INFO SecurityManager: Changing view acls groups to: 21/05/20 09:54:21 INFO SecurityManager: Changing modify acls groups to: 21/05/20 09:54:21 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(sunyun); groups with view permissions: Set(); users  with modify permissions: Set(sunyun); groups with modify permissions: Set()21/05/20 09:54:21 INFO Utils: Successfully started service '</span>sparkDriver<span class="token string">' on port 64230.21/05/20 09:54:21 INFO SparkEnv: Registering MapOutputTracker21/05/20 09:54:21 INFO SparkEnv: Registering BlockManagerMaster21/05/20 09:54:21 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information21/05/20 09:54:21 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up21/05/20 09:54:21 INFO SparkEnv: Registering BlockManagerMasterHeartbeat21/05/20 09:54:21 INFO DiskBlockManager: Created local directory at /private/var/folders/4k/dwx5pnzx3k596x3ct39tqskw0000gn/T/blockmgr-1eb573bd-b6c4-40b6-978d-c161bfc56bcd21/05/20 09:54:21 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB21/05/20 09:54:21 INFO SparkEnv: Registering OutputCommitCoordinator21/05/20 09:54:21 INFO Utils: Successfully started service '</span>SparkUI<span class="token string">' on port 4040.21/05/20 09:54:21 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://macbookpro-5566.lan:404021/05/20 09:54:22 INFO Executor: Starting executor ID driver on host macbookpro-5566.lan21/05/20 09:54:22 INFO Utils: Successfully started service '</span>org.apache.spark.network.netty.NettyBlockTransferService' on port 64240.21/05/20 09:54:22 INFO NettyBlockTransferService: Server created on macbookpro-5566.lan:6424021/05/20 09:54:22 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy <span class="token keyword">for</span> block replication policy21/05/20 09:54:22 INFO BlockManagerMaster: Registering BlockManager BlockManagerId<span class="token punctuation">(</span>driver, macbookpro-5566.lan, 64240, None<span class="token punctuation">)</span>21/05/20 09:54:22 INFO BlockManagerMasterEndpoint: Registering block manager macbookpro-5566.lan:64240 with 434.4 MiB RAM, BlockManagerId<span class="token punctuation">(</span>driver, macbookpro-5566.lan, 64240, None<span class="token punctuation">)</span>21/05/20 09:54:22 INFO BlockManagerMaster: Registered BlockManager BlockManagerId<span class="token punctuation">(</span>driver, macbookpro-5566.lan, 64240, None<span class="token punctuation">)</span>21/05/20 09:54:22 INFO BlockManager: Initialized BlockManager: BlockManagerId<span class="token punctuation">(</span>driver, macbookpro-5566.lan, 64240, None<span class="token punctuation">)</span>21/05/20 09:54:22 INFO MemoryStore: Block broadcast_0 stored as values <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 175.8 KiB, <span class="token function">free</span> 434.2 MiB<span class="token punctuation">)</span>21/05/20 09:54:22 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 27.1 KiB, <span class="token function">free</span> 434.2 MiB<span class="token punctuation">)</span>21/05/20 09:54:22 INFO BlockManagerInfo: Added broadcast_0_piece0 <span class="token keyword">in</span> memory on macbookpro-5566.lan:64240 <span class="token punctuation">(</span>size: 27.1 KiB, free: 434.4 MiB<span class="token punctuation">)</span>21/05/20 09:54:22 INFO SparkContext: Created broadcast 0 from textFile at NativeMethodAccessorImpl.java:021/05/20 09:54:23 INFO FileInputFormat: Total input files to process <span class="token keyword">:</span> 121/05/20 09:54:23 INFO SparkContext: Starting job: sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:3021/05/20 09:54:23 INFO DAGScheduler: Registering RDD 3 <span class="token punctuation">(</span>reduceByKey at /Users/sunyun/Downloads/RatedMovieSpark.py:26<span class="token punctuation">)</span> as input to shuffle 021/05/20 09:54:23 INFO DAGScheduler: Got job 0 <span class="token punctuation">(</span>sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span> with 2 output partitions21/05/20 09:54:23 INFO DAGScheduler: Final stage: ResultStage 1 <span class="token punctuation">(</span>sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span>21/05/20 09:54:23 INFO DAGScheduler: Parents of final stage: List<span class="token punctuation">(</span>ShuffleMapStage 0<span class="token punctuation">)</span>21/05/20 09:54:23 INFO DAGScheduler: Missing parents: List<span class="token punctuation">(</span>ShuffleMapStage 0<span class="token punctuation">)</span>21/05/20 09:54:23 INFO DAGScheduler: Submitting ShuffleMapStage 0 <span class="token punctuation">(</span>PairwiseRDD<span class="token punctuation">[</span>3<span class="token punctuation">]</span> at reduceByKey at /Users/sunyun/Downloads/RatedMovieSpark.py:26<span class="token punctuation">)</span>, <span class="token function">which</span> has no missing parents21/05/20 09:54:24 INFO MemoryStore: Block broadcast_1 stored as values <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 11.4 KiB, <span class="token function">free</span> 434.2 MiB<span class="token punctuation">)</span>21/05/20 09:54:24 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 7.0 KiB, <span class="token function">free</span> 434.2 MiB<span class="token punctuation">)</span>21/05/20 09:54:24 INFO BlockManagerInfo: Added broadcast_1_piece0 <span class="token keyword">in</span> memory on macbookpro-5566.lan:64240 <span class="token punctuation">(</span>size: 7.0 KiB, free: 434.4 MiB<span class="token punctuation">)</span>21/05/20 09:54:24 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:122321/05/20 09:54:24 INFO DAGScheduler: Submitting 2 missing tasks from ShuffleMapStage 0 <span class="token punctuation">(</span>PairwiseRDD<span class="token punctuation">[</span>3<span class="token punctuation">]</span> at reduceByKey at /Users/sunyun/Downloads/RatedMovieSpark.py:26<span class="token punctuation">)</span> <span class="token punctuation">(</span>first 15 tasks are <span class="token keyword">for</span> partitions Vector<span class="token punctuation">(</span>0, 1<span class="token punctuation">))</span>21/05/20 09:54:24 INFO TaskSchedulerImpl: Adding task <span class="token keyword">set</span> 0.0 with 2 tasks21/05/20 09:54:24 INFO TaskSetManager: Starting task 0.0 <span class="token keyword">in</span> stage 0.0 <span class="token punctuation">(</span>TID 0, macbookpro-5566.lan, executor driver, partition 0, NODE_LOCAL, 7378 bytes<span class="token punctuation">)</span>21/05/20 09:54:24 INFO TaskSetManager: Starting task 1.0 <span class="token keyword">in</span> stage 0.0 <span class="token punctuation">(</span>TID 1, macbookpro-5566.lan, executor driver, partition 1, NODE_LOCAL, 7378 bytes<span class="token punctuation">)</span>21/05/20 09:54:24 INFO Executor: Running task 1.0 <span class="token keyword">in</span> stage 0.0 <span class="token punctuation">(</span>TID 1<span class="token punctuation">)</span>21/05/20 09:54:24 INFO Executor: Running task 0.0 <span class="token keyword">in</span> stage 0.0 <span class="token punctuation">(</span>TID 0<span class="token punctuation">)</span>21/05/20 09:54:24 INFO HadoopRDD: Input split: hdfs://localhost:8020/user/sunyun/ml-100k/u.data:989613+98961321/05/20 09:54:24 INFO HadoopRDD: Input split: hdfs://localhost:8020/user/sunyun/ml-100k/u.data:0+989613/usr/local/Cellar/apache-spark/3.0.1/libexec/python/lib/pyspark.zip/pyspark/shuffle.py:60: UserWarning: Please <span class="token function">install</span> psutil to have better support with spilling  warnings.warn<span class="token punctuation">(</span><span class="token string">"Please install psutil to have better "</span>/usr/local/Cellar/apache-spark/3.0.1/libexec/python/lib/pyspark.zip/pyspark/shuffle.py:60: UserWarning: Please <span class="token function">install</span> psutil to have better support with spilling  warnings.warn<span class="token punctuation">(</span><span class="token string">"Please install psutil to have better "</span>21/05/20 09:54:25 INFO PythonRunner: Times: total <span class="token operator">=</span> 955, boot <span class="token operator">=</span> 597, init <span class="token operator">=</span> 38, finish <span class="token operator">=</span> 32021/05/20 09:54:25 INFO PythonRunner: Times: total <span class="token operator">=</span> 867, boot <span class="token operator">=</span> 505, init <span class="token operator">=</span> 31, finish <span class="token operator">=</span> 33121/05/20 09:54:25 INFO Executor: Finished task 1.0 <span class="token keyword">in</span> stage 0.0 <span class="token punctuation">(</span>TID 1<span class="token punctuation">)</span>. 1857 bytes result sent to driver21/05/20 09:54:25 INFO Executor: Finished task 0.0 <span class="token keyword">in</span> stage 0.0 <span class="token punctuation">(</span>TID 0<span class="token punctuation">)</span>. 1857 bytes result sent to driver21/05/20 09:54:25 INFO TaskSetManager: Finished task 0.0 <span class="token keyword">in</span> stage 0.0 <span class="token punctuation">(</span>TID 0<span class="token punctuation">)</span> <span class="token keyword">in</span> 1651 ms on macbookpro-5566.lan <span class="token punctuation">(</span>executor driver<span class="token punctuation">)</span> <span class="token punctuation">(</span>1/2<span class="token punctuation">)</span>21/05/20 09:54:25 INFO TaskSetManager: Finished task 1.0 <span class="token keyword">in</span> stage 0.0 <span class="token punctuation">(</span>TID 1<span class="token punctuation">)</span> <span class="token keyword">in</span> 1626 ms on macbookpro-5566.lan <span class="token punctuation">(</span>executor driver<span class="token punctuation">)</span> <span class="token punctuation">(</span>2/2<span class="token punctuation">)</span>21/05/20 09:54:25 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool 21/05/20 09:54:25 INFO PythonAccumulatorV2: Connected to AccumulatorServer at host: 127.0.0.1 port: 6424321/05/20 09:54:25 INFO DAGScheduler: ShuffleMapStage 0 <span class="token punctuation">(</span>reduceByKey at /Users/sunyun/Downloads/RatedMovieSpark.py:26<span class="token punctuation">)</span> finished <span class="token keyword">in</span> 1.875 s21/05/20 09:54:25 INFO DAGScheduler: looking <span class="token keyword">for</span> newly runnable stages21/05/20 09:54:25 INFO DAGScheduler: running: Set<span class="token punctuation">(</span><span class="token punctuation">)</span>21/05/20 09:54:25 INFO DAGScheduler: waiting: Set<span class="token punctuation">(</span>ResultStage 1<span class="token punctuation">)</span>21/05/20 09:54:25 INFO DAGScheduler: failed: Set<span class="token punctuation">(</span><span class="token punctuation">)</span>21/05/20 09:54:25 INFO DAGScheduler: Submitting ResultStage 1 <span class="token punctuation">(</span>PythonRDD<span class="token punctuation">[</span>6<span class="token punctuation">]</span> at sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span>, <span class="token function">which</span> has no missing parents21/05/20 09:54:25 INFO MemoryStore: Block broadcast_2 stored as values <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 10.4 KiB, <span class="token function">free</span> 434.2 MiB<span class="token punctuation">)</span>21/05/20 09:54:25 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 5.8 KiB, <span class="token function">free</span> 434.2 MiB<span class="token punctuation">)</span>21/05/20 09:54:25 INFO BlockManagerInfo: Added broadcast_2_piece0 <span class="token keyword">in</span> memory on macbookpro-5566.lan:64240 <span class="token punctuation">(</span>size: 5.8 KiB, free: 434.4 MiB<span class="token punctuation">)</span>21/05/20 09:54:25 INFO SparkContext: Created broadcast 2 from broadcast at DAGScheduler.scala:122321/05/20 09:54:25 INFO DAGScheduler: Submitting 2 missing tasks from ResultStage 1 <span class="token punctuation">(</span>PythonRDD<span class="token punctuation">[</span>6<span class="token punctuation">]</span> at sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span> <span class="token punctuation">(</span>first 15 tasks are <span class="token keyword">for</span> partitions Vector<span class="token punctuation">(</span>0, 1<span class="token punctuation">))</span>21/05/20 09:54:25 INFO TaskSchedulerImpl: Adding task <span class="token keyword">set</span> 1.0 with 2 tasks21/05/20 09:54:25 INFO TaskSetManager: Starting task 0.0 <span class="token keyword">in</span> stage 1.0 <span class="token punctuation">(</span>TID 2, macbookpro-5566.lan, executor driver, partition 0, NODE_LOCAL, 7143 bytes<span class="token punctuation">)</span>21/05/20 09:54:25 INFO TaskSetManager: Starting task 1.0 <span class="token keyword">in</span> stage 1.0 <span class="token punctuation">(</span>TID 3, macbookpro-5566.lan, executor driver, partition 1, NODE_LOCAL, 7143 bytes<span class="token punctuation">)</span>21/05/20 09:54:25 INFO Executor: Running task 1.0 <span class="token keyword">in</span> stage 1.0 <span class="token punctuation">(</span>TID 3<span class="token punctuation">)</span>21/05/20 09:54:25 INFO Executor: Running task 0.0 <span class="token keyword">in</span> stage 1.0 <span class="token punctuation">(</span>TID 2<span class="token punctuation">)</span>21/05/20 09:54:25 INFO ShuffleBlockFetcherIterator: Getting 2 <span class="token punctuation">(</span>15.2 KiB<span class="token punctuation">)</span> non-empty blocks including 2 <span class="token punctuation">(</span>15.2 KiB<span class="token punctuation">)</span> local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> host-local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> remote blocks21/05/20 09:54:25 INFO ShuffleBlockFetcherIterator: Getting 2 <span class="token punctuation">(</span>16.0 KiB<span class="token punctuation">)</span> non-empty blocks including 2 <span class="token punctuation">(</span>16.0 KiB<span class="token punctuation">)</span> local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> host-local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> remote blocks21/05/20 09:54:25 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches <span class="token keyword">in</span> 15 ms21/05/20 09:54:25 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches <span class="token keyword">in</span> 13 ms21/05/20 09:54:25 INFO PythonRunner: Times: total <span class="token operator">=</span> 19, boot <span class="token operator">=</span> -626, init <span class="token operator">=</span> 641, finish <span class="token operator">=</span> 421/05/20 09:54:25 INFO PythonRunner: Times: total <span class="token operator">=</span> 19, boot <span class="token operator">=</span> -614, init <span class="token operator">=</span> 629, finish <span class="token operator">=</span> 421/05/20 09:54:25 INFO Executor: Finished task 1.0 <span class="token keyword">in</span> stage 1.0 <span class="token punctuation">(</span>TID 3<span class="token punctuation">)</span>. 1808 bytes result sent to driver21/05/20 09:54:25 INFO Executor: Finished task 0.0 <span class="token keyword">in</span> stage 1.0 <span class="token punctuation">(</span>TID 2<span class="token punctuation">)</span>. 1808 bytes result sent to driver21/05/20 09:54:25 INFO TaskSetManager: Finished task 1.0 <span class="token keyword">in</span> stage 1.0 <span class="token punctuation">(</span>TID 3<span class="token punctuation">)</span> <span class="token keyword">in</span> 119 ms on macbookpro-5566.lan <span class="token punctuation">(</span>executor driver<span class="token punctuation">)</span> <span class="token punctuation">(</span>1/2<span class="token punctuation">)</span>21/05/20 09:54:25 INFO TaskSetManager: Finished task 0.0 <span class="token keyword">in</span> stage 1.0 <span class="token punctuation">(</span>TID 2<span class="token punctuation">)</span> <span class="token keyword">in</span> 123 ms on macbookpro-5566.lan <span class="token punctuation">(</span>executor driver<span class="token punctuation">)</span> <span class="token punctuation">(</span>2/2<span class="token punctuation">)</span>21/05/20 09:54:25 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool 21/05/20 09:54:25 INFO DAGScheduler: ResultStage 1 <span class="token punctuation">(</span>sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span> finished <span class="token keyword">in</span> 0.138 s21/05/20 09:54:25 INFO DAGScheduler: Job 0 is finished. Cancelling potential speculative or zombie tasks <span class="token keyword">for</span> this job21/05/20 09:54:25 INFO TaskSchedulerImpl: Killing all running tasks <span class="token keyword">in</span> stage 1: Stage finished21/05/20 09:54:25 INFO DAGScheduler: Job 0 finished: sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30, took 2.105647 s21/05/20 09:54:26 INFO SparkContext: Starting job: sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:3021/05/20 09:54:26 INFO DAGScheduler: Got job 1 <span class="token punctuation">(</span>sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span> with 2 output partitions21/05/20 09:54:26 INFO DAGScheduler: Final stage: ResultStage 3 <span class="token punctuation">(</span>sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span>21/05/20 09:54:26 INFO DAGScheduler: Parents of final stage: List<span class="token punctuation">(</span>ShuffleMapStage 2<span class="token punctuation">)</span>21/05/20 09:54:26 INFO DAGScheduler: Missing parents: List<span class="token punctuation">(</span><span class="token punctuation">)</span>21/05/20 09:54:26 INFO DAGScheduler: Submitting ResultStage 3 <span class="token punctuation">(</span>PythonRDD<span class="token punctuation">[</span>7<span class="token punctuation">]</span> at sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span>, <span class="token function">which</span> has no missing parents21/05/20 09:54:26 INFO MemoryStore: Block broadcast_3 stored as values <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 10.3 KiB, <span class="token function">free</span> 434.2 MiB<span class="token punctuation">)</span>21/05/20 09:54:26 INFO MemoryStore: Block broadcast_3_piece0 stored as bytes <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 5.9 KiB, <span class="token function">free</span> 434.2 MiB<span class="token punctuation">)</span>21/05/20 09:54:26 INFO BlockManagerInfo: Added broadcast_3_piece0 <span class="token keyword">in</span> memory on macbookpro-5566.lan:64240 <span class="token punctuation">(</span>size: 5.9 KiB, free: 434.4 MiB<span class="token punctuation">)</span>21/05/20 09:54:26 INFO SparkContext: Created broadcast 3 from broadcast at DAGScheduler.scala:122321/05/20 09:54:26 INFO DAGScheduler: Submitting 2 missing tasks from ResultStage 3 <span class="token punctuation">(</span>PythonRDD<span class="token punctuation">[</span>7<span class="token punctuation">]</span> at sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span> <span class="token punctuation">(</span>first 15 tasks are <span class="token keyword">for</span> partitions Vector<span class="token punctuation">(</span>0, 1<span class="token punctuation">))</span>21/05/20 09:54:26 INFO TaskSchedulerImpl: Adding task <span class="token keyword">set</span> 3.0 with 2 tasks21/05/20 09:54:26 INFO TaskSetManager: Starting task 0.0 <span class="token keyword">in</span> stage 3.0 <span class="token punctuation">(</span>TID 4, macbookpro-5566.lan, executor driver, partition 0, NODE_LOCAL, 7143 bytes<span class="token punctuation">)</span>21/05/20 09:54:26 INFO TaskSetManager: Starting task 1.0 <span class="token keyword">in</span> stage 3.0 <span class="token punctuation">(</span>TID 5, macbookpro-5566.lan, executor driver, partition 1, NODE_LOCAL, 7143 bytes<span class="token punctuation">)</span>21/05/20 09:54:26 INFO Executor: Running task 0.0 <span class="token keyword">in</span> stage 3.0 <span class="token punctuation">(</span>TID 4<span class="token punctuation">)</span>21/05/20 09:54:26 INFO Executor: Running task 1.0 <span class="token keyword">in</span> stage 3.0 <span class="token punctuation">(</span>TID 5<span class="token punctuation">)</span>21/05/20 09:54:26 INFO ShuffleBlockFetcherIterator: Getting 2 <span class="token punctuation">(</span>16.0 KiB<span class="token punctuation">)</span> non-empty blocks including 2 <span class="token punctuation">(</span>16.0 KiB<span class="token punctuation">)</span> local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> host-local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> remote blocks21/05/20 09:54:26 INFO ShuffleBlockFetcherIterator: Getting 2 <span class="token punctuation">(</span>15.2 KiB<span class="token punctuation">)</span> non-empty blocks including 2 <span class="token punctuation">(</span>15.2 KiB<span class="token punctuation">)</span> local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> host-local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> remote blocks21/05/20 09:54:26 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches <span class="token keyword">in</span> 1 ms21/05/20 09:54:26 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches <span class="token keyword">in</span> 1 ms21/05/20 09:54:26 INFO PythonRunner: Times: total <span class="token operator">=</span> 9, boot <span class="token operator">=</span> -107, init <span class="token operator">=</span> 111, finish <span class="token operator">=</span> 521/05/20 09:54:26 INFO PythonRunner: Times: total <span class="token operator">=</span> 9, boot <span class="token operator">=</span> -108, init <span class="token operator">=</span> 112, finish <span class="token operator">=</span> 521/05/20 09:54:26 INFO Executor: Finished task 0.0 <span class="token keyword">in</span> stage 3.0 <span class="token punctuation">(</span>TID 4<span class="token punctuation">)</span>. 2074 bytes result sent to driver21/05/20 09:54:26 INFO Executor: Finished task 1.0 <span class="token keyword">in</span> stage 3.0 <span class="token punctuation">(</span>TID 5<span class="token punctuation">)</span>. 2101 bytes result sent to driver21/05/20 09:54:26 INFO TaskSetManager: Finished task 0.0 <span class="token keyword">in</span> stage 3.0 <span class="token punctuation">(</span>TID 4<span class="token punctuation">)</span> <span class="token keyword">in</span> 37 ms on macbookpro-5566.lan <span class="token punctuation">(</span>executor driver<span class="token punctuation">)</span> <span class="token punctuation">(</span>1/2<span class="token punctuation">)</span>21/05/20 09:54:26 INFO TaskSetManager: Finished task 1.0 <span class="token keyword">in</span> stage 3.0 <span class="token punctuation">(</span>TID 5<span class="token punctuation">)</span> <span class="token keyword">in</span> 36 ms on macbookpro-5566.lan <span class="token punctuation">(</span>executor driver<span class="token punctuation">)</span> <span class="token punctuation">(</span>2/2<span class="token punctuation">)</span>21/05/20 09:54:26 INFO TaskSchedulerImpl: Removed TaskSet 3.0, whose tasks have all completed, from pool 21/05/20 09:54:26 INFO DAGScheduler: ResultStage 3 <span class="token punctuation">(</span>sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span> finished <span class="token keyword">in</span> 0.058 s21/05/20 09:54:26 INFO DAGScheduler: Job 1 is finished. Cancelling potential speculative or zombie tasks <span class="token keyword">for</span> this job21/05/20 09:54:26 INFO TaskSchedulerImpl: Killing all running tasks <span class="token keyword">in</span> stage 3: Stage finished21/05/20 09:54:26 INFO DAGScheduler: Job 1 finished: sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30, took 0.069078 s21/05/20 09:54:26 INFO SparkContext: Starting job: runJob at PythonRDD.scala:15421/05/20 09:54:26 INFO DAGScheduler: Registering RDD 9 <span class="token punctuation">(</span>sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span> as input to shuffle 121/05/20 09:54:26 INFO DAGScheduler: Got job 2 <span class="token punctuation">(</span>runJob at PythonRDD.scala:154<span class="token punctuation">)</span> with 1 output partitions21/05/20 09:54:26 INFO DAGScheduler: Final stage: ResultStage 6 <span class="token punctuation">(</span>runJob at PythonRDD.scala:154<span class="token punctuation">)</span>21/05/20 09:54:26 INFO DAGScheduler: Parents of final stage: List<span class="token punctuation">(</span>ShuffleMapStage 5<span class="token punctuation">)</span>21/05/20 09:54:26 INFO DAGScheduler: Missing parents: List<span class="token punctuation">(</span>ShuffleMapStage 5<span class="token punctuation">)</span>21/05/20 09:54:26 INFO DAGScheduler: Submitting ShuffleMapStage 5 <span class="token punctuation">(</span>PairwiseRDD<span class="token punctuation">[</span>9<span class="token punctuation">]</span> at sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span>, <span class="token function">which</span> has no missing parents21/05/20 09:54:26 INFO MemoryStore: Block broadcast_4 stored as values <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 11.4 KiB, <span class="token function">free</span> 434.1 MiB<span class="token punctuation">)</span>21/05/20 09:54:26 INFO MemoryStore: Block broadcast_4_piece0 stored as bytes <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 6.8 KiB, <span class="token function">free</span> 434.1 MiB<span class="token punctuation">)</span>21/05/20 09:54:26 INFO BlockManagerInfo: Added broadcast_4_piece0 <span class="token keyword">in</span> memory on macbookpro-5566.lan:64240 <span class="token punctuation">(</span>size: 6.8 KiB, free: 434.3 MiB<span class="token punctuation">)</span>21/05/20 09:54:26 INFO SparkContext: Created broadcast 4 from broadcast at DAGScheduler.scala:122321/05/20 09:54:26 INFO DAGScheduler: Submitting 2 missing tasks from ShuffleMapStage 5 <span class="token punctuation">(</span>PairwiseRDD<span class="token punctuation">[</span>9<span class="token punctuation">]</span> at sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span> <span class="token punctuation">(</span>first 15 tasks are <span class="token keyword">for</span> partitions Vector<span class="token punctuation">(</span>0, 1<span class="token punctuation">))</span>21/05/20 09:54:26 INFO TaskSchedulerImpl: Adding task <span class="token keyword">set</span> 5.0 with 2 tasks21/05/20 09:54:26 INFO TaskSetManager: Starting task 0.0 <span class="token keyword">in</span> stage 5.0 <span class="token punctuation">(</span>TID 6, macbookpro-5566.lan, executor driver, partition 0, NODE_LOCAL, 7132 bytes<span class="token punctuation">)</span>21/05/20 09:54:26 INFO TaskSetManager: Starting task 1.0 <span class="token keyword">in</span> stage 5.0 <span class="token punctuation">(</span>TID 7, macbookpro-5566.lan, executor driver, partition 1, NODE_LOCAL, 7132 bytes<span class="token punctuation">)</span>21/05/20 09:54:26 INFO Executor: Running task 0.0 <span class="token keyword">in</span> stage 5.0 <span class="token punctuation">(</span>TID 6<span class="token punctuation">)</span>21/05/20 09:54:26 INFO Executor: Running task 1.0 <span class="token keyword">in</span> stage 5.0 <span class="token punctuation">(</span>TID 7<span class="token punctuation">)</span>21/05/20 09:54:26 INFO ShuffleBlockFetcherIterator: Getting 2 <span class="token punctuation">(</span>15.2 KiB<span class="token punctuation">)</span> non-empty blocks including 2 <span class="token punctuation">(</span>15.2 KiB<span class="token punctuation">)</span> local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> host-local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> remote blocks21/05/20 09:54:26 INFO ShuffleBlockFetcherIterator: Getting 2 <span class="token punctuation">(</span>16.0 KiB<span class="token punctuation">)</span> non-empty blocks including 2 <span class="token punctuation">(</span>16.0 KiB<span class="token punctuation">)</span> local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> host-local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> remote blocks21/05/20 09:54:26 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches <span class="token keyword">in</span> 1 ms21/05/20 09:54:26 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches <span class="token keyword">in</span> 1 ms21/05/20 09:54:26 INFO PythonRunner: Times: total <span class="token operator">=</span> 10, boot <span class="token operator">=</span> -107, init <span class="token operator">=</span> 111, finish <span class="token operator">=</span> 621/05/20 09:54:26 INFO PythonRunner: Times: total <span class="token operator">=</span> 10, boot <span class="token operator">=</span> -106, init <span class="token operator">=</span> 110, finish <span class="token operator">=</span> 621/05/20 09:54:26 INFO Executor: Finished task 0.0 <span class="token keyword">in</span> stage 5.0 <span class="token punctuation">(</span>TID 6<span class="token punctuation">)</span>. 1986 bytes result sent to driver21/05/20 09:54:26 INFO Executor: Finished task 1.0 <span class="token keyword">in</span> stage 5.0 <span class="token punctuation">(</span>TID 7<span class="token punctuation">)</span>. 1986 bytes result sent to driver21/05/20 09:54:26 INFO TaskSetManager: Finished task 0.0 <span class="token keyword">in</span> stage 5.0 <span class="token punctuation">(</span>TID 6<span class="token punctuation">)</span> <span class="token keyword">in</span> 53 ms on macbookpro-5566.lan <span class="token punctuation">(</span>executor driver<span class="token punctuation">)</span> <span class="token punctuation">(</span>1/2<span class="token punctuation">)</span>21/05/20 09:54:26 INFO TaskSetManager: Finished task 1.0 <span class="token keyword">in</span> stage 5.0 <span class="token punctuation">(</span>TID 7<span class="token punctuation">)</span> <span class="token keyword">in</span> 54 ms on macbookpro-5566.lan <span class="token punctuation">(</span>executor driver<span class="token punctuation">)</span> <span class="token punctuation">(</span>2/2<span class="token punctuation">)</span>21/05/20 09:54:26 INFO TaskSchedulerImpl: Removed TaskSet 5.0, whose tasks have all completed, from pool 21/05/20 09:54:26 INFO DAGScheduler: ShuffleMapStage 5 <span class="token punctuation">(</span>sortBy at /Users/sunyun/Downloads/RatedMovieSpark.py:30<span class="token punctuation">)</span> finished <span class="token keyword">in</span> 0.069 s21/05/20 09:54:26 INFO DAGScheduler: looking <span class="token keyword">for</span> newly runnable stages21/05/20 09:54:26 INFO DAGScheduler: running: Set<span class="token punctuation">(</span><span class="token punctuation">)</span>21/05/20 09:54:26 INFO DAGScheduler: waiting: Set<span class="token punctuation">(</span>ResultStage 6<span class="token punctuation">)</span>21/05/20 09:54:26 INFO DAGScheduler: failed: Set<span class="token punctuation">(</span><span class="token punctuation">)</span>21/05/20 09:54:26 INFO DAGScheduler: Submitting ResultStage 6 <span class="token punctuation">(</span>PythonRDD<span class="token punctuation">[</span>12<span class="token punctuation">]</span> at RDD at PythonRDD.scala:53<span class="token punctuation">)</span>, <span class="token function">which</span> has no missing parents21/05/20 09:54:26 INFO MemoryStore: Block broadcast_5 stored as values <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 8.4 KiB, <span class="token function">free</span> 434.1 MiB<span class="token punctuation">)</span>21/05/20 09:54:26 INFO MemoryStore: Block broadcast_5_piece0 stored as bytes <span class="token keyword">in</span> memory <span class="token punctuation">(</span>estimated size 5.1 KiB, <span class="token function">free</span> 434.1 MiB<span class="token punctuation">)</span>21/05/20 09:54:26 INFO BlockManagerInfo: Added broadcast_5_piece0 <span class="token keyword">in</span> memory on macbookpro-5566.lan:64240 <span class="token punctuation">(</span>size: 5.1 KiB, free: 434.3 MiB<span class="token punctuation">)</span>21/05/20 09:54:26 INFO SparkContext: Created broadcast 5 from broadcast at DAGScheduler.scala:122321/05/20 09:54:26 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 6 <span class="token punctuation">(</span>PythonRDD<span class="token punctuation">[</span>12<span class="token punctuation">]</span> at RDD at PythonRDD.scala:53<span class="token punctuation">)</span> <span class="token punctuation">(</span>first 15 tasks are <span class="token keyword">for</span> partitions Vector<span class="token punctuation">(</span>0<span class="token punctuation">))</span>21/05/20 09:54:26 INFO TaskSchedulerImpl: Adding task <span class="token keyword">set</span> 6.0 with 1 tasks21/05/20 09:54:26 INFO TaskSetManager: Starting task 0.0 <span class="token keyword">in</span> stage 6.0 <span class="token punctuation">(</span>TID 8, macbookpro-5566.lan, executor driver, partition 0, NODE_LOCAL, 7143 bytes<span class="token punctuation">)</span>21/05/20 09:54:26 INFO Executor: Running task 0.0 <span class="token keyword">in</span> stage 6.0 <span class="token punctuation">(</span>TID 8<span class="token punctuation">)</span>21/05/20 09:54:26 INFO ShuffleBlockFetcherIterator: Getting 2 <span class="token punctuation">(</span>10.9 KiB<span class="token punctuation">)</span> non-empty blocks including 2 <span class="token punctuation">(</span>10.9 KiB<span class="token punctuation">)</span> local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> host-local and 0 <span class="token punctuation">(</span>0.0 B<span class="token punctuation">)</span> remote blocks21/05/20 09:54:26 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches <span class="token keyword">in</span> 1 ms21/05/20 09:54:26 INFO PythonRunner: Times: total <span class="token operator">=</span> 4, boot <span class="token operator">=</span> -45, init <span class="token operator">=</span> 48, finish <span class="token operator">=</span> 121/05/20 09:54:26 INFO Executor: Finished task 0.0 <span class="token keyword">in</span> stage 6.0 <span class="token punctuation">(</span>TID 8<span class="token punctuation">)</span>. 2026 bytes result sent to driver21/05/20 09:54:26 INFO TaskSetManager: Finished task 0.0 <span class="token keyword">in</span> stage 6.0 <span class="token punctuation">(</span>TID 8<span class="token punctuation">)</span> <span class="token keyword">in</span> 22 ms on macbookpro-5566.lan <span class="token punctuation">(</span>executor driver<span class="token punctuation">)</span> <span class="token punctuation">(</span>1/1<span class="token punctuation">)</span>21/05/20 09:54:26 INFO TaskSchedulerImpl: Removed TaskSet 6.0, whose tasks have all completed, from pool 21/05/20 09:54:26 INFO DAGScheduler: ResultStage 6 <span class="token punctuation">(</span>runJob at PythonRDD.scala:154<span class="token punctuation">)</span> finished <span class="token keyword">in</span> 0.038 s21/05/20 09:54:26 INFO DAGScheduler: Job 2 is finished. Cancelling potential speculative or zombie tasks <span class="token keyword">for</span> this job21/05/20 09:54:26 INFO TaskSchedulerImpl: Killing all running tasks <span class="token keyword">in</span> stage 6: Stage finished21/05/20 09:54:26 INFO DAGScheduler: Job 2 finished: runJob at PythonRDD.scala:154, took 0.121859 sAmityville: Dollhouse <span class="token punctuation">(</span>1996<span class="token punctuation">)</span> 1.0Somebody to Love <span class="token punctuation">(</span>1994<span class="token punctuation">)</span> 1.0Every Other Weekend <span class="token punctuation">(</span>1990<span class="token punctuation">)</span> 1.0Homage <span class="token punctuation">(</span>1995<span class="token punctuation">)</span> 1.03 Ninjas: High Noon At Mega Mountain <span class="token punctuation">(</span>1998<span class="token punctuation">)</span> 1.0Bird of Prey <span class="token punctuation">(</span>1996<span class="token punctuation">)</span> 1.0Power 98 <span class="token punctuation">(</span>1995<span class="token punctuation">)</span> 1.0Beyond Bedlam <span class="token punctuation">(</span>1993<span class="token punctuation">)</span> 1.0Falling <span class="token keyword">in</span> Love Again <span class="token punctuation">(</span>1980<span class="token punctuation">)</span> 1.0T-Men <span class="token punctuation">(</span>1947<span class="token punctuation">)</span> 1.021/05/20 09:54:26 INFO SparkContext: Invoking stop<span class="token punctuation">(</span><span class="token punctuation">)</span> from <span class="token function">shutdown</span> hook21/05/20 09:54:26 INFO SparkUI: Stopped Spark web UI at http://macbookpro-5566.lan:404021/05/20 09:54:26 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped<span class="token operator">!</span>21/05/20 09:54:26 INFO MemoryStore: MemoryStore cleared21/05/20 09:54:26 INFO BlockManager: BlockManager stopped21/05/20 09:54:26 INFO BlockManagerMaster: BlockManagerMaster stopped21/05/20 09:54:26 INFO OutputCommitCoordinator<span class="token variable">$OutputCommitCoordinatorEndpoint</span><span class="token keyword">:</span> OutputCommitCoordinator stopped<span class="token operator">!</span>21/05/20 09:54:26 INFO SparkContext: Successfully stopped SparkContext21/05/20 09:54:26 INFO ShutdownHookManager: Shutdown hook called21/05/20 09:54:26 INFO ShutdownHookManager: Deleting directory /private/var/folders/4k/dwx5pnzx3k596x3ct39tqskw0000gn/T/spark-5643016b-451c-4892-86f7-74cf9335c16b21/05/20 09:54:26 INFO ShutdownHookManager: Deleting directory /private/var/folders/4k/dwx5pnzx3k596x3ct39tqskw0000gn/T/spark-0d672059-499e-4f43-a211-87c1f8fa1b31/pyspark-cf615851-efaf-4bca-8a08-81c7ba12108c21/05/20 09:54:26 INFO ShutdownHookManager: Deleting directory /private/var/folders/4k/dwx5pnzx3k596x3ct39tqskw0000gn/T/spark-0d672059-499e-4f43-a211-87c1f8fa1b31<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-json"><code class="language-json">有效信息Amityville<span class="token operator">:</span> Dollhouse (<span class="token number">1996</span><span class="token punctuation">)</span> <span class="token number">1.0</span>Somebody to Love (<span class="token number">1994</span><span class="token punctuation">)</span> <span class="token number">1.0</span>Every Other Weekend (<span class="token number">1990</span><span class="token punctuation">)</span> <span class="token number">1.0</span>Homage (<span class="token number">1995</span><span class="token punctuation">)</span> <span class="token number">1.0</span><span class="token number">3</span> Ninjas<span class="token operator">:</span> High Noon At Mega Mountain (<span class="token number">1998</span><span class="token punctuation">)</span> <span class="token number">1.0</span>Bird of Prey (<span class="token number">1996</span><span class="token punctuation">)</span> <span class="token number">1.0</span>Power <span class="token number">98</span> (<span class="token number">1995</span><span class="token punctuation">)</span> <span class="token number">1.0</span>Beyond Bedlam (<span class="token number">1993</span><span class="token punctuation">)</span> <span class="token number">1.0</span>Falling in Love Again (<span class="token number">1980</span><span class="token punctuation">)</span> <span class="token number">1.0</span>T-Men (<span class="token number">1947</span><span class="token punctuation">)</span> <span class="token number">1.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mac安装hodoop</title>
      <link href="posts/674daac5/"/>
      <url>posts/674daac5/</url>
      
        <content type="html"><![CDATA[<h1 id="mac安装hodoop"><a href="#mac安装hodoop" class="headerlink" title="mac安装hodoop"></a>mac安装hodoop</h1><h2 id="1-确保安装jdk和免密ssh登陆"><a href="#1-确保安装jdk和免密ssh登陆" class="headerlink" title="1.确保安装jdk和免密ssh登陆"></a>1.确保安装jdk和免密ssh登陆</h2><ul><li><code>java -version</code></li></ul><pre class="line-numbers language-bash"><code class="language-bash">Last login: Fri Apr  2 08:22:35 on consolesunyun@sunyundeMacBook-Pro ~ % java -versionjava version <span class="token string">"1.8.0_241"</span>Java<span class="token punctuation">(</span>TM<span class="token punctuation">)</span> SE Runtime Environment <span class="token punctuation">(</span>build 1.8.0_241-b07<span class="token punctuation">)</span>Java HotSpot<span class="token punctuation">(</span>TM<span class="token punctuation">)</span> 64-Bit Server VM <span class="token punctuation">(</span>build 25.241-b07, mixed mode<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">sunyun@sunyundeMacBook-Pro ~ % ssh-keygen -t rsaGenerating public/private rsa key pair.Enter <span class="token function">file</span> <span class="token keyword">in</span> <span class="token function">which</span> to save the key <span class="token punctuation">(</span>/Users/sunyun/.ssh/id_rsa<span class="token punctuation">)</span>: <span class="token function">yes</span>Enter passphrase <span class="token punctuation">(</span>empty <span class="token keyword">for</span> no passphrase<span class="token punctuation">)</span>: Enter same passphrase again: Your identification has been saved <span class="token keyword">in</span> yes.Your public key has been saved <span class="token keyword">in</span> yes.pub.The key fingerprint is:SHA256:IhC+EKalYPyGRU/b8QBMYdtM2zqZYuOiLVDfbFHiNMg sunyun@sunyundeMacBook-Pro.localThe key's randomart image is:+---<span class="token punctuation">[</span>RSA 3072<span class="token punctuation">]</span>----+<span class="token operator">|</span>+o+ooBo+         <span class="token operator">|</span><span class="token operator">|</span><span class="token operator">=</span>* oE.@ B        <span class="token operator">|</span><span class="token operator">|</span>+ *  * O o       <span class="token operator">|</span><span class="token operator">|</span> o.<span class="token operator">=</span>  o +        <span class="token operator">|</span><span class="token operator">|</span> .o<span class="token punctuation">..</span>*.*S        <span class="token operator">|</span><span class="token operator">|</span><span class="token keyword">.</span>   +.*<span class="token punctuation">..</span>        <span class="token operator">|</span><span class="token operator">|</span><span class="token keyword">.</span>  <span class="token keyword">.</span> o           <span class="token operator">|</span><span class="token operator">|</span> .o <span class="token keyword">.</span>            <span class="token operator">|</span><span class="token operator">|</span> <span class="token punctuation">..</span>.             <span class="token operator">|</span>+----<span class="token punctuation">[</span>SHA256<span class="token punctuation">]</span>-----+sunyun@sunyundeMacBook-Pro ~ % <span class="token function">cat</span> ~/.ssh/local.pub <span class="token operator">>></span> ~/.ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-安装hadoop"><a href="#2-安装hadoop" class="headerlink" title="2.安装hadoop"></a>2.安装hadoop</h2><ul><li><code>brew install hadoop</code> (推荐), 安装完成后你会看到安装路径在那里</li><li>官网下载压缩包, 解压到你指定的目录, 然后安装(不推荐)</li></ul><pre class="line-numbers language-base"><code class="language-base">sunyun@sunyundeMacBook-Pro ~ % brew install hadoopUpdating Homebrew...==> Downloading https://mirrors.ustc.edu.cn/homebrew-bottles/bottles/openjdk-15.==> Downloading from https://d29vzk4ow07wi7.cloudfront.net/e91cd8028e8bb7415bcb9######################################################################## 100.0%==> Downloading https://www.apache.org/dyn/closer.lua?path=hadoop/common/hadoop-==> Downloading from https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/h######################################################################## 100.0%==> Installing dependencies for hadoop: openjdk==> Installing hadoop dependency: openjdk==> Pouring openjdk-15.0.1.big_sur.bottle.1.tar.gz==> CaveatsFor the system Java wrappers to find this JDK, symlink it with  sudo ln -sfn /usr/local/opt/openjdk/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk.jdkopenjdk is keg-only, which means it was not symlinked into /usr/local,because it shadows the macOS `java` wrapper.If you need to have openjdk first in your PATH run:  echo 'export PATH="/usr/local/opt/openjdk/bin:$PATH"' >> ~/.zshrcFor compilers to find openjdk you may need to set:  export CPPFLAGS="-I/usr/local/opt/openjdk/include"==> Summary🍺  /usr/local/Cellar/openjdk/15.0.1: 614 files, 324.9MB==> Installing hadoopError: Your CLT does not support macOS 11.It is either outdated or was modified.Please update your CLT or delete it if no updates are available.Update them from Software Update in System Preferences or run:  softwareupdate --all --install --forceIf that doesn't show you an update run:  sudo rm -rf /Library/Developer/CommandLineTools  sudo xcode-select --installAlternatively, manually download them from:  https://developer.apple.com/download/more/.Error: An exception occurred within a child process:  SystemExit: exitsunyun@sunyundeMacBook-Pro ~ % softwareupdate --all --install --forceSoftware Update ToolFinding available softwareNo updates are available.sunyun@sunyundeMacBook-Pro ~ % sudo rm -rf /Library/Developer/CommandLineToolsPassword:sunyun@sunyundeMacBook-Pro ~ % sudo xcode-select --installxcode-select: note: install requested for command line developer toolssunyun@sunyundeMacBook-Pro ~ % brew install hadoop                            ==> Downloading https://www.apache.org/dyn/closer.lua?path=hadoop/common/hadoop-Already downloaded: /Users/sunyun/Library/Caches/Homebrew/downloads/764c6a0ea7352bb8bb505989feee1b36dc628c2dcd6b93fef1ca829d191b4e1e--hadoop-3.3.0.tar.gz🍺  /usr/local/Cellar/hadoop/3.3.0: 21,819 files, 954.7MB, built in 56 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置hadoop-env-sh"><a href="#配置hadoop-env-sh" class="headerlink" title="配置hadoop-env.sh"></a>配置hadoop-env.sh</h4><pre class="line-numbers language-base"><code class="language-base">sunyun@sunyundeMacBook-Pro hadoop % pwd /usr/local/Cellar/hadoop/3.3.0/libexec/etc/hadoop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="添加JAVA-HOME路径"><a href="#添加JAVA-HOME路径" class="headerlink" title="添加JAVA_HOME路径"></a>添加JAVA_HOME路径</h4><pre class="line-numbers language-bash"><code class="language-bash">sunyun@sunyundeMacBook-Pro ~ % /usr/libexec/java_home -VMatching Java Virtual Machines <span class="token punctuation">(</span>1<span class="token punctuation">)</span>:    1.8.0_241 <span class="token punctuation">(</span>x86_64<span class="token punctuation">)</span> <span class="token string">"Oracle Corporation"</span> - <span class="token string">"Java SE 8"</span> /Library/Java/JavaVirtualMachines/jdk1.8.0_241.jdk/Contents/Home/Library/Java/JavaVirtualMachines/jdk1.8.0_241.jdk/Contents/Home<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/Library/Java/JavaVirtualMachines/jdk1.8.0_241.jdk/Contents/Home<span class="token comment" spellcheck="true"># Mac查看jdk 位置 /usr/libexec/java_home -V</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="配置core-site-xml"><a href="#配置core-site-xml" class="headerlink" title="配置core-site.xml"></a>配置core-site.xml</h4><p>配置hdfs地址和端口</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.default.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://localhost:8020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 以下配置可防止系统重启导致NameNode 不能启动--></span>  <span class="token comment" spellcheck="true">&lt;!-- /Users/用户名/data 这个路径你可以随便配置, hadoop必须有权限--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/Users/用户名/data/hadoop/tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>A base for other temporary directories.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>   <span class="token comment" spellcheck="true">&lt;!-- DataNode存放块数据的本地文件系统路径 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.name.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/Users/用户名/data/hadoop/filesystem/name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Determines where on the local filesystem the DFS name node should store the name table. If this is a comma-delimited list of directories then the name table is replicated in all of the directories, for redundancy. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.data.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/Users/用户名/data/hadoop/filesystem/data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Determines where on the local filesystem an DFS data node should store its blocks. If this is a comma-delimited list of directories, then data will be stored in all named directories, typically on different devices. Directories that do not exist are ignored.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置mapred-site-xml"><a href="#配置mapred-site-xml" class="headerlink" title="配置mapred-site.xml"></a>配置mapred-site.xml</h4><p>配置mapreduce中jobtracker的地址和端口. 3.1.1版本下有这个文件, 可直接配置</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置yarn-site-xml"><a href="#配置yarn-site-xml" class="headerlink" title="配置yarn-site.xml"></a>配置yarn-site.xml</h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.env-whitelist<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="格式化HDFS"><a href="#格式化HDFS" class="headerlink" title="格式化HDFS"></a>格式化HDFS</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># /usr/local/Cellar/hadoop/3.1.1/libexec</span>bin/hdfs namenode -format<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><ul><li>sbin/start-all.sh: 启动全部</li><li>sbin/<a href="https://links.jianshu.com/go?to=http://start-dfs.sh" target="_blank" rel="noopener">start-dfs.sh</a>: 启动NameNode和DataNode, NameNode - <a href="https://links.jianshu.com/go?to=http://localhost:9870" target="_blank" rel="noopener">http://localhost:9870</a> (2.7的版本端口为50070)</li></ul><img src="/posts/674daac5/image-20210402090250977.png" alt="image-20210402090250977" style="zoom:50%;"><ul><li>sbin/<a href="https://links.jianshu.com/go?to=http://start-yarn.sh" target="_blank" rel="noopener">start-yarn.sh</a>: ResourceManager - <a href="https://links.jianshu.com/go?to=http://localhost:8088" target="_blank" rel="noopener">http://localhost:8088</a> (All Applications)</li></ul><img src="/posts/674daac5/image-20210402090416275.png" alt="image-20210402090416275" style="zoom:50%;"><h4 id="jps-可以查看进程"><a href="#jps-可以查看进程" class="headerlink" title="jps 可以查看进程"></a>jps 可以查看进程</h4><pre class="line-numbers language-bash"><code class="language-bash">jps<span class="token comment" spellcheck="true"># 34214 NameNode</span><span class="token comment" spellcheck="true"># 34313 DataNode</span><span class="token comment" spellcheck="true"># 34732 NodeManager</span><span class="token comment" spellcheck="true"># 34637 ResourceManager</span><span class="token comment" spellcheck="true"># 34446 SecondaryNameNode</span><span class="token comment" spellcheck="true"># 34799 Jps</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-安装hive"><a href="#3-安装hive" class="headerlink" title="3.安装hive"></a>3.安装hive</h2><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><pre class="line-numbers language-undefined"><code class="language-undefined">brew install hive<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">sunyun@sunyundeMacBook-Pro ~ % brew <span class="token function">install</span> hive<span class="token operator">==</span><span class="token operator">></span> Downloading https://mirrors.ustc.edu.cn/homebrew-bottles/bottles/libpng-1.6.37.big_sur.b<span class="token comment" spellcheck="true">######################################################################## 100.0%</span><span class="token operator">==</span><span class="token operator">></span> Downloading https://mirrors.ustc.edu.cn/homebrew-bottles/bottles/freetype-2.10.4.big_sur<span class="token comment" spellcheck="true">######################################################################## 100.0%</span><span class="token operator">==</span><span class="token operator">></span> Downloading https://mirrors.ustc.edu.cn/homebrew-bottles/bottles/openjdk%408-1.8.0%2B282<span class="token comment" spellcheck="true">######################################################################## 100.0%</span><span class="token operator">==</span><span class="token operator">></span> Downloading https://www.apache.org/dyn/closer.lua?path<span class="token operator">=</span>hive/hive-3.1.2/apache-hive-3.1.2<span class="token operator">==</span><span class="token operator">></span> Downloading from https://mirrors.tuna.tsinghua.edu.cn/apache/hive/hive-3.1.2/apache-hive<span class="token comment" spellcheck="true">######################################################################## 100.0%</span><span class="token operator">==</span><span class="token operator">></span> Installing dependencies <span class="token keyword">for</span> hive: libpng, freetype and openjdk@8<span class="token operator">==</span><span class="token operator">></span> Installing hive dependency: libpng<span class="token operator">==</span><span class="token operator">></span> Pouring libpng-1.6.37.big_sur.bottle.tar.gz🍺  /usr/local/Cellar/libpng/1.6.37: 27 files, 1.3MB<span class="token operator">==</span><span class="token operator">></span> Installing hive dependency: freetype<span class="token operator">==</span><span class="token operator">></span> Pouring freetype-2.10.4.big_sur.bottle.tar.gz🍺  /usr/local/Cellar/freetype/2.10.4: 64 files, 2.3MB<span class="token operator">==</span><span class="token operator">></span> Installing hive dependency: openjdk@8<span class="token operator">==</span><span class="token operator">></span> Pouring openjdk@8-1.8.0+282.big_sur.bottle.tar.gz<span class="token operator">==</span><span class="token operator">></span> CaveatsFor the system Java wrappers to <span class="token function">find</span> this JDK, symlink it with  <span class="token function">sudo</span> <span class="token function">ln</span> -sfn /usr/local/opt/openjdk@8/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-8.jdkopenjdk@8 is keg-only, <span class="token function">which</span> means it was not symlinked into /usr/local,because this is an alternate version of another formula.If you need to have openjdk@8 first <span class="token keyword">in</span> your PATH run:  <span class="token keyword">echo</span> <span class="token string">'export PATH="/usr/local/opt/openjdk@8/bin:<span class="token variable">$PATH</span>"'</span> <span class="token operator">>></span> ~/.zshrcFor compilers to <span class="token function">find</span> openjdk@8 you may need to set:  <span class="token function">export</span> CPPFLAGS<span class="token operator">=</span><span class="token string">"-I/usr/local/opt/openjdk@8/include"</span><span class="token operator">==</span><span class="token operator">></span> Summary🍺  /usr/local/Cellar/openjdk@8/1.8.0+282: 742 files, 193.0MB<span class="token operator">==</span><span class="token operator">></span> Installing hive<span class="token operator">==</span><span class="token operator">></span> CaveatsIf you want to use HCatalog with Pig, <span class="token keyword">set</span> <span class="token variable">$HCAT_HOME</span> <span class="token keyword">in</span> your profile:  <span class="token function">export</span> HCAT_HOME<span class="token operator">=</span>/usr/local/opt/hive/libexec/hcatalog<span class="token operator">==</span><span class="token operator">></span> Summary🍺  /usr/local/Cellar/hive/3.1.2_3: 1,126 files, 229.6MB, built <span class="token keyword">in</span> 10 seconds<span class="token operator">==</span><span class="token operator">></span> Caveats<span class="token operator">==</span><span class="token operator">></span> openjdk@8For the system Java wrappers to <span class="token function">find</span> this JDK, symlink it with  <span class="token function">sudo</span> <span class="token function">ln</span> -sfn /usr/local/opt/openjdk@8/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-8.jdkopenjdk@8 is keg-only, <span class="token function">which</span> means it was not symlinked into /usr/local,because this is an alternate version of another formula.If you need to have openjdk@8 first <span class="token keyword">in</span> your PATH run:  <span class="token keyword">echo</span> <span class="token string">'export PATH="/usr/local/opt/openjdk@8/bin:<span class="token variable">$PATH</span>"'</span> <span class="token operator">>></span> ~/.zshrcFor compilers to <span class="token function">find</span> openjdk@8 you may need to set:  <span class="token function">export</span> CPPFLAGS<span class="token operator">=</span><span class="token string">"-I/usr/local/opt/openjdk@8/include"</span><span class="token operator">==</span><span class="token operator">></span> hiveIf you want to use HCatalog with Pig, <span class="token keyword">set</span> <span class="token variable">$HCAT_HOME</span> <span class="token keyword">in</span> your profile:  <span class="token function">export</span> HCAT_HOME<span class="token operator">=</span>/usr/local/opt/hive/libexec/hcatalog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置Hive元数据库"><a href="#配置Hive元数据库" class="headerlink" title="配置Hive元数据库"></a>配置Hive元数据库</h3><p>Hive默认用derby作为元数据库这, 我们这里换用大家熟悉的mysql来存储元数据</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 进入数据库</span>mysql -uroot -p <span class="token comment" spellcheck="true"># 在数据库执行</span>CREATE DATABASE metastore<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># CREATE user 'hive'@'localhost' IDENTIFIED BY 'hive';</span><span class="token comment" spellcheck="true"># Unable to load authentication plugin 'caching_sha2_password'.</span>ALTER USER <span class="token string">'hive'</span>@<span class="token string">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class="token string">'hive'</span><span class="token punctuation">;</span>GRANT SELECT,INSERT,UPDATE,DELETE,ALTER,CREATE,INDEX,REFERENCES ON METASTORE.* TO <span class="token string">'hive'</span>@<span class="token string">'localhost'</span><span class="token punctuation">;</span>FLUSH PRIVILEGES<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/674daac5/image-20210402091037494.png" alt="image-20210402091037494" style="zoom:50%;"><h3 id="配置hive"><a href="#配置hive" class="headerlink" title="配置hive"></a>配置hive</h3><h4 id="配置mysql-connector-jar包"><a href="#配置mysql-connector-jar包" class="headerlink" title="配置mysql-connector jar包"></a>配置<a href="https://links.jianshu.com/go?to=https://dev.mysql.com/downloads/connector/j/" target="_blank" rel="noopener">mysql-connector</a> jar包</h4><p>下载地址: <a href="https://links.jianshu.com/go?to=https://dev.mysql.com/downloads/connector/j/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/connector/j/</a><br>将下载的文件解压, 复制</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cp</span> mysql-connector-java-5.1.44-bin.jar /usr/local/Cellar/hive/3.1.1/libexec/lib/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/posts/674daac5/image-20210402091704116.png" alt="image-20210402091704116" style="zoom:50%;"><h4 id="配置hive-site-xml"><a href="#配置hive-site-xml" class="headerlink" title="配置hive-site.xml"></a>配置hive-site.xml</h4><p>修改以下部分</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionURL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>jdbc:mysql://localhost/metastore<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionDriverName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>com.mysql.jdbc.Driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionUserName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hive<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionPassword<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hive<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.exec.local.scratchdir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/Users/sunyun/data/hive<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.querylog.location<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/Users/sunyun/data/hive/querylog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.downloaded.resources.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/Users/sunyun/data/hive/download<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.server2.logging.operation.log.location<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/Users/sunyun/data/hive/log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意3210行可能会有�最好删掉, 不然在初始化元数据库会报错</p><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">SLF4J</span><span class="token punctuation">:</span> <span class="token builtin">Class</span> <span class="token class-name">path</span> contains multiple <span class="token constant">SLF4J</span> bindings<span class="token punctuation">.</span><span class="token constant">SLF4J</span><span class="token punctuation">:</span> <span class="token constant">Found</span> binding <span class="token keyword">in</span> <span class="token punctuation">[</span>jar<span class="token symbol">:file</span><span class="token punctuation">:</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token constant">Cellar</span><span class="token operator">/</span>hive<span class="token operator">/</span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">/</span>libexec<span class="token operator">/</span>lib<span class="token operator">/</span>log4j<span class="token operator">-</span>slf4j<span class="token operator">-</span>impl<span class="token number">-2.10</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span>jar<span class="token operator">!</span><span class="token operator">/</span>org<span class="token operator">/</span>slf4j<span class="token operator">/</span>impl<span class="token operator">/</span><span class="token constant">StaticLoggerBinder</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">]</span><span class="token constant">SLF4J</span><span class="token punctuation">:</span> <span class="token constant">Found</span> binding <span class="token keyword">in</span> <span class="token punctuation">[</span>jar<span class="token symbol">:file</span><span class="token punctuation">:</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token constant">Cellar</span><span class="token operator">/</span>hadoop<span class="token operator">/</span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">/</span>libexec<span class="token operator">/</span>share<span class="token operator">/</span>hadoop<span class="token operator">/</span>common<span class="token operator">/</span>lib<span class="token operator">/</span>slf4j<span class="token operator">-</span>log4j12<span class="token number">-1.7</span><span class="token punctuation">.</span><span class="token number">25</span><span class="token punctuation">.</span>jar<span class="token operator">!</span><span class="token operator">/</span>org<span class="token operator">/</span>slf4j<span class="token operator">/</span>impl<span class="token operator">/</span><span class="token constant">StaticLoggerBinder</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">]</span><span class="token constant">SLF4J</span><span class="token punctuation">:</span> <span class="token constant">See</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>org<span class="token operator">/</span>codes<span class="token punctuation">.</span>html<span class="token comment" spellcheck="true">#multiple_bindings for an explanation.</span><span class="token constant">SLF4J</span><span class="token punctuation">:</span> <span class="token constant">Actual</span> binding is of type <span class="token punctuation">[</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span><span class="token constant">Log4jLoggerFactory</span><span class="token punctuation">]</span><span class="token builtin">Exception</span> <span class="token keyword">in</span> thread <span class="token string">"main"</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span><span class="token constant">RuntimeException</span><span class="token punctuation">:</span> com<span class="token punctuation">.</span>ctc<span class="token punctuation">.</span>wstx<span class="token punctuation">.</span>exc<span class="token punctuation">.</span><span class="token constant">WstxParsingException</span><span class="token punctuation">:</span> <span class="token constant">Illegal</span> character entity<span class="token punctuation">:</span> expansion <span class="token function">character</span> <span class="token punctuation">(</span>code <span class="token number">0x8</span> at <span class="token punctuation">[</span>row<span class="token punctuation">,</span>col<span class="token punctuation">,</span>system<span class="token operator">-</span>id<span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">3210</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token string">"file:/usr/local/Cellar/hive/3.1.1/libexec/conf/hive-site.xml"</span><span class="token punctuation">]</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span><span class="token constant">Configuration</span><span class="token punctuation">.</span><span class="token function">loadResource</span><span class="token punctuation">(</span><span class="token constant">Configuration</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">3003</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span><span class="token constant">Configuration</span><span class="token punctuation">.</span><span class="token function">loadResources</span><span class="token punctuation">(</span><span class="token constant">Configuration</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">2931</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span><span class="token constant">Configuration</span><span class="token punctuation">.</span><span class="token function">getProps</span><span class="token punctuation">(</span><span class="token constant">Configuration</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">2806</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span><span class="token constant">Configuration</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">Configuration</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1460</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hive<span class="token punctuation">.</span>conf<span class="token punctuation">.</span><span class="token constant">HiveConf</span><span class="token punctuation">.</span><span class="token function">getVar</span><span class="token punctuation">(</span><span class="token constant">HiveConf</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">4990</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hive<span class="token punctuation">.</span>conf<span class="token punctuation">.</span><span class="token constant">HiveConf</span><span class="token punctuation">.</span><span class="token function">getVar</span><span class="token punctuation">(</span><span class="token constant">HiveConf</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">5063</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hive<span class="token punctuation">.</span>conf<span class="token punctuation">.</span><span class="token constant">HiveConf</span><span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token constant">HiveConf</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">5150</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hive<span class="token punctuation">.</span>conf<span class="token punctuation">.</span><span class="token constant">HiveConf</span><span class="token punctuation">.</span><span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span><span class="token constant">HiveConf</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">5098</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hive<span class="token punctuation">.</span>beeline<span class="token punctuation">.</span><span class="token constant">HiveSchemaTool</span><span class="token punctuation">.</span><span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span><span class="token constant">HiveSchemaTool</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">96</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hive<span class="token punctuation">.</span>beeline<span class="token punctuation">.</span><span class="token constant">HiveSchemaTool</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token constant">HiveSchemaTool</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1473</span><span class="token punctuation">)</span>    at sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span><span class="token constant">NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke0</span><span class="token punctuation">(</span><span class="token constant">Native</span> <span class="token builtin">Method</span><span class="token punctuation">)</span>    at sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span><span class="token constant">NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token constant">NativeMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">62</span><span class="token punctuation">)</span>    at sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span><span class="token constant">DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token constant">DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">43</span><span class="token punctuation">)</span>    at java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span><span class="token builtin">Method</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token builtin">Method</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">498</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token constant">RunJar</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token constant">RunJar</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">318</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token constant">RunJar</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token constant">RunJar</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">232</span><span class="token punctuation">)</span><span class="token constant">Caused</span> by<span class="token punctuation">:</span> com<span class="token punctuation">.</span>ctc<span class="token punctuation">.</span>wstx<span class="token punctuation">.</span>exc<span class="token punctuation">.</span><span class="token constant">WstxParsingException</span><span class="token punctuation">:</span> <span class="token constant">Illegal</span> character entity<span class="token punctuation">:</span> expansion <span class="token function">character</span> <span class="token punctuation">(</span>code <span class="token number">0x8</span> at <span class="token punctuation">[</span>row<span class="token punctuation">,</span>col<span class="token punctuation">,</span>system<span class="token operator">-</span>id<span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">3210</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token string">"file:/usr/local/Cellar/hive/3.1.1/libexec/conf/hive-site.xml"</span><span class="token punctuation">]</span>    at com<span class="token punctuation">.</span>ctc<span class="token punctuation">.</span>wstx<span class="token punctuation">.</span>sr<span class="token punctuation">.</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span><span class="token function">constructWfcException</span><span class="token punctuation">(</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">621</span><span class="token punctuation">)</span>    at com<span class="token punctuation">.</span>ctc<span class="token punctuation">.</span>wstx<span class="token punctuation">.</span>sr<span class="token punctuation">.</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span><span class="token function">throwParseError</span><span class="token punctuation">(</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">491</span><span class="token punctuation">)</span>    at com<span class="token punctuation">.</span>ctc<span class="token punctuation">.</span>wstx<span class="token punctuation">.</span>sr<span class="token punctuation">.</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span><span class="token function">reportIllegalChar</span><span class="token punctuation">(</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">2456</span><span class="token punctuation">)</span>    at com<span class="token punctuation">.</span>ctc<span class="token punctuation">.</span>wstx<span class="token punctuation">.</span>sr<span class="token punctuation">.</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span><span class="token function">validateChar</span><span class="token punctuation">(</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">2403</span><span class="token punctuation">)</span>    at com<span class="token punctuation">.</span>ctc<span class="token punctuation">.</span>wstx<span class="token punctuation">.</span>sr<span class="token punctuation">.</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span><span class="token function">resolveCharEnt</span><span class="token punctuation">(</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">2369</span><span class="token punctuation">)</span>    at com<span class="token punctuation">.</span>ctc<span class="token punctuation">.</span>wstx<span class="token punctuation">.</span>sr<span class="token punctuation">.</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span><span class="token function">fullyResolveEntity</span><span class="token punctuation">(</span><span class="token constant">StreamScanner</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1515</span><span class="token punctuation">)</span>    at com<span class="token punctuation">.</span>ctc<span class="token punctuation">.</span>wstx<span class="token punctuation">.</span>sr<span class="token punctuation">.</span><span class="token constant">BasicStreamReader</span><span class="token punctuation">.</span><span class="token function">nextFromTree</span><span class="token punctuation">(</span><span class="token constant">BasicStreamReader</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">2828</span><span class="token punctuation">)</span>    at com<span class="token punctuation">.</span>ctc<span class="token punctuation">.</span>wstx<span class="token punctuation">.</span>sr<span class="token punctuation">.</span><span class="token constant">BasicStreamReader</span><span class="token punctuation">.</span><span class="token keyword">next</span><span class="token punctuation">(</span><span class="token constant">BasicStreamReader</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1123</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span><span class="token constant">Configuration</span><span class="token variable">$Parser</span><span class="token punctuation">.</span><span class="token function">parseNext</span><span class="token punctuation">(</span><span class="token constant">Configuration</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">3257</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span><span class="token constant">Configuration</span><span class="token variable">$Parser</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">Configuration</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">3063</span><span class="token punctuation">)</span>    at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span><span class="token constant">Configuration</span><span class="token punctuation">.</span><span class="token function">loadResource</span><span class="token punctuation">(</span><span class="token constant">Configuration</span><span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">2986</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">15</span> more<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="初始化元数据库"><a href="#初始化元数据库" class="headerlink" title="初始化元数据库"></a>初始化元数据库</h4><pre class="line-numbers language-undefined"><code class="language-undefined">schematool -initSchema -dbType mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>现在进入数据库metastore, 可以看到相关表(此处只做部分表展示)</p><pre class="line-numbers language-ruby"><code class="language-ruby">mysql<span class="token operator">></span> show tables<span class="token punctuation">;</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> <span class="token constant">Tables_in_metastore</span>           <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> <span class="token constant">AUX_TABLE</span>                     <span class="token operator">|</span><span class="token operator">|</span> <span class="token constant">BUCKETING_COLS</span>                <span class="token operator">|</span><span class="token operator">|</span> <span class="token constant">CDS</span>                           <span class="token operator">|</span><span class="token operator">|</span> <span class="token constant">COLUMNS_V2</span>                    <span class="token operator">|</span><span class="token operator">|</span> <span class="token constant">COMPACTION_QUEUE</span>              <span class="token operator">|</span><span class="token operator">|</span> <span class="token constant">COMPLETED_COMPACTIONS</span>         <span class="token operator">|</span><span class="token operator">|</span> <span class="token constant">COMPLETED_TXN_COMPONENTS</span>      <span class="token operator">|</span><span class="token operator">|</span> <span class="token constant">CTLGS</span>                         <span class="token operator">|</span><span class="token operator">|</span> <span class="token constant">DATABASE_PARAMS</span>               <span class="token operator">|</span><span class="token operator">|</span> <span class="token constant">DB_PRIVS</span>                      <span class="token operator">|</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="运行Hive"><a href="#运行Hive" class="headerlink" title="运行Hive"></a>运行Hive</h4><p><img src="https://upload-images.jianshu.io/upload_images/14001658-4022990dd0725b5a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200" alt="img"></p><h2 id="4-安装spark"><a href="#4-安装spark" class="headerlink" title="4.安装spark"></a>4.安装spark</h2><pre class="line-numbers language-undefined"><code class="language-undefined">brew install apache-spark<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">sunyun@sunyundeMacBook-Pro bin % brew <span class="token function">install</span> apache-spark<span class="token operator">==</span><span class="token operator">></span> Downloading https://mirrors.ustc.edu.cn/homebrew-bottles/bottles/openjdk%4011-11.0.9.big<span class="token operator">==</span><span class="token operator">></span> Downloading from https://d29vzk4ow07wi7.cloudfront.net/610ed0bd964812cdce0f6e1a4b8c06fd8<span class="token comment" spellcheck="true">######################################################################## 100.0%</span><span class="token operator">==</span><span class="token operator">></span> Downloading https://www.apache.org/dyn/closer.lua?path<span class="token operator">=</span>spark/spark-3.0.1/spark-3.0.1-bin<span class="token operator">==</span><span class="token operator">></span> Downloading from https://mirrors.tuna.tsinghua.edu.cn/apache/spark/spark-3.0.1/spark-3.0<span class="token comment" spellcheck="true">##O#- #                                                                       </span>curl: <span class="token punctuation">(</span>22<span class="token punctuation">)</span> The requested URL returned error: 404 Trying a mirror<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Downloading https://archive.apache.org/dist/spark/spark-3.0.1/spark-3.0.1-bin-hadoop3.2.<span class="token comment" spellcheck="true">######################################################################## 100.0%</span><span class="token operator">==</span><span class="token operator">></span> Installing dependencies <span class="token keyword">for</span> apache-spark: openjdk@11<span class="token operator">==</span><span class="token operator">></span> Installing apache-spark dependency: openjdk@11<span class="token operator">==</span><span class="token operator">></span> Pouring openjdk@11-11.0.9.big_sur.bottle.tar.gz<span class="token operator">==</span><span class="token operator">></span> CaveatsFor the system Java wrappers to <span class="token function">find</span> this JDK, symlink it with  <span class="token function">sudo</span> <span class="token function">ln</span> -sfn /usr/local/opt/openjdk@11/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-11.jdkopenjdk@11 is keg-only, <span class="token function">which</span> means it was not symlinked into /usr/local,because this is an alternate version of another formula.If you need to have openjdk@11 first <span class="token keyword">in</span> your PATH run:  <span class="token keyword">echo</span> <span class="token string">'export PATH="/usr/local/opt/openjdk@11/bin:<span class="token variable">$PATH</span>"'</span> <span class="token operator">>></span> ~/.zshrcFor compilers to <span class="token function">find</span> openjdk@11 you may need to set:  <span class="token function">export</span> CPPFLAGS<span class="token operator">=</span><span class="token string">"-I/usr/local/opt/openjdk@11/include"</span><span class="token operator">==</span><span class="token operator">></span> Summary🍺  /usr/local/Cellar/openjdk@11/11.0.9: 653 files, 297.2MB<span class="token operator">==</span><span class="token operator">></span> Installing apache-spark🍺  /usr/local/Cellar/apache-spark/3.0.1: 1,191 files, 237.4MB, built <span class="token keyword">in</span> 10 seconds<span class="token operator">==</span><span class="token operator">></span> Caveats<span class="token operator">==</span><span class="token operator">></span> openjdk@11For the system Java wrappers to <span class="token function">find</span> this JDK, symlink it with  <span class="token function">sudo</span> <span class="token function">ln</span> -sfn /usr/local/opt/openjdk@11/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-11.jdkopenjdk@11 is keg-only, <span class="token function">which</span> means it was not symlinked into /usr/local,because this is an alternate version of another formula.If you need to have openjdk@11 first <span class="token keyword">in</span> your PATH run:  <span class="token keyword">echo</span> <span class="token string">'export PATH="/usr/local/opt/openjdk@11/bin:<span class="token variable">$PATH</span>"'</span> <span class="token operator">>></span> ~/.zshrcFor compilers to <span class="token function">find</span> openjdk@11 you may need to set:  <span class="token function">export</span> CPPFLAGS<span class="token operator">=</span><span class="token string">"-I/usr/local/opt/openjdk@11/include"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一般直接安装就好了, 然后直接运行<code>spark-shell</code></p><img src="/posts/674daac5/image-20210402094239206.png" alt="image-20210402094239206" style="zoom:50%;"><p>遗留问题：配置Hive有问题</p><p>参考：<a href="https://www.jianshu.com/p/24cc1bb634ed" target="_blank" rel="noopener">https://www.jianshu.com/p/24cc1bb634ed</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>软件工程学习通分组任务</title>
      <link href="posts/f5036055/"/>
      <url>posts/f5036055/</url>
      
        <content type="html"><![CDATA[<h1 id="软件工程学习通分组任务"><a href="#软件工程学习通分组任务" class="headerlink" title="软件工程学习通分组任务"></a>软件工程学习通分组任务</h1><h2 id="第一章重点｜软件工程方法学"><a href="#第一章重点｜软件工程方法学" class="headerlink" title="第一章重点｜软件工程方法学"></a>第一章重点｜软件工程方法学</h2><blockquote><p>截止时间: 04-01 10:55</p></blockquote><p>1.2.3 软件工程方法学 </p><p>软件工程包括技术和管理两方面的内容。</p><p>管理：通过计划、组织和控制等一系列活动，合理地配置和使用各种资源，以达到既定目标的过程。（详见第13章 软件项目管理问题）</p><p>技术(软件工程方法学)：通常把在软件生命周期全过程中使用的一整套技术方法的集合称为方法学(methodology)，也称为范型(paradigm)。</p><p>软件工程方法学3要素：</p><p>方法：是完成软件开发的各项任务的技术方法，回答“怎样做”的问题；</p><p>工具：是为运用方法而提供的自动的或半自动的软件工程支撑环境；如，CASE(Computer-Aided Software Engineering )工具</p><p>过程：需要完成的一系列任务的框架，它规定了完成各项任务的工作步骤。</p><p>软件工程方法学：</p><p>\1. 传统方法学(生命周期方法学或结构化范型)——强调自顶向下</p><p>采用结构化技术来完成软件；</p><p>划分为若干个阶段，然后顺序地完成每个阶段的任务；每个阶段的任务相对独立，而且比较简单，降低了整个软件开发工程的困难程度；</p><p>前一个阶段是后一个阶段的前提和基础，而后一阶段提出的解法更具体，细节更多；</p><p>每个阶段结束前必须从技术和管理两方面对这个阶段的开发成果进行严格的检查，通过之后这个阶段才算结束；保证质量，提高可维护性；</p><p>缺点：</p><p>当软件规模庞大，或者对软件的需求是模糊的或会随时间变化而变化的时候，使用传统方法学开发软件往往不成功</p><p>使用传统方法学开发出的软件，维护起来仍然很困难。</p><p>数据与操作相分离</p><p>\2. 面向对象方法学——强调主动地多次反复迭代</p><p>面向对象方法：把数据和行为看成同等重要，它是一种</p><p>以数据为主线，把数据和对数据的操作紧密地结合起来</p><p>的方法。</p><p>面向对象方法学4个要点：</p><p>对象(object)：融合了数据及在数据上的操作行为。</p><p>类(class)：类是对具有相同数据和相同操作的一组相似对象的定义。</p><p>继承：按照父类与子类的关系，把若干个相关类组成一个层次结构的系统。</p><p>消息：对象彼此间仅能通过发送消息互相联系。</p><p>面向对象方法学的优点：</p><p>面向对象方法学的尽量模拟人类习惯的思维方式，使开发软件的方法与过程尽可能接近人类认识世界解决问题的方法与过程。</p><p>面向对象方法学开发软件的过程，是一个主动地多次反复迭代的演化过程，保证了在各项开发活动之间的平滑过渡。</p><p>促进了软件重用。最终的软件产品由许多较小的、基本上独立的对象组成，每个对象相当于一个微型程序，而且大多数对象都与现实世界中的实体相对应，降低了复杂性，提高了可理解性，简化了开发和维护工作。</p><p><strong>小组学习讨论题：</strong></p><ol><li>传统方法学与面向对象方法学的概念、特点、区别与应用。</li><li>分别列举1-2个传统方法学和面向对象方法学实例。</li><li>当下有哪些常用软件工程方法，并列举1-2个实例。</li></ol><h2 id="课外阅读与文档书写：《系统规模和目标报告书》"><a href="#课外阅读与文档书写：《系统规模和目标报告书》" class="headerlink" title="课外阅读与文档书写：《系统规模和目标报告书》"></a>课外阅读与文档书写：《系统规模和目标报告书》</h2><blockquote><p>截止时间: 03-31 21:55</p></blockquote><p>查阅2-3个正规《系统规模和目标报告书》样本，并于第5周完成小组项目规模和目标报告书。</p><h2 id="软件工程文档学习"><a href="#软件工程文档学习" class="headerlink" title="软件工程文档学习"></a>软件工程文档学习</h2><blockquote><p>截止时间: 04-09 21:54</p></blockquote><p>1.国内外软件工程标准及网站资料学习</p><p>2.软件生命周期各阶段中的文件编制：测试分析报告（第12组）</p><h2 id="系统流程图与数据流图分别是什么及其区别？"><a href="#系统流程图与数据流图分别是什么及其区别？" class="headerlink" title="系统流程图与数据流图分别是什么及其区别？"></a>系统流程图与数据流图分别是什么及其区别？</h2><blockquote><p>截止时间: 04-09 </p></blockquote><h2 id="实验小组大作业1｜软件规格说明书"><a href="#实验小组大作业1｜软件规格说明书" class="headerlink" title="实验小组大作业1｜软件规格说明书"></a>实验小组大作业1｜软件规格说明书</h2><blockquote><p>截止时间: 04-22 09:56</p></blockquote><p>请依照国家（际）软件需求规格说明标准文档规范，结合本组选题，完成本组项目需求规格说明书文档。(英文版本有加分)</p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux上课笔记</title>
      <link href="posts/e7cb32f6/"/>
      <url>posts/e7cb32f6/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux期末复习"><a href="#Linux期末复习" class="headerlink" title="Linux期末复习"></a>Linux期末复习</h1><p>题型：选择、填空、判断、匹配、改错</p><h2 id="1-代码改错题"><a href="#1-代码改错题" class="headerlink" title="1.代码改错题"></a>1.代码改错题</h2><h3 id="1-1找出以下代码中的错误，即显示所有以字符a开头的文件的名称，并且我们对这些文件有阅读权限"><a href="#1-1找出以下代码中的错误，即显示所有以字符a开头的文件的名称，并且我们对这些文件有阅读权限" class="headerlink" title="1.1找出以下代码中的错误，即显示所有以字符a开头的文件的名称，并且我们对这些文件有阅读权限"></a>1.1找出以下代码中的错误，即显示所有以字符a开头的文件的名称，并且我们对这些文件有阅读权限</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">for</span> f <span class="token keyword">in</span> a*<span class="token keyword">do</span>    <span class="token keyword">if</span> <span class="token function">test</span> –d <span class="token variable">$f</span> –a <span class="token function">test</span> <span class="token operator">!</span> –r <span class="token variable">$f</span>    <span class="token keyword">then</span>        <span class="token keyword">echo</span> <span class="token variable">$f</span>    <span class="token keyword">fi</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改：<strong>把-d改成-f 逻辑非去掉</strong></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#! /bin/bash</span><span class="token keyword">for</span> f <span class="token keyword">in</span> a*<span class="token keyword">do</span>     <span class="token comment" spellcheck="true"># if test –f $f –a –r $f</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> -f <span class="token variable">$f</span> -a -r <span class="token variable">$f</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        <span class="token keyword">echo</span> <span class="token variable">$f</span>    <span class="token keyword">fi</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2找出以下代码中的错误，该代码运行时无限地要求用户输入一个文件名。该代码将不断询问文件名，直到有效的文件名被输入。"><a href="#1-2找出以下代码中的错误，该代码运行时无限地要求用户输入一个文件名。该代码将不断询问文件名，直到有效的文件名被输入。" class="headerlink" title="1.2找出以下代码中的错误，该代码运行时无限地要求用户输入一个文件名。该代码将不断询问文件名，直到有效的文件名被输入。"></a>1.2找出以下代码中的错误，该代码运行时无限地要求用户输入一个文件名。该代码将不断询问文件名，直到有效的文件名被输入。</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">echo</span> –n <span class="token string">"Enter a file name"</span><span class="token function">read</span> t<span class="token keyword">while</span> <span class="token function">test</span> –f <span class="token variable">$f</span><span class="token keyword">do</span>    <span class="token keyword">echo</span> <span class="token string">"<span class="token variable">$f</span> is not a file. Try again"</span>    <span class="token function">wait</span> 60<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">echo</span> –n <span class="token string">"Enter a file name"</span><span class="token comment" spellcheck="true">#echo -n 不换行输出</span><span class="token comment" spellcheck="true">#参数-n的作用是不换行，echo默认是换行</span><span class="token function">read</span> t <span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -f <span class="token variable">$t</span> <span class="token punctuation">]</span><span class="token comment" spellcheck="true">#while test –f $t</span><span class="token keyword">do</span>    <span class="token keyword">echo</span> <span class="token string">"<span class="token variable">$t</span> is not a file. Try again"</span>    <span class="token function">wait</span> 60    <span class="token function">read</span> t<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3纠正以下代码中的错误：代码用于计算当前目录中的文件和目录的数量。"><a href="#1-3纠正以下代码中的错误：代码用于计算当前目录中的文件和目录的数量。" class="headerlink" title="1.3纠正以下代码中的错误：代码用于计算当前目录中的文件和目录的数量。"></a>1.3纠正以下代码中的错误：代码用于计算当前目录中的文件和目录的数量。</h3><pre class="line-numbers language-bash"><code class="language-bash">x<span class="token operator">=</span>0y<span class="token operator">=</span>0<span class="token keyword">for</span> k <span class="token keyword">in</span> *    <span class="token keyword">do</span>        <span class="token keyword">if</span> <span class="token function">test</span> –f <span class="token variable">$z</span>        <span class="token keyword">then</span>            <span class="token variable"><span class="token punctuation">((</span>x<span class="token operator">=</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">))</span></span>        <span class="token keyword">fi</span>        <span class="token keyword">if</span> <span class="token function">test</span> –d <span class="token variable">$z</span>        <span class="token keyword">then</span>            <span class="token punctuation">[</span><span class="token punctuation">[</span>y<span class="token operator">=</span>y+1<span class="token punctuation">]</span><span class="token punctuation">]</span>        <span class="token keyword">fi</span>    <span class="token keyword">done</span><span class="token keyword">echo</span> <span class="token string">"The number of files are <span class="token variable">$x</span> anddirectories are <span class="token variable">$y</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改：**$z改$k  [[]] 改 (()) 或者let**</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>x<span class="token operator">=</span>0y<span class="token operator">=</span>0<span class="token keyword">for</span> k <span class="token keyword">in</span> *    <span class="token keyword">do</span>        <span class="token comment" spellcheck="true">#if test –f $k</span>        <span class="token keyword">if</span> <span class="token punctuation">[</span> -f <span class="token variable">$k</span> <span class="token punctuation">]</span>        <span class="token keyword">then</span>            <span class="token variable"><span class="token punctuation">((</span>x<span class="token operator">=</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">))</span></span>        <span class="token keyword">fi</span>        <span class="token comment" spellcheck="true">#if test –d $k</span>        <span class="token keyword">if</span> <span class="token punctuation">[</span> -d <span class="token variable">$k</span> <span class="token punctuation">]</span>        <span class="token keyword">then</span>        <span class="token comment" spellcheck="true">#(()) 或者 let</span>            <span class="token variable"><span class="token punctuation">((</span>y<span class="token operator">=</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">))</span></span>         <span class="token keyword">fi</span>    <span class="token keyword">done</span><span class="token keyword">echo</span> <span class="token string">"The number of files are <span class="token variable">$x</span> anddirectories are <span class="token variable">$y</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-判断题"><a href="#2-判断题" class="headerlink" title="2.判断题"></a>2.判断题</h2><h3 id="2-1作业判断题"><a href="#2-1作业判断题" class="headerlink" title="2.1作业判断题"></a>2.1作业判断题</h3><pre class="line-numbers language-markdown"><code class="language-markdown">1 shell脚本是一个由Unix命令和某些内置函数组成的集合。 对✅2 expr命令可以对整数进行算术运算。 对✅3 使用bc命令，我们进入计算器的模式。对✅4 units命令用于将一个标准刻度的数值转换为另一个刻度。 对✅5 我们不能在一条语句中执行一个以上的赋值。 错❌6 $*代表命令行参数的数量。命令行参数的数量。 对✅ 7 使用tr命令，我们不仅可以翻译字符，还可以删除匹配的 字符。 对✅8 我们可以用egrep工具指定一个以上的模式进行搜索。 对✅9 我们不能在shell脚本中使用逻辑运算符。 错❌10 当模式匹配时，'^'表示开始，'$'表示结束。  对✅<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markdown"><code class="language-markdown">1 默认情况下，sed的打印选项总是打开的。2 要选择文件的最后一行，我们使用^选项。 错❌ 应该用$3 sed的q选项是为了显示寻址行后退出。 4 w命令用于将选定的行写入单独的文件中。5 在sed中，我们不能打印一个文件的内容，然后再打印另一个文件的内容 错❌。6 l选项用于打印行号和文件内容。7 vi编辑器有两种操作模式。 错❌ 有三种8 我们可以在vi编辑器中按字符e或E从命令模式切换到插入模式。 错❌ 9 :w命令用于写入文件并继续编辑。 对✅10 vi中的$命令是用于将光标移动到行的最后一个字符。对✅13 要删除vi中的一行，可以使用dd命令。  对✅14 :set nu命令用于在显示文件内容时删除行号。  错❌  是显示行号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markdown"><code class="language-markdown">3.1ls命令显示的的文件和目录列表默认是按字母顺序排列。 true    3.2与ls命令一起使用的选项-R，可以按相反的顺序查看文件和目录的名称。    True3.3我们使用mkdir命令一次只能创建一个目录。     True3.4cd命令，如果不加任何参数，就会把我们带到主目录。True    3.5使用touch命令，我们只能改变文件的时间戳，但不能创建文件。 False    3.6用cat命令创建文件时，我们需要用Ctrl+d来指定文件的结束。    True3.7使用rmdir命令，我们也可以删除非空目录。False3.8如果我们用cp命令使用-i选项，如果目标文件已经存在，它会在覆盖之前提示我们。 True3.9cp命令是用来复制文件的，我们不能用它来复制整个目录及其文件和子目录。    False3.10我们可以用一条rm命令删除多个文件。    True3.11使用rm命令，即使我们没有写权限，也可以强行删除一个文件。    True3.12使用mv命令，我们可以将一个文件从一个目录移动到另一个目录，但不能重命名它。False3.13硬链接要在当前目录结构内创建。    False3.14我们可以通过Ctrl-d退出Unix系统。 True3.15通过cal命令，我们无法看到上个月的日历。    False3.16通过finger命令，可以看到用户的邮件状态。    True3.17通过uname命令，可以了解操作系统的版本和版本号。    True3.18通配符'?'代表一个字符。    True3.19bc或基本计算器命令可以用来求一个数字的平方根。True    unlink命令不能删除符号链接。    Flase<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-填空选择（知识点总结）"><a href="#3-填空选择（知识点总结）" class="headerlink" title="3.填空选择（知识点总结）"></a>3.填空选择（知识点总结）</h2><h3 id="3-1-通过3个方法进入home目录"><a href="#3-1-通过3个方法进入home目录" class="headerlink" title="3.1.通过3个方法进入home目录"></a>3.1.通过3个方法进入home目录</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> ~<span class="token function">cd</span><span class="token function">cd</span> <span class="token variable">$HOME</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-1-2空行怎么表示"><a href="#3-1-2空行怎么表示" class="headerlink" title="3.1.2空行怎么表示"></a>3.1.2空行怎么表示</h3><p><code>^$</code></p><h3 id="3-1-3-vi编辑器"><a href="#3-1-3-vi编辑器" class="headerlink" title="3.1.3 vi编辑器"></a>3.1.3 vi编辑器</h3><p>在普通模式下使用下面的键将进入插入模式，并可以从相应的位置开始输入</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>i</code></td><td>在当前光标处进行编辑</td></tr><tr><td><code>I</code></td><td>在行首插入</td></tr><tr><td><code>A</code></td><td>在行末插入</td></tr><tr><td><code>a</code></td><td>在光标后插入编辑</td></tr><tr><td><code>o</code></td><td>在当前行后插入一个新行</td></tr><tr><td><code>O</code></td><td>在当前行前插入一个新行</td></tr><tr><td><code>cw</code></td><td>替换从光标所在位置后到一个单词结尾的字符</td></tr></tbody></table><h3 id="3-1-4-sed"><a href="#3-1-4-sed" class="headerlink" title="3.1.4 sed"></a>3.1.4 sed</h3><h3 id="3-1-5-grep"><a href="#3-1-5-grep" class="headerlink" title="3.1.5 grep"></a>3.1.5 grep</h3><h3 id="3-1-6-重定向"><a href="#3-1-6-重定向" class="headerlink" title="3.1.6 重定向"></a>3.1.6 重定向</h3><img src="/posts/e7cb32f6/image-20210629102450006.png" alt="重定向" style="zoom:50%;"><p>命令 &gt;&gt; 文件 2&gt;&amp;1 和 命令 &amp;&gt;&gt;文件 两个命令作用相同<br>系统有个常见用法 ls &amp;&gt;/dev/null 正确输出或错误输出结果都不要。（null可以理解为黑洞或垃圾站）<br>命令&gt;&gt;文件1 2&gt;&gt;文件2 正确日志和错误日志分开保存</p><p>例：nohup java -jar /usr/sbin/lb-agent.jar &gt;&gt;/var/log/lb-agent.log 2&gt;&amp;1 &amp;<br>将jar执行的结果写入到lb-agent.log中<br>在命令最后加上&amp;符号，表示让这个进程到后台去执行，这样立刻返回到提示符状态，我们可以接着做下面的事。如：command &amp;。<br>这种“后台”进程在shell一直打开的情况下是没有问题的，如果我们关了shell窗口甚至退出ssh登录或vnc登录，那么进程自动就结束了。所以如果想退出窗口乃至退出登录仍然保持程序运行，再加上nohup，形如：nohup command 1&gt;output 2&gt;&amp;1 &amp;</p><h3 id="3-1-7-Linux的基本命令"><a href="#3-1-7-Linux的基本命令" class="headerlink" title="3.1.7 Linux的基本命令"></a>3.1.7 Linux的基本命令</h3><p>看黄大春给的LinuxCommandLineCheatSheet.pdf 或者网上百度</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">pwd</span> 当前目录绝对路径<span class="token function">cd</span> <span class="token function">ls</span> -l -a <span class="token function">touch</span> 创建文件<span class="token function">mkdir</span> 创建目录<span class="token function">rmdir</span> 删除空目录<span class="token function">cp</span> 复制文件 <span class="token function">mv</span>  移动文件 重命名文件<span class="token function">rm</span> 删除 -rf 强制删除<span class="token function">wc</span> -l 统计行数  可能会考 <span class="token function">du</span> 目录 文件占用数量<span class="token function">df</span>  磁盘使用情况<span class="token function">file</span> 查询文件类型<span class="token function">cat</span><span class="token function">less</span> 回卷显示。按下回车键Enter读区下一行内容 q退出<span class="token function">more</span> 分页显示 <span class="token function">head</span> 文件头部<span class="token function">tail</span> 文件尾巴<span class="token function">date</span>  当前时间<span class="token function">cal</span>  日历<span class="token keyword">echo</span> 输出<span class="token function">uname</span> 系统相关信息<span class="token function">hostname</span> 计算机主机名<span class="token function">tar</span> -xvf -x解压 -v显示过程 -f使用归档文件，位置在最后 -z通过gzip过滤文档<span class="token function">tar</span> -cvf -归档<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">变量赋值的时候不能有空格 x<span class="token operator">=</span>1 y<span class="token operator">=</span><span class="token string">"Hello Linux"</span> 有空格的变量要用“”取x变量值 <span class="token keyword">echo</span> <span class="token variable">$x</span>  <span class="token keyword">echo</span> <span class="token variable">$y</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-1-8正则表达式"><a href="#3-1-8正则表达式" class="headerlink" title="3.1.8正则表达式"></a>3.1.8正则表达式</h3><img src="/posts/e7cb32f6/image-20210629103332123.png" alt="image-20210629103332123" style="zoom:50%;"><img src="/posts/e7cb32f6/image-20210629103359149.png" alt="image-20210629103359149" style="zoom:50%;"><h3 id="3-1-9-预定义变量"><a href="#3-1-9-预定义变量" class="headerlink" title="3.1.9 预定义变量"></a>3.1.9 预定义变量</h3><p><code>$?</code> 命令执行后的返回状态 0表示结果正确 非0表示有错误</p><p><code>$0</code> 当前执行的进程名 ⚠️ 是一个特殊变量 不是位置参数</p><h3 id="3-1-10-数字比较"><a href="#3-1-10-数字比较" class="headerlink" title="3.1.10 数字比较"></a>3.1.10 数字比较</h3><pre class="line-numbers language-bash"><code class="language-bash">-eq  <span class="token operator">=</span>-ge  <span class="token operator">>=</span>-le  <span class="token operator">&lt;=</span>-ne  <span class="token operator">!=</span>-gt  <span class="token operator">></span>-lt  <span class="token operator">&lt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-1-11-逻辑测试"><a href="#3-1-11-逻辑测试" class="headerlink" title="3.1.11 逻辑测试"></a>3.1.11 逻辑测试</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">!</span> 逻辑非-a 逻辑与-o 逻辑或<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-1-12文件操作测试"><a href="#3-1-12文件操作测试" class="headerlink" title="3.1.12文件操作测试"></a>3.1.12文件操作测试</h3><pre class="line-numbers language-bash"><code class="language-bash">-d  目录-f  文件-r  可读-w  可写-s  长度非0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-1-13-权限"><a href="#3-1-13-权限" class="headerlink" title="3.1.13 权限"></a>3.1.13 权限</h3><pre class="line-numbers language-bash"><code class="language-bash">drwxr-xr-x 目录-rwxrwxrwx 文件 777 <span class="token function">chmod</span> 777 fileName<span class="token function">chmod</span> +x fileName<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2作业填空题"><a href="#3-2作业填空题" class="headerlink" title="3.2作业填空题"></a>3.2作业填空题</h3><pre class="line-numbers language-markdown"><code class="language-markdown">1 shell脚本中的变量必须在前面加上（$）。2 在shell脚本中，注释的前面是符号（#）。3 let命令可以用（ (()) ）代替。4 要从计算器模式中出来，我们使用（quit）命令。5 用于对一个数字进行因式分解的命令是（expr）。6 在shell脚本中的乘法符号前面必须有一个（\），否则它将被当作一个通配符来处理。7 在echo命令中用来避免输出换行符的选项是（-n）。8 预定义的变量有两类。（） 和（）。9 用来计算文件中的行数、字数和字符数的命令是（wc）。10 用于在文件中搜索指定模式的字符串的实用程序是（grep）。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markdown"><code class="language-markdown">3.1使用ls命令查看隐藏文件的选项是  ls -a    。3.2用mkdir命令创建指定权限的目录时，使用的选项是<span class="token italic"><span class="token punctuation">_</span> mkdir -m    。3.3使用cd命令，我们可以给出绝对以及<span class="token punctuation">_</span></span> 相对    路径名。3.4用于知道我们当前工作目录的命令是<span class="token italic"><span class="token punctuation">_</span> pwd    。3.5touch命令中用于改变修改或访问时间的时间表达式格式是<span class="token punctuation">_</span></span> touch -m    。3.6rmdir命令用于删除空父目录的选项是<span class="token italic"><span class="token punctuation">_</span> -p    。3.7rm命令使用的 -r    选项用于递归删除指定目录的所有文件和子目录。3.8用于为文件建立链接的命令是<span class="token punctuation">_</span></span> ln    。3.9有两种类型的文件链接<span class="token italic"><span class="token punctuation">_</span> 软链接    和<span class="token punctuation">_</span></span> 硬链接    。3.10与date命令一起使用的只显示时间的选项是<span class="token italic"><span class="token punctuation">_</span> +%r    。3.11bc命令中用于查找自然对数的函数是 l()    。3.12用于显示当年日历的命令是<span class="token punctuation">_</span></span> cal    。3.13用于显示登录用户信息的命令，包括主页目录、登录shell、邮件状态、电话号码等是 finger。3.14用ls命令显示文件的inode数的选项是  -n         。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件工程学习通讨论</title>
      <link href="posts/183e0644/"/>
      <url>posts/183e0644/</url>
      
        <content type="html"><![CDATA[<h1 id="软件工程学习通课后讨论"><a href="#软件工程学习通课后讨论" class="headerlink" title="软件工程学习通课后讨论"></a>软件工程学习通课后讨论</h1><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="1-软件生命期中各阶段的输入（从哪获得？）与输出（送去哪儿？）分别是什么？"><a href="#1-软件生命期中各阶段的输入（从哪获得？）与输出（送去哪儿？）分别是什么？" class="headerlink" title="1.软件生命期中各阶段的输入（从哪获得？）与输出（送去哪儿？）分别是什么？"></a>1.软件生命期中各阶段的输入（从哪获得？）与输出（送去哪儿？）分别是什么？</h3><blockquote><p>三个时期八个阶段  软件定义、软件开发、运行维护</p></blockquote><table><thead><tr><th>时期</th><th align="center">输入</th><th align="right">输出</th></tr></thead><tbody><tr><td>问题定义</td><td align="center">对客户的访问调查</td><td align="right">关于问题性质、工程目标的调查报告</td></tr><tr><td>可行性研究</td><td align="center">上一阶段的调查报告</td><td align="right">工程是否继续进行</td></tr><tr><td>需求分析</td><td align="center">用户确认的系统逻辑模型</td><td align="right">规格说明书</td></tr><tr><td>总体设计</td><td align="center">软件工程师设计的方案</td><td align="right">解决问题的策略及目标系统中应包含的程序</td></tr><tr><td>详细设计</td><td align="center">总体设计的结果</td><td align="right">详细的算法和数据结构</td></tr><tr><td>编码和单元测试</td><td align="center">目标系统的性质和实际环境</td><td align="right">用选定语言书写的程序</td></tr><tr><td>综合测试</td><td align="center">用户参与测试的结果</td><td align="right">测试结果文档</td></tr><tr><td>软件维护</td><td align="center">软件出现的问题</td><td align="right">每项维护活动的文档资料</td></tr></tbody></table><h3 id="2-为什么要对软件划分生命周期？请联系个人经验和实际，列举1-2个实例。"><a href="#2-为什么要对软件划分生命周期？请联系个人经验和实际，列举1-2个实例。" class="headerlink" title="2.为什么要对软件划分生命周期？请联系个人经验和实际，列举1-2个实例。"></a>2.为什么要对软件划分生命周期？请联系个人经验和实际，列举1-2个实例。</h3><p>同任何事物一样，一个软件产品或软件系统也要经历孕育、诞生、成长、成熟、衰亡等阶段，一般称为软件生存周期（软件生命周期）。把整个软件生存周期划分为若干阶段，使得每个阶段有明确的任务，使规模大，结构复杂和管理复杂的软件开发变的容易控制和管理。</p><p>就像我们上学，会经历从幼儿园到小学到初中到高中到大学，也是有阶段的，每个阶段都有每个阶段的学习任务。</p><h3 id="3-常用的软件工程方法学有哪些？各自特点、区别及应用？"><a href="#3-常用的软件工程方法学有哪些？各自特点、区别及应用？" class="headerlink" title="3.常用的软件工程方法学有哪些？各自特点、区别及应用？"></a>3.常用的软件工程方法学有哪些？各自特点、区别及应用？</h3><table><thead><tr><th>方法学</th><th align="right">特征</th><th align="right">优点</th><th>缺点</th><th>应用</th></tr></thead><tbody><tr><td>传统方法学</td><td align="right">强调自顶向下</td><td align="right">每个阶段的任务相对独立，而且比较简单，降低了整个软件开发工程的困难程度；<br>保证质量，提高可维护性；</td><td>当软件规模庞大，或者对软件的需求是模糊的或会随时间变化而变化的时候，使用传统方法学开发软件往往不成功<br>使用传统方法学开发出的软件，维护起来仍然很困难。<br>数据与操作相分离</td><td>小型软件</td></tr><tr><td>面向对象方法学</td><td align="right">面向对象方法=对象+类+继承+用消息通信</td><td align="right">面向对象方法学的尽量模拟人类习惯的思维方式，使开发软件的方法与过程尽可能接近人类认识世界解决问题的方法与过程。<br>面向对象方法学开发软件的过程，是一个主动地多次反复迭代的演化过程，保证了在各项开发活动之间的平滑过渡。<br>促进了软件重用。最终的软件产品由许多较小的、基本上独立的对象组成，每个对象相当于一个微型程序，而且大多数对象都与现实世界中的实体相对应，降低了复杂性，提高了可理解性，简化了开发和维护工作。</td><td>…</td><td>大型智能软件</td></tr></tbody></table><blockquote><p>区别：传统方法和面向对象是软件工程的程序设计方法中最本质的思想方法。传统方法编程的基本思想就是把大的程序划分为若干个相对独立、功能简单的程序模块，它以过程为中心, 强调的是过程, 强调功能和模块化, 通过一系列过程的调用和处理完成相应的任务。 面向对象编程以对象为中心, 是对一系列相关对象的操纵, 发送消息给对象, 由对象执行相应的操作并返回结果, 强调的是对象。 理论上, 面向对象的程序设计方法将产生更好的模块内聚和耦合特性, 使得软件更易于重用与维护。在执行效率上来说，传统方法比面向对象方法产生的代码更直接，更高效。从应用的范围看，传统方法适用于数据少而操作多的问题。时间证明对于像操作系统这样的以功能为主的系统，传统方法比较适应它。面向对象方法正好相反，对于数据库，信息管理等以数据为主的而操作较少的系统，用面向对象方法描述要好于传统方法。 在实践中程序设计方法关注软件生命周期的各个环节, 从需求分析、总体设计到编码、测试和维护，同时设计方法在各个阶段需要工具和环境的支撑, 因此在选择程序设计方法时, 需要综合考虑这些因素</p></blockquote><h3 id="4-增量模型中：模块、构件的概念与关系。"><a href="#4-增量模型中：模块、构件的概念与关系。" class="headerlink" title="4.增量模型中：模块、构件的概念与关系。"></a>4.增量模型中：模块、构件的概念与关系。</h3><p>增量模型（渐增模型）</p><p>模块：源码级的。指的实现某个功能的源码。想使用某个模块，就需要有它的源码。</p><p>​                模块的划分是其中一个核心内容，模块还可以是指功能方面的划分。</p><p>构建：构件应用层的，可以完成某个特定的功能， 可能是多个组件的组合。</p><p>每个构建由许多相互作用的模块构成，并可以完成特定的功能。</p><h3 id="5-软件过程模型有哪些？各自特点及应用场景？"><a href="#5-软件过程模型有哪些？各自特点及应用场景？" class="headerlink" title="5.软件过程模型有哪些？各自特点及应用场景？"></a>5.软件过程模型有哪些？各自特点及应用场景？</h3><table><thead><tr><th align="center">模型</th><th align="center">优点</th><th align="center">缺点</th><th align="center">应用场景</th></tr></thead><tbody><tr><td align="center">瀑布模型</td><td align="center">1.质量保证</td><td align="center">1.开始需要把需求做到最全<br>2.惧怕用户测试中的反馈,惧怕需求变更</td><td align="center">适合于结构化方法，也就是面向过程的软件开发方法(变化小，稳定，低风险，需熟悉)。</td></tr><tr><td align="center">快速原型模型</td><td align="center">1.克服瀑布模型的缺点<br>2.减少由于软件需求不明确带来的开发风险。</td><td align="center">1.所选用的开发技术和工具不一定符合主流的发展；<br>2.快速建立起来的系统结构加上连续的修改可能会导致产品质量低下。</td><td align="center">开发时间紧，用户需求不确定。</td></tr><tr><td align="center">增量模型</td><td align="center">1.短时间内向用户提供可完成部分工作的产品<br>2.逐步增加产品功能可以使用户有时间了解和适应新产品<br>3.开放结构的软件拥有的维护性明显好于封闭结构的软件</td><td align="center">1.容易退化为边做边改模型，从而使软件过程的控制失去整体性<br>2.如果增量包之间存在相交的情况且未很好处理，则必须做全盘系统分析<br></td><td align="center">对于已有的软件进行二次开发</td></tr><tr><td align="center">螺旋模型</td><td align="center">1.设计上的灵活性,可以在项目的各个阶段进行变更.<br>2.以小的分段来构建大型系统,使成本计算变得简单容易<br>3.客户始终参为保证了项目不偏离正确方向以及项目的可控性<br>4.客户始终掌握项目的最新信息,从而他或她能够和管理层有效地交互.<br>5.客户认可这种公司内部的开发方式带来的良好的沟通和高质量的产品.</td><td align="center">1.很难让用户确信这种演化方法的结果是可以控制的.<br>2.建设周期长,而软件技术发展比较快,所以经常出现软件开发完毕后,和当前的技术水平有了较大的差距,无法满足当前用户需求.</td><td align="center">大型项目软件的开发</td></tr><tr><td align="center">喷泉模型</td><td align="center">1.可以提高软件项目开发效率<br>2.节省开发时间<br>3.适应于面向对象的软件开发过程</td><td align="center">1.各个开发阶段是重叠的,因此在开发过程中需要大量的开发人员,因此不利于项目的管理.<br>2.此外这种模型要求严格管理文档,使得审核的难度加大,尤其是面对可能随时加入各种信息、需求与资料的情况.</td><td align="center">适用于应用面向对象方法学开发的软件开发</td></tr></tbody></table><h3 id="6-软件中的错误是何时以及怎样造成的？改正软件错误的代价大吗？"><a href="#6-软件中的错误是何时以及怎样造成的？改正软件错误的代价大吗？" class="headerlink" title="6.软件中的错误是何时以及怎样造成的？改正软件错误的代价大吗？"></a>6.软件中的错误是何时以及怎样造成的？改正软件错误的代价大吗？</h3><p>所有的软件都是文档和代码组成的。</p><p>软件的错误来自于代码编写的错误和最初文档设计的错误，但大部分来自文档的错误，后期代码编写的错误所占比相对更小。</p><p>改正软件错误的代价和发现的时间有关系，越晚发现错误，代价越大。</p><h3 id="7-请说说您在软件工程导论课程第1章概述中所学到的内容及想法。"><a href="#7-请说说您在软件工程导论课程第1章概述中所学到的内容及想法。" class="headerlink" title="7.请说说您在软件工程导论课程第1章概述中所学到的内容及想法。"></a>7.请说说您在软件工程导论课程第1章概述中所学到的内容及想法。</h3><p>第一章概述中学到了软件危机的相关知识，软件工程学的方法学分面向对象和面向过程。明白了一个软件的诞生是要经过3个时期，每个时期都分不同的阶段。针对不同的要求，可以利用不同的模型进行生产软件。</p><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="1-系统流程图与数据流图分别是什么及其区别？"><a href="#1-系统流程图与数据流图分别是什么及其区别？" class="headerlink" title="1.系统流程图与数据流图分别是什么及其区别？"></a>1.系统流程图与数据流图分别是什么及其区别？</h3><p>系统流程图：描绘物理系统的工具，用图形符号以黑盒子的形式描绘组成系统的各个部件。表达数据在系统各部件之间的流动的情况，而不是对数据加工处理的过程，他是物理数据流图而不是程序流程图。</p><img src="/posts/183e0644/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1OTQ5NjEx,size_16,color_FFFFFF,t_70.jpeg" alt="系统流程图" style="zoom:50%;"><p>数据流程图：数据流图DFD是描述系统中数据流程的一种图形工具，它标志了一个系统的逻辑输入和逻辑输出，以及把逻辑输入转换逻辑输出所需的加工处理。</p><img src="/posts/183e0644/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1OTQ5NjEx,size_16,color_FFFFFF,t_70-20210313220658551.jpeg" alt="数据流程图" style="zoom:50%;"><p>区别：</p><p>同：两者都是描述数据的流动情况。<br>异：系统流程图允许硬件，文档，甚至人工的介入，有物理设备等。数据流图无硬件设备，系统物理部件等，只是描述数据在系统中加工变换的情况。</p><h3 id="2-可行性研究的任务是什么？"><a href="#2-可行性研究的任务是什么？" class="headerlink" title="2.可行性研究的任务是什么？"></a>2.可行性研究的任务是什么？</h3><p>系统分析员需要进行一次大大压缩和简化了的系统分析和设计过程（较抽象的高层次上）。</p><p>研究问题的范围；探索这个问题是的实现价值；找出可行的解决方案。</p><h3 id="3-第二章可行性研究的学习目标？"><a href="#3-第二章可行性研究的学习目标？" class="headerlink" title="3.第二章可行性研究的学习目标？"></a>3.第二章可行性研究的学习目标？</h3><p>1.首先进一步分析和澄清问题定义，导出系统的逻辑模型；<br>2.然后从系统逻辑模型出发，探索若干种可供选择的主要解法(即系统实现方案)；<br>3.对每种解法都研究它的可行性，至少应该从三方面研究每种解法的可行性 。</p><h3 id="4-在软件项目开发前，为何要做可行性研究？"><a href="#4-在软件项目开发前，为何要做可行性研究？" class="headerlink" title="4.在软件项目开发前，为何要做可行性研究？"></a>4.在软件项目开发前，为何要做可行性研究？</h3><p>可行性研究的目的：用最小的代价在尽可能短的时间内确定问题是否能够解决。它压缩简化了系统分析和设计的过程，也就是在较高层次上以较抽象的方式进行系统分析的过程。如果在项目开始进行前，没有进行可行性研究，当开发时遇到问题且该问题根本得不到解决，那么之前在这项工程上所有的花费都只能是浪费。</p><h3 id="5-可行性研究的内容是什么？"><a href="#5-可行性研究的内容是什么？" class="headerlink" title="5.可行性研究的内容是什么？"></a>5.可行性研究的内容是什么？</h3><p>一、技术方面。<br>对要开发项目的功能性能和限制条件进行分析，即在现有的资源条件下（包括开发人员水平、硬件、软件设备），是否能够按时按量完成该项目的所有功能，开发的风险有多大。<br>二、经济方面<br>对开发成本的估算，分析开发软件需要的资金是否值得投入，当时对类产品的市场需求如何，市场前景如何，公司的运营方式是否适合软件的推广。<br>三、操作方面<br>系统的操作方式是否使用于该产品的用户，界面是否简洁友好，操作方便，用户不需要掌握一些后台的相关知识。<br>可行性研究最根本的任务是对以后的行动方针提出建议，如果问题没有可行的解，分析员应该建议停止这项开发工程，避免时间资源人力金钱的浪费，如果问题值得去解决，那么应该推荐一个较好的解决方案，并且为工程制定一个初步的计划。</p><h3 id="6-成本效益分析的目的是什么？"><a href="#6-成本效益分析的目的是什么？" class="headerlink" title="6.成本效益分析的目的是什么？"></a>6.成本效益分析的目的是什么？</h3><p>1.从经济角度分析开发一个特定的新系统是否划算，从而帮助客户组织的负责人正确地作出是否投资于这项开发工程的决定。 </p><p>2.减小运行费用+增加收入</p><h3 id="7-数据字典是什么及其作用？"><a href="#7-数据字典是什么及其作用？" class="headerlink" title="7.数据字典是什么及其作用？"></a>7.数据字典是什么及其作用？</h3><p>定义：数据字典是指对数据的数据项、数据结构、<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E6%B5%81/3002243" target="_blank" rel="noopener">数据流</a>、数据存储、处理逻辑等进行定义和描述，其目的是对<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E6%B5%81%E7%A8%8B%E5%9B%BE/3073245" target="_blank" rel="noopener">数据流程图</a>中的各个元素做出详细的说明，使用数据字典为简单的建模项目。简而言之，数据字典是描述数据的信息集合，是对系统中使用的所有数据元素的定义的集合。</p><p>作用：数据字典最重要的作用是作为分析阶段的工具。任何字典最重要的用途都是供人查询对不了解的条目的解释，在<a href="https://baike.baidu.com/item/%E7%BB%93%E6%9E%84%E5%8C%96%E5%88%86%E6%9E%90" target="_blank" rel="noopener">结构化分析</a>中，数据字典的作用是给<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE" target="_blank" rel="noopener">数据流图</a>上每个成分加以定义和说明。换句话说，数据流图上所有的成分的定义和解释的文字集合就是数据字典，而且在数据字典中建立的一组严密一致的定义，很有助于改进分析员和用户的通信。</p><h3 id="8-请描绘可行性研究的过程，并结合（实验）小组选题，说说本组如何进行可行性研究及其过程？"><a href="#8-请描绘可行性研究的过程，并结合（实验）小组选题，说说本组如何进行可行性研究及其过程？" class="headerlink" title="8.请描绘可行性研究的过程，并结合（实验）小组选题，说说本组如何进行可行性研究及其过程？"></a>8.请描绘可行性研究的过程，并结合（实验）小组选题，说说本组如何进行可行性研究及其过程？</h3>]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程学习通讨论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浙工大数二850专业课经验分享</title>
      <link href="posts/c18abf4/"/>
      <url>posts/c18abf4/</url>
      
        <content type="html"><![CDATA[<p>数学复习计划（加油考研er）</p><p>4-5月  看完汤神基础，看完一部分就做一部分的题（基础篇），开始慢慢跟着汤神的复习全书做了。</p><p>5-6月  看完汤神提高，看完一部分就做一部分的题（提高篇），复习全书也完成一遍了。</p><p>6-7月  由于当时学校的一些事情（期末考试、毕业设计选题及开题答辩，无法系统学习），做了一下张宇1000题（个人不是很推荐，感觉出题思路不清晰，不在考研的点上，喜欢卖弄技巧）。</p><p>7-8月  学校安排的公司实习（一个月时间），利用上班摸鱼和下班时间，又把复习全书过了一遍。</p><p>8-9月  重做了一遍1800，这里强调一下：重做并不是看下有印象就算了，而不算，还是每个题每个题的算，而且要不断的总结出题方式和做题思路，第一遍不会的题（例如一些证明题）这次要仔细琢磨，弄清楚，记住方法套路。</p><p>9-11月 做完上面的这些后，无论是题目熟悉度，还是做题的思路都有了很大的提升。当然这个时候要根据自己的掌握程度来安排接下来的复习计划。如果觉得自己还是对知识体系，包括各种题型的出题套路和解题思路不是非常熟悉的话，再刷一遍复习全书是最好。反之则可以当个海王了，把其他老师的题目也刷一遍（660，330，880，108。。。），因为每个老师都有自己的想法和理解，通过做这些题可以对某些知识点的出题方式和解题方式有个新的认识，以免在考试的时候题目千变万化吓懵了。</p><p>11-12结束  这个时候我在开始慢慢做真题了，一周两套，因为前面9几年那些题目相对简单所以做的也很快（一般半个多小时就可以搞定一套），后面的真题就会相对难一些（一般一个多小时一套），然后剩下的时间就反复做开始做的那些题1800和复习全书，要一直保持对知识的熟悉度。然后后面12月左右的时候好多的模拟卷都出来了，我做了有汤神的最后8套、李林的6+4，合工大的，这些就差不多了，做多了没必要的。这个时候呢我是，做完一套新的卷子，然后复习一套卷子，然后做1800、复习全书、108这些。切记只做一遍。</p><p>个人：1800（5遍），复习全书（3），[660，330，880，108]（2）,真题（2），模拟题（2）</p><p>最后再强调一下，做套题的时候一定要卡着时间做，把每次都当成考试，我就是要求一定要在90分钟左右完成（均分没统计过，应该有140的，我相信如果做了上面这些，这个分数很普通的），考试的时候也就做题很放松了，也很快的（我也是90分钟左右完成的），但是还是要又快又细，我就是太虎了，写岔批题了，把21题写到22题的答题卡上了，导致直接11分的线代题无了（欲哭无泪，当时想的可能这就是命，哈哈哈），然后还做了两个选择题（4和8 好像）最后129分。</p><p>很多同学看到这里可能会觉得感觉很一整天都在学数学。</p><p>我的时间安排是：（8-11：30，14-17：30，18：30-20）</p><p>暑假前：早上英语，下午数学，晚上数学（最开始4-6晚上是不学习的，哈啊哈哈）</p><p>暑假间：早上英语，下午数学，晚上政治视频（还是怕政治）</p><p>暑假后（9-11）：早上英语，下午数学，晚上数学+专业课+政治选择题</p><p>暑假后（11-end）：早上数学，下午英语，晚上专业课+政治+背单词<br>原文链接：<a href="https://blog.csdn.net/chouchoubuchou/article/details/107737318" target="_blank" rel="noopener">https://blog.csdn.net/chouchoubuchou/article/details/107737318</a></p><h4 id="一、本人情况"><a href="#一、本人情况" class="headerlink" title="一、本人情况"></a>一、本人情况</h4><p>​    本科二本，自动化专业，大四之前只接触过C语言和单片机编程，大四有6~8个月的实习经历，实习期间开始接触C++、Linux、Python。2019.04.03回校，开始做毕业设计，和备考浙工大计算机专硕。</p><p>​    初试结果：数学二100+，英语二60+，政治70+，专业课135+，总分370+，初试排名前15。</p><p>​    复试结果：复试分数75+，综合排名前15名。复试表现不好。</p><h4 id="二、浙工大计算机考研总体情况"><a href="#二、浙工大计算机考研总体情况" class="headerlink" title="二、浙工大计算机考研总体情况"></a>二、浙工大计算机考研总体情况</h4><p>​    专业代码：20年计算机学硕对应为081200计算机科学与技术，由于专硕被合并为电子信息专业，所以计算机专硕对应于085400电子信息-计算机技术方向。</p><p>​    专业课：2020年之前浙工大计算机考研专业课只有C++，但因为2019年专业课C++太简单，导致19年计算机专硕复试分数线是361分（往年是300~320分之间），所以20年计算机专业的专业课改为数据结构+计算机网络，软件工程专业的专业课为数据结构+软件工程。学硕和专硕的专业课好像是一样的，同一张试卷。</p><p>​    复试情况：（1）原定复试情况是初试：复试=6：4，复试=机试+面试。（2）因为疫情，情况改为初试：复试=6：4，复试=面试，没有机试。</p><p><img src="https://upload-images.jianshu.io/upload_images/23929376-e097b9f776bce01a?imageMogr2/auto-orient/strip%7CimageView2/2/w/522" alt="img"></p><p>​    注：（1）招生人数中，x|y 表示总招 y 人，其中招推免 x 人；</p><p>​       （2）不扩招的推算分数线计算方法：以2020年计专为例，原计划招20|70人，实际招收推免2人，差额复试比为1.3。则（70 - 2）× 1.3 = 88.4，取计专第89名考生分数327分为推算复试分数线。</p><h4 id="三、初试情况"><a href="#三、初试情况" class="headerlink" title="三、初试情况"></a>三、初试情况</h4><p>​    数学二：汤家凤基础视频+汤家凤讲义+汤家凤1800+张宇八套卷+李林卷。汤家凤提高篇视频我没看，时间不够。</p><p>​    英语二：恋恋有词单词书+唐迟的罗汉班视频+作文模板。我四级没过，所以大家如果英语底子差，别太担心，选择题总能得分，作文也有模板，可以拿一些分。总的来说，我最初的目标是英语只需要考一般的分数，比如60分，靠其他科目拉分。</p><p>​    政治：徐涛视频+肖秀荣课本、1000题、预测卷。</p><p>​    专业课：王道+真题+谢希仁计网课本。真题为主。（1）专业课需要自己根据真题总结知识点的考频和出题角度，这特别重要，有些知识点浙工大不会作为考试点，有些几乎年年考。（2）由于往年计网试卷有些题来自谢希仁课本题目，所以这本书的题目我做了，并根据这本书配套的解答册勾画和总结了一些名称解释。20年计算机专业试卷中名词解释和简答题占了很大分值。（3）我刷真题过程中，发现买来的答案有很多错误。如果对买来的答案有疑问，一切以学校指定参考书的解题方法为准，多和研友或者适当地和考研群群友讨论。</p><h4 id="四、复试情况"><a href="#四、复试情况" class="headerlink" title="四、复试情况"></a>四、复试情况</h4><p> <strong>1、复试流程</strong></p><p>​    往年（现场面试）：进门站讲台前，面向老师 -&gt; 自我介绍（如果老师没提需要英文自我介绍，则可以使用中文的自我介绍）-&gt; 专业能力提问和个人情况提问 -&gt; 老师询问学生是否对复试或学校有问题 -&gt; 出门</p><p>​    今年（远程面试）：使用PPT进行自我介绍 -&gt; 专业能力和个人情况提问 -&gt; 屏幕上展示出一段英文（约3<del>5句，共100</del>120词），先读一遍，再口译第一句。具体流程在 <a href="http://www.software.zjut.edu.cn/rencai_info.php?id=6889%E3%80%82" target="_blank" rel="noopener">http://www.software.zjut.edu.cn/rencai_info.php?id=6889。</a></p><p>​    我抽到英文段内容是关于AI和人机交互，形式类似于考研英语的阅读理解，难度应该比英语二阅读简单一点点。</p><p> <strong>2、复试中被提问的问题</strong></p><p>​    复试是围绕个人PPT（往年是简历），再根据复试老师熟悉的内容，来提问的。我PPT中涉及的内容包括涉及深度学习、机器学习、Linux、C++、Python、无人机。我被提到的问题是以下几个：</p><p>​    （1）你的泰坦尼克号项目是做什么的，然后追问这个项目中的两个具体细节。因为老师们不熟悉项目，所以问的不深</p><p>​    （2）你有参加过比赛或科研吗 -&gt; 你认为应该如何做科研</p><p>​    （3）什么是深度学习</p><p>​    其他同学被问到过的问题：</p><p>​    （1）如果你是实验室管理员，你如何管理实验室</p><p>​    （2）。。。</p><p> <strong>3、复试感想</strong></p><p>​    （1）围绕简历或者PPT提问</p><p>​    （2）浙工大计算机复试不会特别注重专业能力，个人气场、应变能力、性格这些倒是比较重要。如果专业能力不是很强，那么复试时沉稳一些，回答问题时有逻辑一些，复试成绩会比较漂亮。</p><p>​    （3）找几个可靠的考同校同专业的人组个齐心互助小团队。准备复试的过程中大家多交流，有问题多相互帮忙解答，团队力量比个人力量大很多。（我在考研群里找了几个队友，加上我总共5个人，全部被录取了，并且有两个队友复试成绩是90多分，他们综合排名都进了前十，我觉得他们挺厉害的）</p><p>​    （4）复试前和小团队进行几场模拟面试。</p><p>​    （5）心态很重要，焦虑或慌张的时候和别人聊聊天，外出运动一会。</p><p>​    （6）如果能够在复试之前，和自己导师视频面试，是极好的，可以提前了解老师可能提问的点，及提问角度。</p><p><strong>下面讲一下我的复试准备情况。</strong></p><p><strong>1、机试（1<del>2月份大部分时间，3</del>5月份部分时间）：</strong></p><p>​    由于5月份及之前，一直没通知取消机试。所以我在机试上做了大量的准备。包括胡凡的《算法笔记》、浙工大校内OJ（online judge，在线评测系统）、浙工大校外OJ、浙大PAT乙级全部、PAT甲级某些题型、往年浙工大C++真题编程题部分。</p><p>​    因为21年可能会有机试，所以有必要说一下我认为可行的准备方式：C++基本编程能力 -&gt; 胡凡的《算法笔记》-&gt; PAT乙级+甲级部分重点题型 -&gt; 浙工大OJ（不需要全刷，主要目的是熟悉浙工大OJ题型和判题方式，校外OJ题目较难，校内OJ题目比较简单。），熟悉浙工大往年C++真题编程题的考点 -&gt; 与队友模拟机试。</p><p>​    PAT题解：<a href="https://github.com/liuchuo/PAT%E3%80%82" target="_blank" rel="noopener">https://github.com/liuchuo/PAT。</a></p><p>​    20年浙工大的OJ网址是1月份左右在官方招生群中公布的。大家先安心准备初试，等公布了OJ网址再准备机试。</p><p>​    浙工大OJ没有完备的题解，建议多和他人讨论。校外OJ我只做出了部分的题，挂在了GitHub上：<a href="https://github.com/gzpbbd/ZJUT-Online-Judge%E3%80%82" target="_blank" rel="noopener">https://github.com/gzpbbd/ZJUT-Online-Judge。</a></p><p> <strong>2、专业能力（2<del>3月份大部分时间，4</del>5月份部分时间）</strong></p><p>​    为了让自己在与其他人的比较中，能凸显出一点点优势，我自学了深度学习和机器学习的一些内容。期间用到的资料包括：《Python深度学习》（原名Deep Learning with Python，主攻），吴恩达机器学习视频课，《机器学习》周志华，《统计学习方法》周航，Kaggle上的一个入门项目（Titanic：Machine Learning from Disaster）。这些材料也不是全看完了，对于《机器学习》和《统计学习方法》，我的数学功底还不够。最终达到的地步是了解《Python深度学习》中主要内容，了解机器学习的决策树、支持向量机、K近邻、集成算法。</p><p>​    吴恩达的课我英语听力还不行，所以是先看一遍上课内容（PDF），再跟一遍视频，GitHub上有整理好的配套中文笔记：<a href="https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes" target="_blank" rel="noopener">https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes</a></p><p> <strong>3、英语（2~5月份部分时间）</strong></p><p>​    英语我准备了自我介绍和一些问答。最开始的时候还挺担心这部分内容的，背了之后就不是很担心了，因为有准备，且复试占比不大。</p><h4 id="五、选择导师"><a href="#五、选择导师" class="headerlink" title="五、选择导师"></a>五、选择导师</h4><p><strong>1、时间</strong></p><p>在3月20日<strong>初试出分</strong>后，我因为成绩比较靠前，所以立即给一位导师发了邮件，</p><p>4月中旬左右，学校出了<strong>复试分数线</strong>，我确认自己进了复试，就又给之前联系的导师发了邮件，再次表明意向。</p><p>​    复试时间是5.17日。在5.1~5.14日，因为对机器学习了解多了一些，能看得懂导师简介中项目大体方向，加之了解了一些具体方向的应用和前景，所以感觉到我与原意向导师不太适合。就先后又联系了3位导师。这三位导师中，有两位对我进行了远程视频面试，一位进行了电话面试。</p><p><strong>2、如何选择导师</strong></p><p>​    我在选导师过程中涉及到的材料主要包括：导师个人简介，谷歌学术，项目基金查询网站 <a href="http://fund.sciencenet.cn/login%EF%BC%8C%E5%AF%BC%E5%B8%88%E8%AF%84%E4%BB%B7%E7%BD%91" target="_blank" rel="noopener">http://fund.sciencenet.cn/login，导师评价网</a> <a href="https://www.mysupervisor.org/Forum/View/9701%E3%80%82" target="_blank" rel="noopener">https://www.mysupervisor.org/Forum/View/9701。</a></p><p>​    流程：（1）根据导师个人简历中项目的丰富程度、方向、年龄、个人经历进行初筛（2）通过谷歌学术查看导师相关论文的摘要，进一步判断导师研究方向和成果，再一次筛选（3）在谷歌学术中，查询论文时，对于部分导师可以查看到他们的相关信息（也许是因为这部分导师在谷歌学术中注册了账号）。查看导师该账号对应的论文被引总次数，再一次筛选。</p><p>​    此外，我还咨询了一些往届学长，不过问到的信息比较少。</p><p><strong>3、联系导师过程中的感想</strong></p><p>​    （1）相比于浙工大的复试，联系导师时，导师会更看重学生的专业能力。我在准备复试的前几个月学的机器学习和泰坦尼克号项目帮我加了分，原因一是因为入学后上手快，二是体现了学习能力。</p><p>​    （2）导师对自己面试后，记得尽早问清导师招生名额、自己在导师的意向中排第几为、有多大概率会选择自己。尽量避免到后期才知落选，匆忙换导师。</p><p>​    （3）联系导师时，通常在48小时内会收到回复。如果超过48小时还没有收到老师的回复，可以大胆联系其他导师。</p><p>​    （4）不同导师的管理是有差别的。注意问一下毕业要求、是否允许研三实习。</p><h4 id="六、其他"><a href="#六、其他" class="headerlink" title="六、其他"></a>六、其他</h4><p> <strong>1、 浙工大计算机学硕和专硕区别：</strong></p><p>​    （1）考试科目不同，学硕考数一英一，专硕考数二英二</p><p>​    （2）毕业要求不同，学校规定学硕必须要达到一定的论文成果，而专硕无硬性要求。不过有些导师规定了他门下的专硕按学硕毕业要求毕业。</p><p>​    （3）学硕可硕博连读，专硕需考博。但每年有一小部分名额（每专业1~2名）可以转专业，允许从同专业的专硕转到同专业的学硕。</p><p>   <strong>2、关于初试排名</strong></p><p>   在初试成绩公布的时候，可以根据考研盒子，大概估计自己初试成绩排名，与实际排名的误差大概在±15名之内。</p><p>   在出了学院的复试分数线后，浙工大会在复试名单中包含初试的排名信息，可稍微根据排名，调整复试安排。如果初试排名低，复试需要努力冲上去；如果初试排名靠前，复试注意稳扎稳打。</p><h4 id="七、问答"><a href="#七、问答" class="headerlink" title="七、问答"></a>七、问答</h4><p><strong>问答列表：</strong></p><p>​    准备专业课需要先看一遍课本吗？</p><p>​    准备专业课是以课本为主，还是以王道/天勤为主？</p><p>​    我专业课怎么复习的？</p><p>​    我专业课做了哪些题？</p><p>​    专业课由C++改为两门后，难度有无变化？</p><p>​    数据结构那部分的编程题可不可以使用C++呢？</p><p>​    对于数据结构，大纲指定的那本国外参考教程需不需要看呢？</p><p>​    计网知识点太散，记不住怎么办？</p><p>​    刷数据结构编程题进度好慢，或者不会写程序，怎么办？</p><p>​    王道内容与考纲不符合怎么办？</p><p>​    哪些知识点是重点，真题有规律吗？如何做考点考频统计？</p><p>​    关于我的数学方法？</p><p>​    在其他学长/学姐那买的真题资料包中，带有计网背诵资料，可以跟这份资料吗？</p><p>​    20年考研什么时候出了改专业课的通知？什么时候出了考试大纲？</p><p>​    真题哪里买的？</p><p>​    哪些因素对于复试和找导师最有利？</p><p>​    实习经验对复试有帮助吗？</p><p>​    20年有没有公布机试范围？</p><p>​    本科挂科了对复试有没有影响？</p><p>​    我的初试感想。</p><p>​    关于数学的提醒。</p><hr><p>   <strong>准备专业课需要先看一遍课本吗？</strong></p><p>   不需要。课本不是针对考研的，知识点太散。直接拿起王道/天勤就可以了。</p><p>   <strong>准备专业课是以课本为主，还是以王道/天勤为主？</strong></p><p>   王道/天勤+真题为主。</p><p>   例外：往年计网有部分题来自《计网》谢希仁书，所以对于这本书上可能考试的题尽量写完。我利用这本书配套的习题解答书准备了简答题和名词解释。《计网》谢希仁书封底有配套的习题解答书的书名。</p><p>   <strong>我专业课怎么复习的？</strong></p><p>   我之前没有系统学过数据结构，大三时自己看了一半的严版《数据结构》，迷迷糊糊的，大四实习时在B站找了计网视频普及概念，18小时左右的视频。</p><p>   我的专业课历程：</p><p>   1）刷王道+配套视频。  一遍。7.28开始学数据结构，8.12开始学计算机网络。每本书都是大概15天，每天时长不记得了，好像是每天一上午，也好像上午+下午。我此时并未翻阅考试大纲。</p><p>   2）分析真题/考纲。  统计真题考点、考点的考频，目的是找出题规律和出题重点。并划去不在大纲内的内容，减轻负担。</p><p>   3）刷真题。  对于计网，分析简答题和名词解释的出题角度。往年浙工大简答题主要是考概念。几乎不考不同概率/协议间的对比。21年我不确定。</p><p>   4）刷真题+王道+谢希仁。  二、三刷真题。王道+谢希仁错题。</p><p>   注：对于重点算法（树遍历、查找、排序等），我每周会默写一遍，所以后期算法基本不担心了。浙工大编程题挺简单的，注意写工整一些。</p><p>   <strong>我专业课做了哪些题？</strong></p><p>   王道+真题+谢希仁课本。</p><p>   我觉得我做的好的地方是 1）分析考点/考频 2）简答题准备充分 3）基础题目拿分稳 4）注意细节</p><p>   <strong>专业课由C++改为两门后，难度有无变化？</strong></p><p>   个人感觉无变化，题型还是很常规。注意做题需细心。</p><p>   20年计网+数据结构真题题量很多。考试时间3小时，我在考试结束时间点的前7分钟左右才停笔。</p><p>   <strong>数据结构那部分的编程题可不可以使用C++呢？</strong></p><p>   往年真题中出现了C++，所以我认为是可以使用C++的，我备考过程中也是按C++准备的。</p><p>   使用C++中的STL（vertor、queue、stack）写程序会舒服很多，省时间。</p><p>   <strong>对于数据结构，大纲指定的那本国外参考教程需不需要看呢？</strong></p><p>   一般不需要看，当王道、严版数据结构、真题答案有冲突时，才按那本书为准。</p><p>   我去年发现唯一的一处冲突的地方是“快速排序的过程”，20年考试正好考了画出快速排序的过程。我是按指定教程的快速排序答题的（答题时尽量注明一下：“按照大纲指定教材的快速排序算法的具体实现，排序过程如下：”）。</p><p>   顺便提一下，哈希算法解决冲突时，开放定址法是对表长求余哟。</p><p>   <strong>计网知识点太散，记不住怎么办？</strong></p><p>   我准备初试的时候，是跟着王道的视频课学的。计网这一科目，对于章节内容比较少的，我每看完一章视频后，再做一章的习题；对于章节内容比较多的，我按照半章视频 - 半章习题的节奏学习。王道书上的每个习题，我都做了。</p><p>   数据结构的编程题，对于我来说有些难度，所以数据结构我倒是按一小节视频 - 一小节习题的节奏学习。</p><p>   可能是因为我按整章/半章地学计网，所以每章的知识点没有被分散，我没有感觉到记忆计网知识点有大的困难。</p><p>   但对于一些比较偏的协议，比如数据链路层的PPP、HDLC协议，我也记不太清他们的内容。</p><p>   <strong>刷数据结构编程题进度好慢，或者不会写程序，怎么办？</strong></p><p>   数据结构的编程题主要集中在线性结构和树状结构那几章。刚开始的时候确实会慢一些，我记得我刷链表时，3小时差不多只能搞定3-5道题。但其他章节编程题会少一些，因此进度快一些。</p><p>   2020年数据结构部分只有一道20分的编程题。我猜测，如果考试时写不出完整的程序，可以先用文字写一下算法思路，再尽可能地写出算法大体结构，也可以得到5-10分。其实，浙工大数据结构编程题不算难。</p><p>   等过完一遍王道/天勤后，大家自己对真题做个考点、考频统计，会发现浙工大的重点考点比较固定。</p><p>   如果不会写程序，建议通过定期记忆、默写，把链表、树的重点程序啃下来。</p><p>   <strong>王道内容与考纲不符合怎么办？</strong></p><p>   对于王道，把大纲中不考的点划去就好了，剩下的继续学。</p><p>   以下是我对比大纲和王道书找到的一些，供参考：</p><p>   王道有而20年大纲没有的点：数据结构（特殊矩阵的压缩存储、森林、并查集、B+树、拓扑排序、关键路径、串、外部排序）。</p><p>   20年大纲有而王道没有的点：数据结构（汉诺塔），计算机网络（VPN，网络安全）。</p><p>   其中VPN、网络安全可看谢希仁的书或者PPT。汉诺塔可以看博客。</p><p>   <strong>哪些知识点是重点，真题有规律吗？如何做考点考频统计？</strong></p><p>   真题有规律的。等专业课学完第一轮，再做考点考频统计，就能自己发现重点和真题规律了。</p><p>   我在这里只是简单讲一下我的统计方法。</p><p>   （1）打印一份考试大纲</p><p>   （2）浏览历年真题，把考过的点在大纲中标记出来，包括具体的年份、题型。如果大纲中描述的点太宽了，则自己加条目，再标记。</p><p>   （3）研究一下考频，重点和真题规律就出来了。</p><p>   <strong>关于我的数学方法？</strong></p><p>   我准备机试的小团队中有位队友数学二是129分，我邀请他写了数学经验<a href="https://links.jianshu.com/go?to=https://blog.csdn.net/chouchoubuchou/article/details/107737318" target="_blank" rel="noopener">https://blog.csdn.net/chouchoubuchou/article/details/107737318</a>。（去年考研群中，他是解答数学题最最活跃的那一个。哈哈哈）</p><p>   有人问到了我的数学方法，但我的数学分数不高，就写在这里，作为样例供大家分析吧。</p><p>   我高数全跟汤家凤。因为时间不够，所以高数我没听汤家凤的强化班视频。1800+汤家凤讲义我大概刷了4遍。但我感觉后面的两遍对我的数学功底没有明显的提升效果了，起的主要作用是抗遗忘，即重复复习那些难题的解题方法。</p><p>   我数学复习显露出的问题是一直在刷同样题型的题目，对于灵活一些的题目，容易没有思路。</p><p>   我认为可以在保证汤家凤1800+讲义能刷2遍的情况下，尝试刷一下其他老师的书，比如张宇、复习全书等。当然这是我未经亲身检验过的猜想，不能保证效果。</p><p>   我线性代数全跟李永乐，没发现有大问题。</p><p>   <strong>在其他学长/学姐那买的真题资料包中，带有计网背诵资料，可以跟这份资料吗？</strong></p><p>   我去年有粗略看了一遍内容，感觉不突出重点，也不适合浙工大简答题风格。就没用资料包中的计网背诵材料。</p><p>   我通过真题发现浙工大简答题题目有些来自谢的计网书，仔细看了下，发现谢的习题参考书很适合圈重点作为背诵材料。当然，谢书答案写的太详细了，不能整段整段地全背。我对每段、每个句子提取主干再背诵。</p><p>   对于谢书答案的背诵，我大概经历了三轮。</p><p>   （1）第一遍背诵的内容有点多。</p><p>   （2）第二遍复习，开始放弃一些不重要的点。</p><p>   （3）考前一两个月，把重点汇总到了四面纸，以其为重点背诵。其他的之前圈过、背诵过的点，只是读一读。</p><p>   而数据结构需要背诵的东西不多。我选取了资料包中数据结构背诵材料的一小部分内容，然后自己补充了一些。</p><p>   <strong>20年考研什么时候出了改专业课的通知？什么时候出了考试大纲？</strong></p><p>   2019.7.19，浙工大计院研招通知板块<a href="https://links.jianshu.com/go?to=http://www.software.zjut.edu.cn/rencai.php?cid=82" target="_blank" rel="noopener">http://www.software.zjut.edu.cn/rencai.php?cid=82</a>出了改专业课的通知。</p><p>   2019.9.23，浙工大研招网<a href="https://links.jianshu.com/go?to=http://www.yz.zjut.edu.cn/list.asp?tid=6" target="_blank" rel="noopener">http://www.yz.zjut.edu.cn/list.asp?tid=6</a>出了专业课考试大纲。</p><p>   <strong>真题哪里买的？</strong></p><p>   真题很重要，必须有。考研讨论群的群主一般都是卖资料的（真题+答案+答疑群）。</p><p>   一手资料价格在150-280元之间。</p><p>   二手资料（指该年弃考/转校的人转卖资料）价格在40-100元之间。</p><p>   去年资料（不含最新一份真题+答案）价格在0-40元之间。</p><p>   2020年真题已经在公众号“浙江工业大学研究生招生”公众号公布了，回复科目名或代码（例如850）即可获取。我也挂了代码为850的真题到了百度云盘上，链接:<a href="https://links.jianshu.com/go?to=https://pan.baidu.com/s/1B7G4hjYfNErUx9LxQ1H0Hw" target="_blank" rel="noopener">https://pan.baidu.com/s/1B7G4hjYfNErUx9LxQ1H0Hw</a>提取码: 4nwd。</p><p>   <strong>哪些因素对于复试和找导师最有利？</strong></p><p>   我无法排出优先级。但是初试阶段重点是争取初试成绩尽量好，复试阶段才是考虑项目的时候。</p><p>   在初试成绩、获奖/项目经验、个人因素中：</p><p>   1）初试成绩会影响初试、复试、找导师，起兜底和起跑线作用。</p><p>   2）找导师时初试成绩是门槛，而获奖/项目经验会令老师印象深刻。</p><p>   3）个人因素（沉稳、回答问题有逻辑等）在复试时可加分。</p><p>   <strong>实习经验对复试有帮助吗？</strong></p><p>   我猜会有帮助，毕竟算是工作经验，可以体现编程能力。</p><p>   如果自己能学一些和导师方向吻合的内容，会更有帮助。</p><p>   大部分导师研究方向都会涉及机器学习/深度学习。</p><p>   浙工大计院老师中方向为CV的占了一半多。其它方向包括文本处理、人机交互、云计算、接开发项目等，具体比例我不清楚。</p><p>   不过这是复试的事情，初试的最主要目标是：争取初试成绩尽可能高。</p><p>   <strong>20年有没有公布机试范围？</strong></p><p>   1月份时，负责招生的边老师在招生群中公布了浙工大的OJ网址，但没有说机试范围。</p><p>   <strong>本科挂科了对复试有没有影响？</strong></p><p>   有一些影响，不过影响不大。</p><p>   <strong>我的初试感想。</strong></p><p>   （1）**”<strong>各科平稳</strong>“<strong>比</strong>“<strong>某科特别突出+某科特别差</strong>“**会好一些。</p><p>   英语60 + 政治65 + 数学105 + 专业课120 = 350。</p><p>   大体达到这个后，对擅长的科目再额外发挥。</p><p>  （2）对自己的进度，要有比较明确的规划。比如什么时候学完新知识，什么时候二刷错题，什么时候开始刷真题，什么时候真题二刷。</p><p>   如果没有规划，任由时间扯着自己跑，后面很容易慌张，一慌张就效率会很低，看不进书。</p><p>  （3）有时候怀疑自己考不上是很正常的，我在初试期间也曾多次怀疑自己考不上：6月份，9月份，10月份，都有过。我调节心情的方法是跑步、找朋友聊聊天。</p><p>   不过因为自己每一步走的比较稳，也经常会和研友聊一聊他们的进度，同时观察考研群中其他人的进度。到后期，我对于自己能考上的信心就更强了一些。</p><p>  （4）必胜的信念也很重要。我考研时已经无路可退了：已毕业、非科班、二本、编程无优势、四级未过。所以我那时想着一定要考上，考研是我人生路上的重要的一小步，这步没走过，对以后的发展会很不利。</p><p>  （5）最好尽早根据自己情况定好一个各科考试目标和总目标，并定时按照自己的准备情况合理调整。</p><p>   <strong>关于数学的提醒。</strong></p><p>   数学的知识点比较多，当学习线代（或者数一学习概率论）的时候，每天需要做一些高数（数一加上线代）的题目，防止遗忘。</p><p>   我本人没有犯错。不过见过几个研友犯了错：学线代的时候不练习高数，因此处在 学习高数-学习线代-遗忘高数-学习高数-遗忘线代-学习线代 的循环中耗费了大量时间与精力，差点败北。</p><p>八、约定</p><p>   我考研时受过经验贴的帮助，但浙工大的经验贴比较少，我想让浙工大的经验贴能够多一些。</p><p>链接：<a href="https://www.jianshu.com/p/bda253fc66db" target="_blank" rel="noopener">https://www.jianshu.com/p/bda253fc66db</a><br>来源：简书</p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验贴 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>client实现免密登陆server</title>
      <link href="posts/a5451f8b/"/>
      <url>posts/a5451f8b/</url>
      
        <content type="html"><![CDATA[<h1 id="设置服务器免密登录"><a href="#设置服务器免密登录" class="headerlink" title="设置服务器免密登录"></a>设置服务器免密登录</h1><h2 id="1-Client本地生成密钥对"><a href="#1-Client本地生成密钥对" class="headerlink" title="1. Client本地生成密钥对"></a>1. Client本地生成密钥对</h2><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa    <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-将Client服务器的公钥证书id-rsa-pub复制到Server服务器的-ssh子目录中"><a href="#2-将Client服务器的公钥证书id-rsa-pub复制到Server服务器的-ssh子目录中" class="headerlink" title="2. 将Client服务器的公钥证书id_rsa.pub复制到Server服务器的.ssh子目录中"></a>2. 将Client服务器的公钥证书id_rsa.pub复制到Server服务器的.ssh子目录中</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">scp</span> -p ~/.ssh/id_rsa.pub root@服务器ip或者域名:~/.ssh/<span class="token comment" spellcheck="true">#输入密码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-在Server服务器"><a href="#3-在Server服务器" class="headerlink" title="3.在Server服务器"></a>3.在Server服务器</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">mv</span> ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-小插曲-问题"><a href="#4-小插曲-问题" class="headerlink" title="4.小插曲(问题)"></a>4.小插曲(问题)</h2><img src="/posts/a5451f8b/image-20210308150341291.png" alt="权限问题" style="zoom:50%;"><h2 id="5-成功实现"><a href="#5-成功实现" class="headerlink" title="5.成功实现"></a>5.成功实现</h2><img src="/posts/a5451f8b/image-20210308150440888.png" alt="成功免密登陆" style="zoom:50%;"><pre class="line-numbers language-bash"><code class="language-bash">sunyun@sunyundeMacBook-Pro ~ % <span class="token function">cd</span> /Users/sunyun/.ssh/sunyun@sunyundeMacBook-Pro .ssh % <span class="token function">ls</span>config            id_rsa_gitee        id_rsa_github.pubid_rsa            id_rsa_gitee.pub    known_hostsid_rsa.pub        id_rsa_githubsunyun@sunyundeMacBook-Pro .ssh % <span class="token function">chmod</span> 0600 id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centosmysql环境配置</title>
      <link href="posts/5c60e544/"/>
      <url>posts/5c60e544/</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装参考"><a href="#1-安装参考" class="headerlink" title="1.安装参考"></a>1.安装参考</h1><h3 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h3><pre class="line-numbers language-bash"><code class="language-bash">使用如下命令安装MySql以及它的相关依赖项.<span class="token function">sudo</span> dnf <span class="token function">install</span> @mysql安装完成后，启动MySql服务并且让它在Centos服务器启动时自动启动,命令如下所示.<span class="token function">sudo</span> systemctl <span class="token function">enable</span> --now mysqld使用如下命令检测MySql是否在运行.结果如下所示.<span class="token function">sudo</span> systemctl status mysqld● mysqld.service - MySQL 8.0 database server   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Wed 2020-11-11 09:41:34 CST<span class="token punctuation">;</span> 3 weeks 5 days ago使用如下命令进入<span class="token function">sudo</span> mysql_secure_installation会有如下顺序直接,按照如下顺序执行.选择密码验证策略等级， 我这里选择0 （low），回车输入新密码两次确认是否继续使用提供的密码？输入y ，回车移除匿名用户？ 输入y ，回车不允许root远程登陆？ 我这里需要远程登陆，所以输入n ，回车移除test数据库？ 输入y ，回车重新载入权限表？ 输入y ，回车在当前终端使用如下命令登陆MySql.mysql -uroot -p <span class="token operator">&lt;</span>上面步骤中设置的密码<span class="token operator">></span>登陆使用如下mysql命令,设置root用户的 host 为任意IP.use mysql<span class="token punctuation">;</span>update user <span class="token keyword">set</span> host<span class="token operator">=</span><span class="token string">'%'</span> where user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">;</span>flush privileges<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://www.jianshu.com/p/1e55d8018eab" target="_blank" rel="noopener">参考链接</a></p><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sunyun share<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># sudo firewalld-cmd  --zone=public --add-port=3306/tcp  --permanent</span>sudo: firewalld-cmd: <span class="token function">command</span> not found<span class="token punctuation">[</span>root@sunyun share<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --list-ports</span>FirewallD is not running<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h4><pre class="line-numbers language-bash"><code class="language-bash">通过systemctl start firewalld开启防火墙，没有任何提示即开启成功。再次通过systemctl status firewalld查看firewalld状态，显示running即已开启了。如果要关闭防火墙设置，可能通过systemctl stop firewalld这条指令来关闭该功能。再次执行执行firewall-cmd --permanent --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span>3306/tcp，提示success，表示设置成功，这样就可以继续后面的设置了。<span class="token function">sudo</span> firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/5c60e544/image-20210219193307960.png" alt="开启3306端口" style="zoom:50%;"><h4 id="你会发现还是连接不上，会报错"><a href="#你会发现还是连接不上，会报错" class="headerlink" title="你会发现还是连接不上，会报错"></a>你会发现还是连接不上，会报错</h4><p><code>2003 - Can&#39;t connect to MySQL server on &#39;47.115.*.*&#39; (60 &quot;Operation time</code></p><p>报错原因阿里云有限制：</p><h4 id="解决：-1"><a href="#解决：-1" class="headerlink" title="解决："></a>解决：</h4><img src="/posts/5c60e544/image-20210219192850257.png" alt="修改阿里云配置" style="zoom:40%;"><p>要在安全组里添加3306，不然navcat连接不上</p><img src="/posts/5c60e544/image-20210219192935136.png" alt="连接成功" style="zoom:40%;">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ip网络构建期末知识点总结</title>
      <link href="posts/a8e03439/"/>
      <url>posts/a8e03439/</url>
      
        <content type="html"><![CDATA[<h1 id="ip网络构建小总结"><a href="#ip网络构建小总结" class="headerlink" title="ip网络构建小总结"></a>ip网络构建小总结</h1><h2 id="小总结"><a href="#小总结" class="headerlink" title="小总结"></a>小总结</h2><img src="/posts/a8e03439/image-20210116214404161.png" alt="image-20210116214404161" style="zoom:50%;"><img src="/posts/a8e03439/image-20210116214436394.png" alt="image-20210116214436394" style="zoom:50%;"><img src="/posts/a8e03439/image-20210117000118602.png" alt="image-20210117000118602" style="zoom:50%;"><img src="/posts/a8e03439/image-20210116214511526.png" alt="image-20210116214511526" style="zoom:50%;"><img src="/posts/a8e03439/image-20210116214525124.png" alt="image-20210116214525124" style="zoom:50%;"><img src="/posts/a8e03439/image-20210116214541792.png" alt="image-20210116214541792" style="zoom:50%;"><img src="/posts/a8e03439/image-20210116214600524.png" alt="image-20210116214600524" style="zoom:50%;"><img src="/posts/a8e03439/image-20210116214618785.png" alt="image-20210116214618785" style="zoom:50%;"><p><img src="/posts/a8e03439/image-20210116214701766.png" alt="image-20210116214701766"></p><img src="/posts/a8e03439/image-20210116214821751.png" alt="image-20210116214821751" style="zoom:50%;"><img src="/posts/a8e03439/image-20210116214854031.png" alt="image-20210116214854031" style="zoom:50%;"><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><pre class="line-numbers language-bash"><code class="language-bash">system-view//进入配置模式dis this //查看当前配置dis ip rounting-table //查看路由表vlan batch 10 20 30 //设置vlanint e0/0/0   int g0/0/0  //进接口port link-type access  //设置端口为accessport default vlan 10port link-type trunk  //设置端口为trunkport trunk allow-pass vlan 10 ip route-static 192.168.100.0 255.255.255.0 1.1.1.1//单臂路由int e0/0/1.100ip add 192.168.100.1 24dotp1 termination vid 100arp broadcast <span class="token function">enable</span>//链路聚合interface Eth-Trunk1 port link-type trunk port trunk allow-pass vlan 100 200 stp instance 0 cost 10interface Ethernet0/0/2 eth-trunk 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="填空："><a href="#填空：" class="headerlink" title="填空："></a>填空：</h2><img src="/posts/a8e03439/image-20210117000343217.png" alt="填空" style="zoom:50%;"><h2 id="简答："><a href="#简答：" class="headerlink" title="简答："></a>简答：</h2><img src="/posts/a8e03439/image-20210117000407024.png" alt="简答" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web期末复习-编程题篇</title>
      <link href="posts/1c4c5b4a/"/>
      <url>posts/1c4c5b4a/</url>
      
        <content type="html"><![CDATA[<h1 id="web期末复习-编程题篇"><a href="#web期末复习-编程题篇" class="headerlink" title="web期末复习-编程题篇"></a>web期末复习-编程题篇</h1><h2 id="1-html-表格"><a href="#1-html-表格" class="headerlink" title="1.html-表格"></a>1.html-表格</h2><img src="/posts/1c4c5b4a/image-20210114224042078.png" alt="细线表格" style="zoom:80%;"><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- #d7d7d7 灰色#ffffff 白色 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300px<span class="token punctuation">"</span></span>  <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#d7d7d7<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">text-align</span><span class="token punctuation">:</span> center</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">></span></span>练习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>会员级别<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>金卡<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>200<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>svip卡<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-css-决定定位相对定位："><a href="#2-css-决定定位相对定位：" class="headerlink" title="2.css-决定定位相对定位："></a>2.css-决定定位相对定位：</h2><img src="/posts/1c4c5b4a/image-20210114224640427.png" alt="css1" style="zoom:60%;"><h3 id="代码：-1"><a href="#代码：-1" class="headerlink" title="代码："></a>代码：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token id">#boxA</span></span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*相对定位*/</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">50</span>px<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#boxB</span></span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*决定定位*/</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">75</span>px<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">125</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>boxA<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">400</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>A    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>boxB<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>boxC<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/1c4c5b4a/image-20210114224808234.png" alt="css2" style="zoom:50%;"><h3 id="代码：-2"><a href="#代码：-2" class="headerlink" title="代码："></a>代码：</h3><pre class="line-numbers language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector"><span class="token id">#A</span></span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*A使用相对对象，相对浏览器的位置*/</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#B</span></span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*B使用决定对味，以A作为父元素*/</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#C</span></span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*C使用固定定位，固定在浏览器的右下角*/</span>            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>            <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>            <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>A<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>A    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>B<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>C<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-jQuery"><a href="#3-jQuery" class="headerlink" title="3.jQuery:"></a>3.jQuery:</h2><img src="/posts/1c4c5b4a/image-20210114224939028.png" alt="数量增减" style="zoom:50%;"><h3 id="代码：-3"><a href="#代码：-3" class="headerlink" title="代码："></a>代码：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>购买数量:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>minus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>num<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>(当前库存<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>max<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span> )<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//减小</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#minus'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> number <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#num"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>number <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    number<span class="token operator">--</span><span class="token punctuation">;</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#num"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//增加</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#plus"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> number <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#num"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> max <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".max"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>number <span class="token operator">&lt;</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    number<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#num"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/1c4c5b4a/image-20210114225024821.png" alt="image-20210114225024821" style="zoom:33%;"><img src="/posts/1c4c5b4a/image-20210114225159899.png" alt="image-20210114225159899" style="zoom:33%;"><img src="/posts/1c4c5b4a/image-20210114225221115.png" alt="image-20210114225221115" style="zoom:33%;"><h3 id="代码：-4"><a href="#代码：-4" class="headerlink" title="代码："></a>代码：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男装<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>女1装<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--type 默认属性是button reset submit--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#add"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#nav"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;li>童装&lt;/li>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#nav"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token string">"&lt;li>女装&lt;/li>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#nav"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token string">"&lt;li>运动装&lt;/li>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#nav"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token string">"&lt;li>休闲装&lt;/li>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#remove"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#nav"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//$("#nav").remove();</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web知识点复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery编程复习</title>
      <link href="posts/24e222c1/"/>
      <url>posts/24e222c1/</url>
      
        <content type="html"><![CDATA[<h1 id="jQuery编程复习"><a href="#jQuery编程复习" class="headerlink" title="jQuery编程复习"></a>jQuery编程复习</h1><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Jquery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector"><span class="token class">.big-size</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">400</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.normal-size</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">250</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.small-size</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.default-size</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">250</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--    引入js要在调用js之前 ，不然会报错     --></span><span class="token comment" spellcheck="true">&lt;!--    &lt;script type="text/javascript" src="js/jquery-3.1.1.js">&lt;/script>--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>jQuery采用事件改变元素的样式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--照片放大放小--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://gitee.com/fejxc/upic-file/raw/master/Users/sunyun/blog_pic /0SnUg9.png<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BigSurImg<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>default-size<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>big<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>放大<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>normal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>正常<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>缩小<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>alert(<span class="token punctuation">"</span>div<span class="token punctuation">"</span>);<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>事件冒泡和默认行为<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>alert(<span class="token punctuation">"</span>ul<span class="token punctuation">"</span>);<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>alert(<span class="token punctuation">"</span>li<span class="token punctuation">"</span>);<span class="token punctuation">'</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>事件冒泡<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点我会感觉刷新一下哦<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点我感觉不到刷新一下哦<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>库存的增加减少<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>购买数量：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>minus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>num<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>                （当前库存                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>max<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>                ）            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">//根据库存值，来设置前面的输入文本框的值</span>    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//减</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".minus"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> number <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#number"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>number <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                number<span class="token operator">--</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#number"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"至少要购买一件哦！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//加</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".plus"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> number <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#number"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> max <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".max"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//提取最大库存</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>number <span class="token operator">&lt;</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//将字符串转化为数字</span>                number<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#number"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"购买数量已超过最大库存啦！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#inner"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"aaaaaaa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//阻止事件冒泡行为</span>            event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//阻止默认行为,点击a标签后不会跳转到百度</span>            event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">// jQuery采用事件改变元素的样式</span>    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#big"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"放大图片成功啦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//链式编程</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#BigSurImg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"big-size"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#normal"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"恢复正常大小啦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#BigSurImg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#BigSurImg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"normal-size"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//one只会触发一次</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#small"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"缩小大小啦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#BigSurImg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#BigSurImg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"small-size"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果："><a href="#效果：" class="headerlink" title="效果："></a>效果：</h2><img src="/posts/24e222c1/image-20210110141910602.png" alt="实验效果" title="期末GoodLuck！！" style="zoom:80%;">]]></content>
      
      
      <categories>
          
          <category> web知识点复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ip网络实验实训</title>
      <link href="posts/564f714b/"/>
      <url>posts/564f714b/</url>
      
        <content type="html"><![CDATA[<h1 id="实训案例"><a href="#实训案例" class="headerlink" title="实训案例"></a>实训案例</h1><h2 id="1-实验拓扑图："><a href="#1-实验拓扑图：" class="headerlink" title="1.实验拓扑图："></a>1.实验拓扑图：</h2><img src="/posts/564f714b/image-20210105172251919.png" alt="实验拓扑图" style="zoom:80%;"><h2 id="2-数据规划："><a href="#2-数据规划：" class="headerlink" title="2.数据规划："></a>2.数据规划：</h2><p><strong>1、终端设备PC1、PC2、Server1、Server2的IP、子网掩码、默认网关拓扑图中所示。</strong></p><p><strong>2、接入层交换机SW5、SW6、SW7作为二层交换机使用，需要进行VLAN配置具体规划如下表所示：</strong></p><img src="/posts/564f714b/image-20210105172452957.png" alt="具体规划" style="zoom:80%;"><h2 id="3-需求分析"><a href="#3-需求分析" class="headerlink" title="3.需求分析:"></a>3.需求分析:</h2><p><strong>1、部门1和部门2中的用户，既可以通过路由访问内网服务器Server2，也可以通过动态NAT转换访问外网服务器Server1。</strong></p><p><strong>2、不允许内网服务器Server2主动访问外网，但是允许被外网访问。</strong></p><p><strong>3、汇聚层交换机SW3、SW4作为部门1、部门2、IDC的网关所在，实现网关冗余备份，同时为提高网络带宽，增强网络稳定性，在SW3与SW4之间通过两条千兆线路互联，实现链路聚合功能。</strong></p><p><strong>4、通过园区网网关AR1为部门2中的用户提供DHCP服务，使该部门的用户PC可以通过DHCP自动获取地址。（DHCP地址池：172.16.20.100/24–172.16.20.253，网关：172.16.20.254，DNS（主）：202.101.224.68，DNS（备）：202.101.224.69）。</strong></p><h2 id="4-步骤："><a href="#4-步骤：" class="headerlink" title="4.步骤："></a>4.步骤：</h2><pre class="line-numbers language-bash"><code class="language-bash">1、根据数据规划第一条，配置所有终端（PC1、PC2<span class="token punctuation">[</span>设置成DHCP<span class="token punctuation">]</span>、Server1、Server2）IP地址、子网掩码、默认网关。2、根据数据规划第二条，配置所有接入层交换机（SW5、SW6、SW7）的vlan及端口。配置示例：SW5：Sysname SW5undo info-center <span class="token function">enable</span>第一步：全局模式下创建VLAN vlan batch 10第二步：将连接终端的交换机端口配置成Access模式，关联规划的VLANinterface Ethernet0/0/3 port link-type access port default vlan 10quit第三步：将连接其他交换机的交换机端口配置成Trunk模式，并允许相关VLAN通过interface Ethernet0/0/1 port link-type trunk port trunk allow-pass vlan 10quitinterface Ethernet0/0/2 port link-type trunk port trunk allow-pass vlan 10quit3、根据数据规划第三条，配置网关路由器AR1、公网路由器AR2的IP地址AR1配置示例：Sysname AR1undo info-center <span class="token function">enable</span>interface GigabitEthernet0/0/0 ip address 100.1.12.1 255.255.255.248 quitinterface GigabitEthernet0/0/1.13 dot1q termination vid 13 ip address 172.16.13.1 255.255.255.248  arp broadcast <span class="token function">enable</span>quitinterface GigabitEthernet0/0/2.14 dot1q termination vid 14 ip address 172.16.14.1 255.255.255.248  arp broadcast <span class="token function">enable</span>AR2配置示例：Sysname AR2undo info-center <span class="token function">enable</span>interface GigabitEthernet0/0/0 ip address 100.1.12.2 255.255.255.248 quitinterface GigabitEthernet0/0/1 ip address 202.101.224.2 255.255.255.252quit4、根据数据规划第四条，配置汇聚交换机SW3和SW4的二层交换配置及三层IP地址配置。SW3配置示例：Sysname SW3undo info-center <span class="token function">enable</span>二层交换配置：第一步：全局模式下创建需要转发的VLANvlan batch 10 13 20 30 34第二步：创建端口聚合组，并将G0/0/2和G0/0/3两个端口成员加入到聚合组，实现链路聚合interface Eth-Trunk 1quitinterface GigabitEthernet0/0/2 eth-trunk 1quitinterface GigabitEthernet0/0/3 eth-trunk 1quit第三步：将所有的交换机二层端口配置成Trunk模式，并且关联对应的规划VLANinterface GigabitEthernet0/0/1 port link-type trunk port trunk allow-pass vlan 13quitinterface Eth-Trunk 1 port link-type trunk port trunk allow-pass vlan 34quitinterface GigabitEthernet0/0/4 port link-type trunk port trunk allow-pass vlan 10quitinterface GigabitEthernet0/0/5 port link-type trunk port trunk allow-pass vlan 20quitinterface GigabitEthernet0/0/6 port link-type trunk port trunk allow-pass vlan 30quit三层IP地址配置：interface LoopBack 0  //创建loopback 0逻辑接口，配置一个地址用于Router-ID。 ip address 172.16.3.3 255.255.255.255quitinterface Vlanif 10 ip address 172.16.10.3 255.255.255.0quitinterface Vlanif13 ip address 172.16.13.3 255.255.255.248quitinterface Vlanif20 ip address 172.16.20.3 255.255.255.0quitinterface Vlanif30 ip address 172.16.30.3 255.255.255.0quitinterface Vlanif34 ip address 172.16.34.3 255.255.255.248quit5、SW3与SW4、AR1上部署OSPF路由。以SW3为例：ospf 100 router-id 172.16.3.3  //创建OSPF 100进程，并指定Router-ID area 0  //创建骨干区域0，根据规划将指定的直连接口网段宣告进OSPF Area 0  network 172.16.3.3 0.0.0.0  network 172.16.10.0 0.0.0.255  network 172.16.20.0 0.0.0.255  network 172.16.30.0 0.0.0.255  network 172.16.34.0 0.0.0.7quit area 200  //创建常规区域200，根据规划将指定的直连接口网段宣告进OSPF Area 200  network 172.16.13.0 0.0.0.7quitquit附SW4的OSPF路由配置：ospf 100 router-id 172.16.4.4 area 0  network 172.16.4.4 0.0.0.0  network 172.16.10.0 0.0.0.7  network 172.16.20.0 0.0.0.255  network 172.16.30.0 0.0.0.255  network 172.16.34.0 0.0.0.7quit area 200  network 172.16.14.0 0.0.0.7quitquit附AR1的OSPF路由配置：interface LoopBack 0  //如果前面已经配置过，可以省略。 ip address 172.16.1.1 255.255.255.255quitospf 100 router-id 172.16.1.1  area 200   network 172.16.1.1 0.0.0.0   network 172.16.13.0 0.0.0.7   network 172.16.14.0 0.0.0.7 quitquitAR1上配置外网网关（默认路由）：ip route-static 0.0.0.0 0.0.0.0 100.1.12.2 //写一条路由，告诉AR1如果收到了不知道往哪里发送的数据包，就把该数据包发给下一跳100.1.12.2ospf 100  default-route-advertise always  //AR1上重新进入OSPF 100，通过OSPF协议告诉内网其他路由器，收到了不知道往哪里发送的数据包，就把该数据包发给AR1即可。quit6、SW3、SW4上部署VRRP协议SW5、SW6、SW7全局模式下关闭STP协议undo stp <span class="token function">enable</span>A、创建部门1的虚拟网关SW3上配置：interface Vlanif 10vrrp vrid 1 virtual-ip 172.16.10.254  //绑定虚拟IP，该IP不是某个具体接口上的IP地址。vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 50  //如果G0/0/1口断掉了，就执行网关倒换，Reduced代表网关优先级减少多少，即：优先级默认为100，如果G0/0/1断掉了则优先级减50。SW4上配置：interface Vlanif 10vrrp vrid 1 virtual-ip 172.16.10.254vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 51B、创建部门2的虚拟网关SW3上配置：interface Vlanif 20vrrp vrid 1 virtual-ip 172.16.20.254vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 50SW4上配置：interface Vlanif 20vrrp vrid 1 virtual-ip 172.16.20.254vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 51C、创建部门3的虚拟网关SW3上配置：interface Vlanif 30vrrp vrid 1 virtual-ip 172.16.30.254vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 50SW4上配置：interface Vlanif 30vrrp vrid 1 virtual-ip 172.16.30.254vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 517、AR1上部署NAT转换策略acl number 2000  //配置访问控制列表，用于匹配感兴趣的流量（来自部门1和部门2私有地址的流量） rule 10 permit <span class="token function">source</span> 172.16.10.0 0.0.0.255  rule 20 permit <span class="token function">source</span> 172.16.20.0 0.0.0.255quitnat address-group 1 100.1.12.3 100.1.12.5  //配置公网地址池interface GigabitEthernet0/0/0nat outbound 2000 address-group 1  //在WAN口上调用NAT转换规则，将ACL 2000匹配的IP数据包私有源地址通过NAT转换成公有地址池中的地址出去访问外网。nat server global 172.16.30.1 inside 100.1.12.6  //配置一对一转换的NAT Server，该机制用于通过公网访问私网中的服务器，实现内网穿透。nat server global 100.1.12.6 inside 172.16.30.1  //eNSP模拟器BUG，需要配置双向的两条NAT Server才能实现外网访问内网，真机环境下只需配置第一条。quit8、部署DHCP及DHCP中继服务，实现分配地址给部门2中的PC。一、园区网网关AR1路由器上：dhcp <span class="token function">enable</span>  //开启DHCP服务ip pool 1  //配置DHCP服务器相关参数 gateway-list 172.16.20.254   自动下发给PC的网关 network 172.16.20.0 mask 255.255.255.0  自动下发的地址范围 excluded-ip-address 172.16.20.1 172.16.20.99  排除的地址 lease day 0 hour 10 minute 0  租约时间 dns-list 202.101.224.68 202.101.224.69 主备DNSquitinterface GigabitEthernet0/0/1.13  //内网接口上开启DHCP服务，关联全局地址池dhcp <span class="token keyword">select</span> globalquitinterface GigabitEthernet0/0/2.14  //内网接口上开启DHCP服务，关联全局地址池dhcp <span class="token keyword">select</span> globalquit二、部门2网关SW3、SW4上配置DHCP中继服务SW3:interface Vlanif 20 dhcp <span class="token keyword">select</span> relay //开启DHCP中继服务dhcp relay server-ip 172.16.13.1 //指定DHCP服务器所在地址quitSW4：interface Vlanif 20dhcp <span class="token keyword">select</span> relaydhcp relay server-ip 172.16.14.1quit（完结）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-设备配置"><a href="#5-设备配置" class="headerlink" title="5.设备配置:"></a>5.设备配置:</h2><h3 id="AR1"><a href="#AR1" class="headerlink" title="AR1:"></a>AR1:</h3><pre class="line-numbers language-bash"><code class="language-bash">AR1<span class="token operator">></span>dis cur<span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> sysname AR1<span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> undo info-center <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>dhcp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>acl number 2000   rule 10 permit <span class="token function">source</span> 172.16.10.0 0.0.0.255  rule 20 permit <span class="token function">source</span> 172.16.20.0 0.0.0.255 <span class="token comment" spellcheck="true">#</span>ip pool 1 gateway-list 172.16.20.254  network 172.16.20.0 mask 255.255.255.0  excluded-ip-address 172.16.20.1 172.16.20.99  lease day 7 hour 0 minute 0  dns-list 202.101.224.68 202.101.224.69 <span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span> nat address-group 1 100.1.12.3 100.1.12.5<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 100.1.12.1 255.255.255.248  nat server global 172.16.30.1 inside 100.1.12.6 nat server global 100.1.12.6 inside 172.16.30.1 nat outbound 2000 address-group 1 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0.13<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1.13 dot1q termination vid 13 ip address 172.16.13.1 255.255.255.248  arp broadcast <span class="token function">enable</span> dhcp <span class="token keyword">select</span> global<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1.20<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2.14 ip address 172.16.14.1 255.255.255.248  dhcp <span class="token keyword">select</span> global<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>interface LoopBack0 ip address 172.16.1.1 255.255.255.255 <span class="token comment" spellcheck="true">#</span>ospf 100 router-id 172.16.1.1  default-route-advertise always area 0.0.0.200   network 172.16.1.1 0.0.0.0   network 172.16.13.0 0.0.0.7   network 172.16.14.0 0.0.0.7 <span class="token comment" spellcheck="true">#</span>ip route-static 0.0.0.0 0.0.0.0 100.1.12.2<span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AR2"><a href="#AR2" class="headerlink" title="AR2:"></a>AR2:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>AR2<span class="token operator">></span>dis cur<span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> sysname AR2<span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> undo info-center <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 100.1.12.2 255.255.255.248 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 202.101.224.2 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode password<span class="token operator">&lt;</span>AR2<span class="token operator">></span>  Please check whether system data has been changed, and save data <span class="token keyword">in</span> <span class="token function">time</span>  Configuration console <span class="token function">time</span> out, please press any key to log on<span class="token operator">&lt;</span>AR2<span class="token operator">></span>dis cur<span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> sysname AR2<span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> undo info-center <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 100.1.12.2 255.255.255.248 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 202.101.224.2 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SW3"><a href="#SW3" class="headerlink" title="SW3:"></a>SW3:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>SW3<span class="token operator">></span>dis cur<span class="token comment" spellcheck="true">#</span>sysname SW3<span class="token comment" spellcheck="true">#</span>undo info-center <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>vlan batch 10 13 to 14 20 30 34 40<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>dhcp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface Vlanif10 ip address 172.16.10.3 255.255.255.0 vrrp vrid 1 virtual-ip 172.16.10.254 vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 50<span class="token comment" spellcheck="true">#</span>interface Vlanif13 ip address 172.16.13.3 255.255.255.248<span class="token comment" spellcheck="true">#</span>interface Vlanif20 ip address 172.16.20.3 255.255.255.0 vrrp vrid 1 virtual-ip 172.16.20.254 vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 50 dhcp <span class="token keyword">select</span> relay dhcp relay server-ip 172.16.13.1<span class="token comment" spellcheck="true">#</span>interface Vlanif30 ip address 172.16.30.3 255.255.255.0 vrrp vrid 1 virtual-ip 172.16.30.254 vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 50<span class="token comment" spellcheck="true">#</span>interface Vlanif34 ip address 172.16.34.3 255.255.255.248<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface Eth-Trunk1 port link-type trunk port trunk allow-pass vlan 34<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 port link-type trunk port trunk allow-pass vlan 13<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 eth-trunk 1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/3 eth-trunk 1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/4 port link-type trunk port trunk allow-pass vlan 10<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/5 port link-type trunk port trunk allow-pass vlan 20<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/6 port link-type trunk port trunk allow-pass vlan 30<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/7<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/8<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/9<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/10<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/11<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/12<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/13<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/14<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/16<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/17<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/18<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/19<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/20<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/21<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/22<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/23<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/24<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>interface LoopBack0 ip address 172.16.3.3 255.255.255.255<span class="token comment" spellcheck="true">#</span>ospf 100 router-id 172.16.3.3 area 0.0.0.0  network 172.16.3.3 0.0.0.0  network 172.16.10.0 0.0.0.255  network 172.16.20.0 0.0.0.255  network 172.16.30.0 0.0.0.255  network 172.16.34.0 0.0.0.7 area 0.0.0.200  network 172.16.13.0 0.0.0.7<span class="token comment" spellcheck="true">#</span>user-interface con 0user-interface vty 0 4<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token operator">&lt;</span>SW3<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SW4"><a href="#SW4" class="headerlink" title="SW4:"></a>SW4:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>SW4<span class="token operator">></span>dis cur<span class="token comment" spellcheck="true">#</span>sysname SW4<span class="token comment" spellcheck="true">#</span>undo info-center <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>vlan batch 10 13 to 14 20 30 34<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>dhcp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface Vlanif10 ip address 172.16.10.4 255.255.255.0 vrrp vrid 1 virtual-ip 172.16.10.254 vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 51<span class="token comment" spellcheck="true">#</span>interface Vlanif13<span class="token comment" spellcheck="true">#</span>interface Vlanif14 ip address 172.16.14.4 255.255.255.248<span class="token comment" spellcheck="true">#</span>interface Vlanif20 ip address 172.16.20.4 255.255.255.0 vrrp vrid 1 virtual-ip 172.16.20.254 vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 51 dhcp <span class="token keyword">select</span> relay dhcp relay server-ip 172.16.14.1<span class="token comment" spellcheck="true">#</span>interface Vlanif30 ip address 172.16.30.4 255.255.255.0 vrrp vrid 1 virtual-ip 172.16.30.254 vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 51<span class="token comment" spellcheck="true">#</span>interface Vlanif34 ip address 172.16.34.4 255.255.255.248<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface Eth-Trunk1 port link-type trunk port trunk allow-pass vlan 34<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 port link-type trunk port trunk allow-pass vlan 13<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 eth-trunk 1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/3 eth-trunk 1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/4 port link-type trunk port trunk allow-pass vlan 10<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/5 port link-type trunk port trunk allow-pass vlan 20<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/6 port link-type trunk port trunk allow-pass vlan 30<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/7<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/8<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/9<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/10<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/11<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/12<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/13<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/14<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/16<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/17<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/18<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/19<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/20<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/21<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/22<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/23<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/24<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>interface LoopBack0 ip address 172.16.4.4 255.255.255.255<span class="token comment" spellcheck="true">#</span>ospf 100 router-id 172.16.4.4 area 0.0.0.0  network 172.16.4.4 0.0.0.0  network 172.16.10.0 0.0.0.255  network 172.16.20.0 0.0.0.255  network 172.16.30.0 0.0.0.255  network 172.16.34.0 0.0.0.7 area 0.0.0.200  network 172.16.14.0 0.0.0.7<span class="token comment" spellcheck="true">#</span>user-interface con 0user-interface vty 0 4<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token operator">&lt;</span>SW4<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SW5"><a href="#SW5" class="headerlink" title="SW5:"></a>SW5:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>SW5<span class="token operator">></span>dis cur<span class="token comment" spellcheck="true">#</span>sysname SW5<span class="token comment" spellcheck="true">#</span>undo info-center <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>vlan batch 10<span class="token comment" spellcheck="true">#</span>stp disable<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/1 port link-type trunk port trunk allow-pass vlan 10<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/2 port link-type trunk port trunk allow-pass vlan 10<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/3 port link-type access port default vlan 10<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/4<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/5<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/6<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/7<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/8<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/9<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/10<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/11<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/12<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/13<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/14<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/15<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/16<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/17<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/18<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/19<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/20<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/21<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/22<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>user-interface con 0user-interface vty 0 4<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SW6"><a href="#SW6" class="headerlink" title="SW6:"></a>SW6:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>SW6<span class="token operator">></span>dis cur<span class="token comment" spellcheck="true">#</span>sysname SW6<span class="token comment" spellcheck="true">#</span>undo info-center <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>vlan batch 20<span class="token comment" spellcheck="true">#</span>stp disable<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/1 port link-type trunk port trunk allow-pass vlan 20<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/2 port link-type trunk port trunk allow-pass vlan 20<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/3 port link-type access port default vlan 20<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/4<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/5<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/6<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/7<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/8<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/9<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/10<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/11<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/12<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/13<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/14<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/15<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/16<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/17<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/18<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/19<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/20<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/21<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/22<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>user-interface con 0user-interface vty 0 4<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token operator">&lt;</span>SW6<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SW7"><a href="#SW7" class="headerlink" title="SW7:"></a>SW7:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>SW7<span class="token operator">></span>dis cur<span class="token comment" spellcheck="true">#</span>sysname SW7<span class="token comment" spellcheck="true">#</span>vlan batch 30<span class="token comment" spellcheck="true">#</span>stp disable<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/1 port link-type trunk port trunk allow-pass vlan 30<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/2 port link-type trunk port trunk allow-pass vlan 30<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/3 port link-type access port default vlan 30<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/4<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/5<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/6<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/7<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/8<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/9<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/10<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/11<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/12<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/13<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/14<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/15<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/16<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/17<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/18<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/19<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/20<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/21<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/22<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>user-interface con 0user-interface vty 0 4<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token operator">&lt;</span>SW7<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-实现效果："><a href="#6-实现效果：" class="headerlink" title="6.实现效果："></a>6.实现效果：</h2><img src="/posts/564f714b/image-20210105183308901.png" alt="PC2(DHCP)" style="zoom:80%;"><img src="/posts/564f714b/image-20210105183534774.png" alt="PC1-ping-PC2" style="zoom:80%;"><img src="/posts/564f714b/image-20210105183644397.png" alt="PC1-ping-Server1/2" style="zoom:80%;"><img src="/posts/564f714b/image-20210105183741663.png" alt="PC2-ping-Server1/2" style="zoom:80%;"><h3 id="SW5的g0-0-1口未断的时候：流量全部经过SW3"><a href="#SW5的g0-0-1口未断的时候：流量全部经过SW3" class="headerlink" title="SW5的g0/0/1口未断的时候：流量全部经过SW3"></a>SW5的g0/0/1口未断的时候：流量全部经过SW3</h3><img src="/posts/564f714b/image-20210105183959194.png" alt="SW3" style="zoom:80%;"><img src="/posts/564f714b/image-20210105184139418.png" alt="SW4" style="zoom:80%;"><h3 id="SW5的g0-0断的时候："><a href="#SW5的g0-0断的时候：" class="headerlink" title="SW5的g0/0断的时候："></a>SW5的g0/0断的时候：</h3><img src="/posts/564f714b/image-20210105184340794.png" alt="SW3" style="zoom:80%;"><img src="/posts/564f714b/image-20210105184407433.png" alt="SW4" style="zoom:80%;"><img src="/posts/564f714b/image-20210105184521850.png" alt="SW3" style="zoom:80%;"><h3 id="恢复SW5的g0-0-01"><a href="#恢复SW5的g0-0-01" class="headerlink" title="恢复SW5的g0/0/01:"></a>恢复SW5的g0/0/01:</h3><img src="/posts/564f714b/image-20210105185003899.png" alt="SW3" style="zoom:80%;"><img src="/posts/564f714b/image-20210105185027070.png" alt="SW4" style="zoom:80%;"><h3 id="小知识点："><a href="#小知识点：" class="headerlink" title="小知识点："></a>小知识点：</h3><p><strong>1.浮动路由默认是优先级是60，越小越优先，如果是第二条路由优先级是比默认的要大，一般配置60以上</strong></p><pre class="line-numbers language-BASH"><code class="language-BASH">[R1]ip route-static 192.168.10.0 255.255.255.0 11.0.0.2  #默认是60[R1]ip route-static 192.168.10.0 255.255.255.0 12.0.0.2 preference 70  # 上面的路宕了该条路由信息会自动写进路由表，路就会飘到12.0.0.2接口上[R1]ip route-static 192.168.20.0 255.255.255.0 12.0.0.2[R1]ip route-static 192.168.20.0 255.255.255.0 11.0.0.2 preference 70<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol><li><strong>ARRP 优先级范围1-254 数值越大越优先，所以主ARRP优先级配置比备路由ARRP优先级数值大</strong></li><li><code>[sw1-Vlanif20]dhcp relay server-ip 192.168.100.1 Error: Please configure dhcp select relay first. [sw1-Vlanif20]dhcp select relay Error: Please enable DHCP in the global view first. [sw1-Vlanif20]q [sw1]dhcp enable  在交换机全局下开启dhcp，后面就能正常配置了。但dhcp服务器配置在路由器上了，并且在路由器上开启过dhcp enable了，这里交换机为什么还要在次开启呢 ？ [sw1-Vlanif20]dhcp select relay 这里就正常了 [sw1-Vlanif20]dhcp relay server-ip 192.168.100.1</code></li></ol><h3 id="将vlanif10的流量走SW4："><a href="#将vlanif10的流量走SW4：" class="headerlink" title="将vlanif10的流量走SW4："></a>将vlanif10的流量走SW4：</h3><p>设置SW3的vlanif10的 arrp优先级小于SW4的vlanif10的 arrp优先值（默认是100）</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>SW3-Vlanif10<span class="token punctuation">]</span>dis this<span class="token comment" spellcheck="true">#</span>interface Vlanif10 ip address 172.16.10.3 255.255.255.0 vrrp vrid 1 virtual-ip 172.16.10.254 vrrp vrid 1 priority 90 vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 50<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token punctuation">[</span>SW3-Vlanif10<span class="token punctuation">]</span><span class="token punctuation">[</span>SW3-Vlanif10<span class="token punctuation">]</span>dis vrrp briefVRID  State        Interface                Type     Virtual IP     ----------------------------------------------------------------1     Backup       Vlanif10                 Normal   172.16.10.254  1     Master       Vlanif20                 Normal   172.16.20.254  1     Master       Vlanif30                 Normal   172.16.30.254  ----------------------------------------------------------------Total:3     Master:2     Backup:1     Non-active:0   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>SW4-Vlanif10<span class="token punctuation">]</span>dis this<span class="token comment" spellcheck="true">#</span>interface Vlanif10 ip address 172.16.10.4 255.255.255.0 vrrp vrid 1 virtual-ip 172.16.10.254 vrrp vrid 1 priority 105 vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 51<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token punctuation">[</span>SW4-Vlanif10<span class="token punctuation">]</span><span class="token punctuation">[</span>SW4-Vlanif10<span class="token punctuation">]</span>dis vrrp briefVRID  State        Interface                Type     Virtual IP     ----------------------------------------------------------------1     Master       Vlanif10                 Normal   172.16.10.254  1     Backup       Vlanif20                 Normal   172.16.20.254  1     Backup       Vlanif30                 Normal   172.16.30.254  ----------------------------------------------------------------Total:3     Master:1     Backup:2     Non-active:0     <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="将vlanif30的流量走SW4："><a href="#将vlanif30的流量走SW4：" class="headerlink" title="将vlanif30的流量走SW4："></a>将vlanif30的流量走SW4：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>SW3-Vlanif30<span class="token punctuation">]</span>vrrp vrid 1 priority 80<span class="token punctuation">[</span>SW3-Vlanif30<span class="token punctuation">]</span><span class="token punctuation">[</span>SW3-Vlanif30<span class="token punctuation">]</span>dis this<span class="token comment" spellcheck="true">#</span>interface Vlanif30 ip address 172.16.30.3 255.255.255.0 vrrp vrid 1 virtual-ip 172.16.30.254 vrrp vrid 1 priority 80 vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 50<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token punctuation">[</span>SW3-Vlanif30<span class="token punctuation">]</span>dis vrrp briefVRID  State        Interface                Type     Virtual IP     ----------------------------------------------------------------1     Backup       Vlanif10                 Normal   172.16.10.254  1     Master       Vlanif20                 Normal   172.16.20.254  1     Backup       Vlanif30                 Normal   172.16.30.254  ----------------------------------------------------------------Total:3     Master:1     Backup:2     Non-active:0     <span class="token punctuation">[</span>SW3-Vlanif30<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>SW4-Vlanif10<span class="token punctuation">]</span>int vlanif 30<span class="token punctuation">[</span>SW4-Vlanif30<span class="token punctuation">]</span>dis this<span class="token comment" spellcheck="true">#</span>interface Vlanif30 ip address 172.16.30.4 255.255.255.0 vrrp vrid 1 virtual-ip 172.16.30.254 vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 51<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token punctuation">[</span>SW4-Vlanif30<span class="token punctuation">]</span>dis vrrp briefVRID  State        Interface                Type     Virtual IP     ----------------------------------------------------------------1     Master       Vlanif10                 Normal   172.16.10.254  1     Backup       Vlanif20                 Normal   172.16.20.254  1     Master       Vlanif30                 Normal   172.16.30.254  ----------------------------------------------------------------Total:3     Master:2     Backup:1     Non-active:0     <span class="token punctuation">[</span>SW4-Vlanif30<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ip网络实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ip网络实验9</title>
      <link href="posts/e4f16d43/"/>
      <url>posts/e4f16d43/</url>
      
        <content type="html"><![CDATA[<h1 id="NAT地址转换"><a href="#NAT地址转换" class="headerlink" title="NAT地址转换"></a>NAT地址转换</h1><h2 id="1-实验拓扑图："><a href="#1-实验拓扑图：" class="headerlink" title="1.实验拓扑图："></a>1.实验拓扑图：</h2><img src="/posts/e4f16d43/image-20210103203545478.png" alt="实验拓扑图" style="zoom:80%;"><h2 id="2-实验目的："><a href="#2-实验目的：" class="headerlink" title="2.实验目的："></a>2.实验目的：</h2><p><strong>pc1，pc2，pc3，都是私网地址，LSW1不设置静态路由的前提下，通过AR1设置nat地址转换，将pc1-pc3的ip地址转换成功公网地址，实现pc1-pc3与pc6之间的通信，可以互通。</strong></p><h2 id="3-实验配置代码"><a href="#3-实验配置代码" class="headerlink" title="3.实验配置代码;"></a>3.实验配置代码;</h2><h3 id="LSW1"><a href="#LSW1" class="headerlink" title="LSW1:"></a>LSW1:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>LSW1<span class="token punctuation">]</span>dis cur<span class="token comment" spellcheck="true">#</span>sysname LSW1<span class="token comment" spellcheck="true">#</span>vlan batch 100 200 300 400<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 port link-type trunk port trunk allow-pass vlan 100 200 300<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 port link-type access port default vlan 100<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/3 port link-type access port default vlan 200<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/4 port link-type access port default vlan 300<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/5<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/6<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/7<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/8<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/9<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/10<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/11<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/12<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/13<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/14<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/16<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/17<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/18<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/19<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/20<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/21<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/22<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/23<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/24<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>user-interface con 0user-interface vty 0 4<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token punctuation">[</span>LSW1<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AR1"><a href="#AR1" class="headerlink" title="AR1:"></a>AR1:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis cur<span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> sysname AR1<span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>vlan batch 100 200 300<span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>acl number 2000   rule 10 permit <span class="token function">source</span> 192.168.1.0 0.0.0.255  rule 20 permit <span class="token function">source</span> 192.168.2.0 0.0.0.255 <span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span> nat address-group 1 2.2.2.10 2.2.2.20<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0.100 dot1q termination vid 100 ip address 192.168.1.1 255.255.255.0  arp broadcast <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0.200 dot1q termination vid 200 ip address 192.168.2.1 255.255.255.0  arp broadcast <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0.300 dot1q termination vid 300 ip address 192.168.3.1 255.255.255.0  arp broadcast <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 2.2.2.1 255.255.255.0  nat server global 2.2.2.22 inside 192.168.3.2 nat outbound 2000 address-group 1 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>ip route-static 172.16.1.0 255.255.255.0 2.2.2.2<span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AR2"><a href="#AR2" class="headerlink" title="AR2:"></a>AR2:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>AR2<span class="token punctuation">]</span>dis cur<span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> sysname AR2<span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 172.16.1.1 255.255.255.0 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 2.2.2.2 255.255.255.0 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>ip route-static 192.168.1.0 255.255.255.0 2.2.2.1ip route-static 192.168.2.0 255.255.255.0 2.2.2.1ip route-static 192.168.3.0 255.255.255.0 2.2.2.1<span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token punctuation">[</span>AR2<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-注意："><a href="#4-注意：" class="headerlink" title="4.注意："></a>4.注意：</h2><p><strong>1.<code>interface GigabitEthernet0/0/0 interface GigabitEthernet0/0/0.100  arp broadcast enable</code> arp broadcast不要忘记设置了，不然pc1-3是不能ping通pc6</strong></p><p><strong>2.<code>dis nat session all</code> 查看na地址转化表，需要在pc机挂长ping 带上参数（-t），才会有</strong></p><h2 id="5-实验效果："><a href="#5-实验效果：" class="headerlink" title="5.实验效果："></a>5.实验效果：</h2><img src="/posts/e4f16d43/image-20210103204625349.png" alt="image-20210103204625349" style="zoom:80%;"><img src="/posts/e4f16d43/image-20210103204841544.png" alt="image-20210103204841544" style="zoom:80%;">]]></content>
      
      
      <categories>
          
          <category> ip网络实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ip网络实验8</title>
      <link href="posts/93f65dd5/"/>
      <url>posts/93f65dd5/</url>
      
        <content type="html"><![CDATA[<h1 id="DHCP服务访"><a href="#DHCP服务访" class="headerlink" title="DHCP服务访"></a>DHCP服务访</h1><h2 id="1-实验拓扑："><a href="#1-实验拓扑：" class="headerlink" title="1.实验拓扑："></a>1.实验拓扑：</h2><img src="/posts/93f65dd5/image-20210102192059873.png" alt="实验拓扑图" style="zoom:80%;"><h2 id="2-实验目的："><a href="#2-实验目的：" class="headerlink" title="2.实验目的："></a>2.实验目的：</h2><p><strong>1、实现pc1，pc2，pc3，动态获取ip地址，pc4动态获取ip地址为172.16.2.5</strong></p><p><strong>2、打通pc之间和Server1的互通</strong></p><h2 id="3-实验配置代码："><a href="#3-实验配置代码：" class="headerlink" title="3.实验配置代码："></a>3.实验配置代码：</h2><h3 id="LSW1："><a href="#LSW1：" class="headerlink" title="LSW1："></a>LSW1：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>LSW1<span class="token operator">></span>dis cur<span class="token comment" spellcheck="true">#</span>sysname LSW1<span class="token comment" spellcheck="true">#</span>vlan batch 100 200 300 400<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>dhcp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface Vlanif100 ip address 192.168.1.1 255.255.255.0 dhcp <span class="token keyword">select</span> interface dhcp server excluded-ip-address 192.168.1.200 192.168.1.253 dhcp server dns-list 202.101.224.68<span class="token comment" spellcheck="true">#</span>interface Vlanif200 ip address 192.168.2.1 255.255.255.0 dhcp <span class="token keyword">select</span> interface dhcp server excluded-ip-address 192.168.2.200 192.168.2.253 dhcp server dns-list 202.101.224.68<span class="token comment" spellcheck="true">#</span>interface Vlanif300 ip address 192.168.3.1 255.255.255.0 dhcp <span class="token keyword">select</span> interface dhcp server excluded-ip-address 192.168.3.200 192.168.3.253 dhcp server dns-list 202.101.224.68<span class="token comment" spellcheck="true">#</span>interface Vlanif400 ip address 1.1.1.1 255.255.255.252<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 port link-type access port default vlan 400<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 port link-type access port default vlan 100<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/3 port link-type access port default vlan 200<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/4 port link-type access port default vlan 300<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/5<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/6<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/7<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/8<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/9<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/10<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/11<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/12<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/13<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/14<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/16<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/17<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/18<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/19<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/20<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/21<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/22<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/23<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/24<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>ip route-static 0.0.0.0 0.0.0.0 1.1.1.2<span class="token comment" spellcheck="true">#</span>user-interface con 0user-interface vty 0 4<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AR1"><a href="#AR1" class="headerlink" title="AR1:"></a>AR1:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>AR1<span class="token operator">></span>dis cur<span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> sysname AR1<span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>dhcp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 1.1.1.2 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 2.2.2.1 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>ip route-static 172.16.1.0 255.255.255.0 2.2.2.2ip route-static 172.16.2.0 255.255.255.0 2.2.2.2ip route-static 172.16.3.0 255.255.255.0 2.2.2.2ip route-static 192.168.1.0 255.255.255.0 1.1.1.1ip route-static 192.168.2.0 255.255.255.0 1.1.1.1ip route-static 192.168.3.0 255.255.255.0 1.1.1.1<span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token operator">&lt;</span>AR1<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AR2"><a href="#AR2" class="headerlink" title="AR2:"></a>AR2:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>AR2<span class="token operator">></span>dis cur<span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> sysname AR2<span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>dhcp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>ip pool server gateway-list 172.16.2.1  network 172.16.2.0 mask 255.255.255.0  static-bind ip-address 172.16.2.5 mac-address 5489-98ee-4ca2  lease day 8 hour 0 minute 0 <span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 172.16.1.1 255.255.255.0 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 2.2.2.2 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 ip address 172.16.2.1 255.255.255.0  dhcp <span class="token keyword">select</span> global<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>ip route-static 192.168.1.0 255.255.255.0 2.2.2.1ip route-static 192.168.2.0 255.255.255.0 2.2.2.1ip route-static 192.168.3.0 255.255.255.0 2.2.2.1<span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token operator">&lt;</span>AR2<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-问题总结"><a href="#4-问题总结" class="headerlink" title="4.问题总结;"></a>4.问题总结;</h2><p>配置的过程中pc2不能获取到ip地址和网关信息，因为g0/0/3的口没有开（up）</p><p>可以通过<code>dis ip int brief</code> 查看接口状态：</p><img src="/posts/93f65dd5/image-20210102192851516.png" alt style="zoom:50%;"><h2 id="5-实验效果："><a href="#5-实验效果：" class="headerlink" title="5.实验效果："></a>5.实验效果：</h2><img src="/posts/93f65dd5/image-20210102193024958.png" alt="image-20210102193024958" style="zoom:50%;"><img src="/posts/93f65dd5/image-20210102193205142.png" alt="image-20210102193205142" style="zoom:50%;"><img src="/posts/93f65dd5/image-20210102193229519.png" alt="image-20210102193229519" style="zoom:50%;"><img src="/posts/93f65dd5/image-20210102193258459.png" alt="image-20210102193258459" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> ip网络实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ip网络实验7</title>
      <link href="posts/3494044/"/>
      <url>posts/3494044/</url>
      
        <content type="html"><![CDATA[<h1 id="ACL访问控制"><a href="#ACL访问控制" class="headerlink" title="ACL访问控制"></a>ACL访问控制</h1><h2 id="1-实验拓扑图："><a href="#1-实验拓扑图：" class="headerlink" title="1.实验拓扑图："></a>1.实验拓扑图：</h2><img src="/posts/3494044/image-20210102150341560.png" alt="拓扑图" style="zoom:50%;"><img src="/posts/3494044/image-20210102152412561.png" alt="Server1" style="zoom:50%;"><h2 id="2-实验目的："><a href="#2-实验目的：" class="headerlink" title="2.实验目的："></a>2.实验目的：</h2><p><strong>1.在LSW1上设置vlanif子接口</strong></p><p><strong>2.在AR1设置acl，实现pc1不能ping通Server1</strong></p><pre class="line-numbers language-bash"><code class="language-bash">acl 3000rule 5 deny icmp <span class="token function">source</span> 192.168.1.0 0.0.0.255 destination 172.16.1.0 0.0.0.255 rule 10 permit ip <span class="token function">source</span> any destination anyg0/0/0: traffic-filter inbound acl 3000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-配置代码："><a href="#3-配置代码：" class="headerlink" title="3.配置代码："></a>3.配置代码：</h2><h3 id="AR1："><a href="#AR1：" class="headerlink" title="AR1："></a>AR1：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis cur<span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> sysname AR1<span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load flash:/portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> wlan ac-global carrier <span class="token function">id</span> other ac <span class="token function">id</span> 0<span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>acl number 3000   rule 5 deny icmp <span class="token function">source</span> 192.168.1.0 0.0.0.255 destination 172.16.1.0 0.0.0.255  rule 10 permit ip <span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 1.1.1.2 255.255.255.252  traffic-filter inbound acl 3000<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 2.2.2.1 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>ip route-static 172.16.1.0 255.255.255.0 2.2.2.2ip route-static 192.168.1.0 255.255.255.0 1.1.1.1ip route-static 192.168.2.0 255.255.255.0 1.1.1.1ip route-static 192.168.3.0 255.255.255.0 1.1.1.1<span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AR2"><a href="#AR2" class="headerlink" title="AR2:"></a>AR2:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>AR2<span class="token punctuation">]</span>dis cur<span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> sysname AR2<span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load flash:/portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> wlan ac-global carrier <span class="token function">id</span> other ac <span class="token function">id</span> 0<span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 172.16.1.1 255.255.255.0 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 2.2.2.2 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>ip route-static 192.168.1.0 255.255.255.0 2.2.2.1ip route-static 192.168.2.0 255.255.255.0 2.2.2.1ip route-static 192.168.3.0 255.255.255.0 2.2.2.1<span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="LSW1"><a href="#LSW1" class="headerlink" title="LSW1:"></a>LSW1:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>LSW1<span class="token operator">></span>dis cur<span class="token comment" spellcheck="true">#</span>sysname LSW1<span class="token comment" spellcheck="true">#</span>vlan batch 100 200 300 400<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface Vlanif100 ip address 192.168.1.1 255.255.255.0<span class="token comment" spellcheck="true">#</span>interface Vlanif200 ip address 192.168.2.1 255.255.255.0<span class="token comment" spellcheck="true">#</span>interface Vlanif300 ip address 192.168.3.1 255.255.255.0<span class="token comment" spellcheck="true">#</span>interface Vlanif400 ip address 1.1.1.1 255.255.255.252<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 port link-type access port default vlan 400<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 port link-type access port default vlan 100<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/3 port link-type access port default vlan 200<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/4 port link-type access port default vlan 300<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/5<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/6<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/7<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/8<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/9<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/10<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/11<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/12<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/13<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/14<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/16<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/17<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/18<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/19<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/20<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/21<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/22<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/23<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/24<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>ip route-static 0.0.0.0 0.0.0.0 1.1.1.2<span class="token comment" spellcheck="true">#</span>user-interface con 0user-interface vty 0 4<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-注意："><a href="#4-注意：" class="headerlink" title="4.注意："></a>4.注意：</h2><p><strong>1.在配置LSW1的时候不要忘记设置默认静态路由</strong></p><p><code>ip route-static 0.0.0.0 0.0.0.0 1.1.1.2</code></p><p><strong>不然pc1，pc2，pc3是不能凭通server1的</strong></p><p><strong>2.设置acl的时候，源地址和目的地址都是设置的反掩码</strong></p><h2 id="5-实验效果："><a href="#5-实验效果：" class="headerlink" title="5.实验效果："></a>5.实验效果：</h2><img src="/posts/3494044/image-20210102152234038.png" alt="PC1" style="zoom:50%;"><img src="/posts/3494044/image-20210102152256173.png" alt="PC3" style="zoom:50%;"><img src="/posts/3494044/image-20210102152333231.png" alt="PC2" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> ip网络实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译原理期末考试重点</title>
      <link href="posts/b53a8168/"/>
      <url>posts/b53a8168/</url>
      
        <content type="html"><![CDATA[<h1 id="编译原理期末考试重点"><a href="#编译原理期末考试重点" class="headerlink" title="编译原理期末考试重点"></a>编译原理期末考试重点</h1><img src="/posts/b53a8168/image-20201230203855254.png" alt="考试分值分布" style="zoom: 33%;"><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="1-编译器的构造原理（15分）"><a href="#1-编译器的构造原理（15分）" class="headerlink" title="1.编译器的构造原理（15分）"></a>1.编译器的构造原理（15分）</h3><img src="/posts/b53a8168/image-20201230204145498.png" alt="编译的7个阶段" style="zoom:50%;"><p>分几个工作阶段，及各个阶段的作用，加上你上机的体会，宏观的理解。</p><p>字数要求<code>200</code>字以上<code>300</code>字以下</p><img src="/posts/b53a8168/image-20210115211257504.png" alt="image-20210115211257504" style="zoom:50%;"><pre class="line-numbers language-markdown"><code class="language-markdown">典型的编译器可以划分成七个主要的逻辑阶段，分别是词法分析器、语法分析器、语义分析器、中间代码生成器、独立于机器的代码优化器、代码生成器、依赖于机器的代码优化器。各阶段的主要功能：（1）词法分析器：词法分析阅读构成源程序的字符流，按编程语言的词法规则把它们组成词法记号流。（2）语法分析器：按编程语言的语法规则检查词法分析输出的记号流是否符合这些规则，并依据这些规则所体现出的该语言的各种语言构造的层次性，用各记号的第一元建成一种树形的中间表示，这个中间表示用抽象语法的方式描绘了该记号流的语法情况。（3）语义分析器：使用语法树和符号表中的信息，依据语言定义来检查源程序的语义一致性，以保证程序各部分能有意义地结合在一起。它还收集类型信息，把它们保存在符号表或语法树中。（4）中间代码生成器:为源程序产生更低级的显示中间表示，可以认为这种中间表示是一种抽象机的程序。（5）独立于机器的代码优化器：试图改进中间代码，以便产生较好的目标代码。通常，较好是指执行较快，但也可能是其他目标，如目标代码较短或目标代码执行时能耗较低。（6）代码生成器：取源程序的一种中间表示作为输入并把它映射到一种目标语言。如果目标语言是机器代码，则需要为源程序所用的变量选择寄存器或内存单元，然后把中间指令序列翻译为完成同样任务的机器指令序列。（7）依赖于机器的代码优化器：试图改进目标机器代码，以便产生较好的目标机器代码。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="1、大题-DFA"><a href="#1、大题-DFA" class="headerlink" title="1、大题 DFA"></a>1、大题 DFA</h3><p>正规式—NFA—-DFA</p><p>核心 ：子集构造法</p><img src="/posts/b53a8168/image-20201230212247331.png" alt="NFA-DFA（带e边）" style="zoom:50%;"><img src="/posts/b53a8168/image-20201230212325281.png" alt="NFA-DFA（不带e边0" style="zoom:50%;"><p><a href="https://fejxc.gitee.io/posts/6769be3f/" target="_blank" rel="noopener">例题参考</a></p><h3 id="2、简答题"><a href="#2、简答题" class="headerlink" title="2、简答题"></a>2、简答题</h3><p>正规式—NFA—-DFA–最简DFA</p><h2 id="第三章-重点"><a href="#第三章-重点" class="headerlink" title="第三章(重点)"></a><code>第三章</code>(重点)</h2><h3 id="1、大题：语法分析"><a href="#1、大题：语法分析" class="headerlink" title="1、大题：语法分析"></a>1、大题：语法分析</h3><p>LL（1）、SLR（1）、LR（1）  三个随机考一个</p><h5 id="LL1"><a href="#LL1" class="headerlink" title="LL1:"></a>LL1:</h5><img src="/posts/b53a8168/image-20201230211132802.png" alt="LL(1)" style="zoom:50%;"><h5 id="SLR1"><a href="#SLR1" class="headerlink" title="SLR1:"></a>SLR1:</h5><img src="/posts/b53a8168/image-20201230211327509.png" alt="SLR1" style="zoom:50%;"><img src="/posts/b53a8168/image-20201230211443744.png" alt="SLR1例题" style="zoom:50%;"><img src="/posts/b53a8168/image-20210115203112961.png" alt="SLR（1）分析表" style="zoom:40%;"><h5 id="SLR-1-例题2"><a href="#SLR-1-例题2" class="headerlink" title="SLR(1)例题2:"></a>SLR(1)例题2:</h5><img src="/posts/b53a8168/image-20210115203256964.png" alt="SLR(1)例题2" style="zoom:40%;"><img src="/posts/b53a8168/image-20210115203324648.png" alt="转换图" style="zoom:40%;"><img src="/posts/b53a8168/image-20210115203401137.png" alt="SLR（1）分析表" style="zoom:40%;"><h5 id="LR1"><a href="#LR1" class="headerlink" title="LR1:"></a>LR1:</h5><img src="/posts/b53a8168/image-20201230211559357.png" alt="LR1" style="zoom:50%;"><img src="/posts/b53a8168/image-20201230211619682.png" alt="LR1" style="zoom:50%;"><h3 id="2、简答题-1"><a href="#2、简答题-1" class="headerlink" title="2、简答题"></a>2、简答题</h3><ul><li><p>消除二义性</p><img src="/posts/b53a8168/image-20210115203456711.png" alt="image-20210115203456711" style="zoom:80%;"></li><li><p>消除左递归</p><img src="/posts/b53a8168/image-20210115203511930.png" alt="image-20210115203511930" style="zoom:80%;"></li><li><p>提左因子</p><img src="/posts/b53a8168/image-20210115203523236.png" alt="image-20210115203523236" style="zoom:80%;"></li></ul><h3 id="3、填空3分"><a href="#3、填空3分" class="headerlink" title="3、填空3分"></a>3、填空3分</h3><h5 id="ll1文法性质"><a href="#ll1文法性质" class="headerlink" title="ll1文法性质"></a>ll1文法性质</h5><img src="/posts/b53a8168/image-20201230211810092.png" alt="LL1文法性质" style="zoom:50%;"><h5 id="自上而下分析的4个动作"><a href="#自上而下分析的4个动作" class="headerlink" title="自上而下分析的4个动作"></a>自上而下分析的4个动作</h5><img src="/posts/b53a8168/image-20201230211850795.png" alt="自上而下分析的4动作" style="zoom:50%;"><h5 id="自下而上分析的4个动作"><a href="#自下而上分析的4个动作" class="headerlink" title="自下而上分析的4个动作"></a>自下而上分析的4个动作</h5><img src="/posts/b53a8168/image-20201230212033350.png" alt="自下而上分析的4个动作" style="zoom:50%;"><h5 id="LR的种类"><a href="#LR的种类" class="headerlink" title="LR的种类"></a>LR的种类</h5><img src="/posts/b53a8168/image-20201230212110460.png" alt="LR的种类" style="zoom:50%;"><h3 id="4、选择"><a href="#4、选择" class="headerlink" title="4、选择"></a>4、选择</h3><ul><li>判断自上而下还是自下而上</li><li>判别最左还是最右推导</li><li>有分类，作出正确的判断</li></ul><h2 id="第四章-次重点"><a href="#第四章-次重点" class="headerlink" title="第四章(次重点)"></a><code>第四章</code>(次重点)</h2><h3 id="1、分析题p111（10分）"><a href="#1、分析题p111（10分）" class="headerlink" title="1、分析题p111（10分）"></a>1、分析题p111（10分）</h3><p>注释分析树，图4.1 课后习题4.1</p><img src="/posts/b53a8168/image-20201230205719993.png" alt="表4.1" style="zoom:50%;"><img src="/posts/b53a8168/image-20201230205745132.png" alt="分析树" style="zoom:50%;"><img src="/posts/b53a8168/image-20201230205831117.png" alt="注释分析树2" style="zoom:50%;"><h3 id="2、两个填空（需要分析）-综合还是继承属性？"><a href="#2、两个填空（需要分析）-综合还是继承属性？" class="headerlink" title="2、两个填空（需要分析）  综合还是继承属性？"></a>2、两个填空（需要分析）  综合还是继承属性？</h3><img src="/posts/b53a8168/image-20210115203640426.png" alt="image-20210115203640426" style="zoom:40%;"><img src="/posts/b53a8168/image-20210115203654909.png" alt="image-20210115203654909" style="zoom:40%;"><img src="/posts/b53a8168/image-20210115203708287.png" alt="image-20210115203708287" style="zoom:40%;"><h5 id="分析填空："><a href="#分析填空：" class="headerlink" title="分析填空："></a>分析填空：</h5><p>作业题4.3、4.4</p><img src="/posts/b53a8168/image-20201230210135312.png" alt="4-3" style="zoom: 50%;"><img src="/posts/b53a8168/image-20201230210214150.png" alt="4-3解答" style="zoom:50%;"><img src="/posts/b53a8168/image-20201230210254422.png" alt="4-12" style="zoom:50%;"><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><h3 id="考的是主要概念"><a href="#考的是主要概念" class="headerlink" title="考的是主要概念"></a>考的是主要概念</h3><p>押题：3项的或者4项的</p><p>有效断言还是无效断言？</p><img src="/posts/b53a8168/image-20210115203728366.png" alt="image-20210115203728366" style="zoom:40%;"><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><h3 id="考的是概念"><a href="#考的是概念" class="headerlink" title="考的是概念"></a>考的是概念</h3><img src="/posts/b53a8168/image-20210115203910391.png" alt="image-20210115203910391" style="zoom:40%;"><h2 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h2><h3 id="1、中间表示"><a href="#1、中间表示" class="headerlink" title="1、中间表示"></a>1、中间表示</h3><p>习题7.1 p234 后缀</p><img src="/posts/b53a8168/image-20210115203759402.png" alt="image-20210115203759402" style="zoom:40%;"><img src="/posts/b53a8168/image-20210115203813135.png" alt="image-20210115203813135" style="zoom:40%;"><img src="/posts/b53a8168/image-20210115203828848.png" alt="image-20210115203828848" style="zoom:40%;"><h2 id="第八章（只考1分）"><a href="#第八章（只考1分）" class="headerlink" title="第八章（只考1分）"></a>第八章（只考1分）</h2><h3 id="P246-求代价"><a href="#P246-求代价" class="headerlink" title="P246 求代价"></a>P246 求代价</h3><img src="/posts/b53a8168/image-20201230210653214.png" alt="表8-1" style="zoom:50%;"><img src="/posts/b53a8168/image-20201230210728843.png" alt="例题" style="zoom:50%;"><h2 id="填空小总结："><a href="#填空小总结：" class="headerlink" title="填空小总结："></a>填空小总结：</h2><img src="/posts/b53a8168/image-20210116000256583.png" alt="填空小总结" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> 编译原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>期末课后作业</title>
      <link href="posts/28aad96/"/>
      <url>posts/28aad96/</url>
      
        <content type="html"><![CDATA[<h1 id="期末课后作业"><a href="#期末课后作业" class="headerlink" title="期末课后作业"></a>期末课后作业</h1><h2 id="作业一"><a href="#作业一" class="headerlink" title="作业一"></a>作业一</h2><h4 id="1、移动电商的种类中，表商家跟商家进行交易的商业模式的是B2B；"><a href="#1、移动电商的种类中，表商家跟商家进行交易的商业模式的是B2B；" class="headerlink" title="1、移动电商的种类中，表商家跟商家进行交易的商业模式的是B2B；"></a>1、移动电商的种类中，表商家跟商家进行交易的商业模式的是<code>B2B</code>；</h4><h4 id="2、HTML标签中有些是有专业属性，有些是公有属性，常见的公有属性的有"><a href="#2、HTML标签中有些是有专业属性，有些是公有属性，常见的公有属性的有" class="headerlink" title="2、HTML标签中有些是有专业属性，有些是公有属性，常见的公有属性的有:"></a>2、HTML标签中有些是有专业属性，有些是公有属性，常见的公有属性的有:</h4><pre class="line-numbers language-html"><code class="language-html">表格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>的专业属性  colspan  rowspan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>的专业属性 href常见的公有属性：id，class，name，value，style，type等<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3、阐述下MVC开发模式？"><a href="#3、阐述下MVC开发模式？" class="headerlink" title="3、阐述下MVC开发模式？"></a>3、阐述下MVC开发模式？</h4><pre class="line-numbers language-markdown"><code class="language-markdown">MVC的具体含义是：model+view+control，即模型+视图+控制它们各自处理自己的任务：（1）模型：模型持有所有的数据bai、状态和程序逻辑。模型独立于视图和控制器。（2）视图：用来呈现模型。视图通常直接从模型中取得它需要显示的状态与数据。对于相同的信息可以有多个不同的显示形式或视图。（3）控制器：位于视图和模型中间，负责接受用户的输入，将输入进行解析并反馈给模型，通常一个视图具有一个控制器。MVC模式将它们分离以提高系统的灵活性和复用性，不使用MVC模式，用户界面设计往往将这些对象混在一起。MVC模式实现了模型和视图的分离，这带来了几个好处。（1）一个模型提供不同的多个视图表现形式，也能够为一个模型创建新的视图而无须重写模型。一旦模型的数据发生变化，模型将通知有关的视图，每个视图相应地刷新自己。（2）模型可复用。因为模型是独立于视图的，所以可以把一个模型独立地移植到新的平台工作。（3）提高开发效率。在开发界面显示部分时，你仅仅需要考虑的是如何布局一个好的用户界面；开发模型时，你仅仅要考虑的是业务逻辑和数据维护，这样能使开发者专注于某一方面的开发，提高开发效率。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4、常见浏览器内核有哪些？说说你常用的浏览器属于哪种内核？"><a href="#4、常见浏览器内核有哪些？说说你常用的浏览器属于哪种内核？" class="headerlink" title="4、常见浏览器内核有哪些？说说你常用的浏览器属于哪种内核？"></a>4、常见浏览器内核有哪些？说说你常用的浏览器属于哪种内核？</h4><p><strong>1. <code>Trident</code>内核代表产品Internet Explorer</strong><br>Trident（又称为MSHTML），是微软开发的一种排版引擎。使用Trident渲染引擎的浏览器包括：IE、傲游、世界之窗浏览器、腾讯TT等。由于微软很长时间没有更新Trident内核，这些浏览器已经属于古董级别的浏览器了</p><p><strong>2. <code>Gecko</code>内核代表作品Mozilla FireFox</strong><br>FirefoxGecko是一套开放源代码的、以C++编写的网页排版引擎。因为其开源，使得Gecko成为现今流行的排版引擎之一，仅次于Trident。使用它的最著名浏览器有Firefox、Netscape6至9。</p><p><strong>3. <code>WebKit</code>内核代表作品Safari、Chromewebkit</strong><br>是苹果公司自主研发的内核， Webkit引擎包含渲染引擎WebCore和javascript引擎JSCore，均是从KDE的KHTML及KJS引擎衍生而来，它们都是自由软件，在GPL条约下授权，所以webkit也开放了源码。它的特点在于源码结构清晰、渲染速度极快。缺点是对网页代码的兼容性不高，导致一些编写不标准的网页无法正常显示。主要代表作品有Safari和Google的浏览器Chrome，与国内的360极速浏览器，搜狗高速浏览器。</p><p><strong>4. <code>Presto</code>内核代表作品OperaPresto</strong><br>是由Opera Software开发的浏览器排版引擎，供Opera 7.0及以上使用。该款引擎的特点就是渲染速度的优化达到了极致，也是目前公认网页浏览速度最快的浏览器内核，然而代价是牺牲了网页的兼容性。</p><p><code>我最喜欢的浏览器属于WebKit内核，因为其浏览网页的速度相对较快，使用体验比较棒！</code></p><h2 id="作业二"><a href="#作业二" class="headerlink" title="作业二"></a>作业二</h2><h4 id="1、表格是由-lt-table-gt-标签定义-lt-tr-gt-定义表格的行，-lt-td-gt-定义表格的单元格。"><a href="#1、表格是由-lt-table-gt-标签定义-lt-tr-gt-定义表格的行，-lt-td-gt-定义表格的单元格。" class="headerlink" title="1、表格是由&lt;table&gt;标签定义&lt;tr&gt;定义表格的行，&lt;td&gt;定义表格的单元格。"></a>1、表格是由<code>&lt;table&gt;</code>标签定义<code>&lt;tr&gt;</code>定义表格的行，<code>&lt;td&gt;</code>定义表格的单元格。</h4><h4 id="2、表单标签-lt-input-gt-类型中单选框的是radio，提交按钮的属性值是submit。"><a href="#2、表单标签-lt-input-gt-类型中单选框的是radio，提交按钮的属性值是submit。" class="headerlink" title="2、表单标签&lt;input&gt;类型中单选框的是radio，提交按钮的属性值是submit。"></a>2、表单标签<code>&lt;input&gt;</code>类型中单选框的是<code>radio</code>，提交按钮的属性值是<code>submit</code>。</h4><h4 id="3、简述下超链接a标签的五种用法，举例说明。"><a href="#3、简述下超链接a标签的五种用法，举例说明。" class="headerlink" title="3、简述下超链接a标签的五种用法，举例说明。"></a>3、简述下超链接a标签的五种用法，举例说明。</h4><pre class="line-numbers language-html"><code class="language-html">（1） 指向同站点的其他页面    eg：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>guide.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新手指南<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>常见问题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>           href的值是链接的目标页面，当href 的值是“#”时，指向的是一个空链接。（2）指向另一个网站    eg：&lt;a href=“http://www.baidu.com">百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            跳转到外部网站的时候，只需要将href的值为该网站的URL地址即可。（3） 命名锚记链接         跳转到本页面的指定内容。             步骤1：创建命名锚记。在需要创建命名锚记的位置，将标签的id属性设置好。             步骤2：链接到命名锚记。将链接的href的值设置为“#id的值”。（4）电子邮件链接         邮件链接的href值以mailto:开始，后面跟上一个收件人的email地址          eg：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mailto:mobileshop@ictuniv.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>联系我们<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>（5）文件下载链接：指向某个需下载的文件的链接。可用于下载的文件类型有.doc、.Rar、.cab、.zip、.exe等基本语法：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span>“File_path”</span><span class="token punctuation">></span></span>下载文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>文件下载示例：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span>“mark_using.doc”</span><span class="token punctuation">></span></span>doc文档下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>data2.rar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>RAR文档下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span>“task.exe”</span><span class="token punctuation">></span></span>exe文件下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4、常见的多媒体标签有哪些？用事例加以说明。"><a href="#4、常见的多媒体标签有哪些？用事例加以说明。" class="headerlink" title="4、常见的多媒体标签有哪些？用事例加以说明。"></a>4、常见的多媒体标签有哪些？用事例加以说明。</h4><pre class="line-numbers language-html"><code class="language-html">1.设置滚动字幕<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>marquee</span><span class="token punctuation">></span></span>滚动文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>marquee</span><span class="token punctuation">></span></span>2.嵌入音频<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>horse.ogg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audio/ogg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>horse.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audio/mpeg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>您的浏览器不支持 audio 元素。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span>3.嵌入视频<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>320<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>240<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video/mp4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie.ogg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video/ogg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>您的浏览器不支持Video标签。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>4.设置背景音乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span>“file_path”</span> <span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="作业三"><a href="#作业三" class="headerlink" title="作业三"></a>作业三</h2><h4 id="1、css样式表根据位置的不同有三种类型，其优先级由高到低顺序是-；"><a href="#1、css样式表根据位置的不同有三种类型，其优先级由高到低顺序是-；" class="headerlink" title="1、css样式表根据位置的不同有三种类型，其优先级由高到低顺序是____________；"></a>1、css样式表根据位置的不同有三种类型，其优先级由高到低顺序是____________；</h4><p><code>内联样式表 &gt; 内部样式表 &gt; 外部样式表</code></p><h4 id="2、css文本属性中表文本居中的属性值是center，层属性中表绝对定位的是absolute；"><a href="#2、css文本属性中表文本居中的属性值是center，层属性中表绝对定位的是absolute；" class="headerlink" title="2、css文本属性中表文本居中的属性值是center，层属性中表绝对定位的是absolute；"></a>2、css文本属性中表文本居中的属性值是<code>center</code>，层属性中表绝对定位的是<code>absolute</code>；</h4><h4 id="3、简述下CSS盒子模型。"><a href="#3、简述下CSS盒子模型。" class="headerlink" title="3、简述下CSS盒子模型。"></a>3、简述下CSS盒子模型。</h4><pre class="line-numbers language-markdown"><code class="language-markdown">盒子模型（即box model）是指所有HTML元素都可以看作盒子，用于设计和布局时使用。一个CSS盒子包括：内容、内边距、边框、外边距<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="/posts/28aad96/image-20201230194810237.png" alt="image-20201230194810237" style="zoom:50%;"><h4 id="4、常见的块级元素和内联元素有哪些？其标准流布局如何？"><a href="#4、常见的块级元素和内联元素有哪些？其标准流布局如何？" class="headerlink" title="4、常见的块级元素和内联元素有哪些？其标准流布局如何？"></a>4、常见的块级元素和内联元素有哪些？其标准流布局如何？</h4><pre class="line-numbers language-markdown"><code class="language-markdown">常见的块级元素有：p、div、h1-h6、ul-li等。常见的内联元素有：a、span、img、b、i、em等。标准流布局：块级元素：独占一行，并且可以设置宽度和高度来控制盒子的大小。内联元素：一行可以共存多个，可以设置宽高但是不生效，自身尺寸根据元素内部嵌套的内容来确定。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意⚠️：<code>img是内联元素，但是设置高度和宽度属性，在浏览器会生效</code></p><h2 id="作业四"><a href="#作业四" class="headerlink" title="作业四"></a>作业四</h2><h4 id="1、JavaScript对象有是三个部分：浏览器对象-BOM-、文档对象-DOM-和js内置对象；"><a href="#1、JavaScript对象有是三个部分：浏览器对象-BOM-、文档对象-DOM-和js内置对象；" class="headerlink" title="1、JavaScript对象有是三个部分：浏览器对象(BOM)、文档对象(DOM)和js内置对象；"></a>1、JavaScript对象有是三个部分：<code>浏览器对象(BOM)</code>、<code>文档对象(DOM)</code>和<code>js内置对象</code>；</h4><h4 id="2、JavaScript设置和获取HTML属性的方法是getAttribute和setAttribute；"><a href="#2、JavaScript设置和获取HTML属性的方法是getAttribute和setAttribute；" class="headerlink" title="2、JavaScript设置和获取HTML属性的方法是getAttribute和setAttribute；"></a>2、JavaScript设置和获取HTML属性的方法是<code>getAttribute</code>和<code>setAttribute</code>；</h4><h4 id="3、JavaScript定位HTML元素的方式有哪些？谈谈你的理解。"><a href="#3、JavaScript定位HTML元素的方式有哪些？谈谈你的理解。" class="headerlink" title="3、JavaScript定位HTML元素的方式有哪些？谈谈你的理解。"></a>3、JavaScript定位HTML元素的方式有哪些？谈谈你的理解。</h4><p><code>三种方式定位html元素:</code></p><pre class="line-numbers language-markdown"><code class="language-markdown">（1）通过id定位到HTML元素--document.getElementById()（2）通过元素标签名定位到HTML元素--document.getElementsByTagName()（3）通过类名定位到HTML元素--document.getElementsByClassName()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>理解：如果要准确的定位到某个html元素，可以通过id的方法，因为id是唯一的。通过标签名和类名定位到的恶元素可能不止一个，可以通过下标来确定到某一个元素。</code></p><h4 id="4、JavaScript和jQuery绑定事件的方式不一样，谈谈它们之间的区别。"><a href="#4、JavaScript和jQuery绑定事件的方式不一样，谈谈它们之间的区别。" class="headerlink" title="4、JavaScript和jQuery绑定事件的方式不一样，谈谈它们之间的区别。"></a>4、JavaScript和jQuery绑定事件的方式不一样，谈谈它们之间的区别。</h4><pre class="line-numbers language-html"><code class="language-html">js中常使用window.onload方法，jquery常使用du$(document).ready() (可以简写为zhi$(function(){}) 或者 $().ready(function(){}) )或者$(window).load(function(){})js的window.onload这个方法是dao在网页中所有的zhuan元素（shu包括元素的所有关联文件）完全加载到浏览器后才执行，即js此时才可以访问网页中的任何元素。而jqeury的$(document).ready()只要DOM完全就绪时就可以操作了但是，例如，有时函数需要处理图片的宽高，可使用上个方法函数在执行时，可能图片的相关信息都没有加载完成因此jqeury的$(window).load()就会在所有的内容（包括窗口，框架，对象和图片等）加载完成后触发，如果处理函数绑定在元素上，则会在元素的内容加载完毕后触发<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>用 &quot;addeventlistener&quot; 可以绑定多次同一个事件，且都会执行，而在DOM结构如果绑定两个 &quot;onclick&quot; 事件，只会执行第一个；在脚本通过匿名函数的方式绑定的只会执行最后一个事件。</code></p><h2 id="作业五"><a href="#作业五" class="headerlink" title="作业五"></a>作业五</h2><h4 id="1、允许在一条语句中，针对相同的元素，运行多个jQuery方法，叫链接；"><a href="#1、允许在一条语句中，针对相同的元素，运行多个jQuery方法，叫链接；" class="headerlink" title="1、允许在一条语句中，针对相同的元素，运行多个jQuery方法，叫链接；"></a>1、允许在一条语句中，针对相同的元素，运行多个jQuery方法，叫<code>链接</code>；</h4><h4 id="2、jQuery遍历中返回被选元素的所有同胞元素的方法是siblings；"><a href="#2、jQuery遍历中返回被选元素的所有同胞元素的方法是siblings；" class="headerlink" title="2、jQuery遍历中返回被选元素的所有同胞元素的方法是siblings；"></a>2、jQuery遍历中返回被选元素的所有同胞元素的方法是<code>siblings</code>；</h4><h4 id="3、事件传播的两种策略的是？如何处理阻止事件冒泡带来的影响？"><a href="#3、事件传播的两种策略的是？如何处理阻止事件冒泡带来的影响？" class="headerlink" title="3、事件传播的两种策略的是？如何处理阻止事件冒泡带来的影响？"></a>3、事件传播的两种策略的是？如何处理阻止事件冒泡带来的影响？</h4><pre class="line-numbers language-markdown"><code class="language-markdown">通常有两种策略来处理事件：事件捕获和事件冒泡。事件捕获：事件首先会交给最外层的元素，然后再往内交给更具体的元素。事件冒泡:事件冒泡与事件捕获刚好相反，当事件发生时，首先会发送到最具体的元素，在这个元素得到响应后，事件会往上冒泡到更外层的元素。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markdown"><code class="language-markdown">利用事件对象的.stopPropagation()方法可以阻止事件冒泡。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="4、阐述下Ajax实现机制的过程。"><a href="#4、阐述下Ajax实现机制的过程。" class="headerlink" title="4、阐述下Ajax实现机制的过程。"></a>4、阐述下Ajax实现机制的过程。</h4><pre class="line-numbers language-markdown"><code class="language-markdown">1.用户在web页面执行某个操作，比如鼠标点击按钮等；2.根据用户的操作，触发事件的发生，并调用注册到该事件的JavaScript事件，在js事件处理函数中，需要创建并初始化一个向服务器发送异步请求的XMLHttpRequest对象；3.服务器收到Request请求，做了一系列处理；4.处理完毕，服务器向客户端返回所需要的数据；5.数据到达客户端之后执行JavaScript回调函数，井处理的数据显示在用户界面。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/28aad96/image-20201230201234315.png" alt="image-20201230201234315" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> web知识点复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ip网络实验6</title>
      <link href="posts/744e70d2/"/>
      <url>posts/744e70d2/</url>
      
        <content type="html"><![CDATA[<h1 id="ospf路由协议配置实验"><a href="#ospf路由协议配置实验" class="headerlink" title="ospf路由协议配置实验"></a>ospf路由协议配置实验</h1><h2 id="实验拓扑图："><a href="#实验拓扑图：" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h2><img src="/posts/744e70d2/image-20210101210706225.png" alt="实验拓扑图" style="zoom:80%;"><h2 id="实验需求："><a href="#实验需求：" class="headerlink" title="实验需求："></a>实验需求：</h2><p><strong>1.所以路由器起loopback0接口（环回接口），且配置规划的ip地址</strong></p><p><strong>2.所有的路由器开启ospf协议，设置router-id 为loopback 0的地址</strong></p><p><strong>3.根据规划，R0、R1属于osps的骨干区域Area 0，R属于Area 100，R3属于Area200，宣告路由器的直接连网段进ospf域</strong></p><p><strong>4.将R2，R3上连接的端口设置为被动接口（passive-interface）防止路由器将ospf报文发送给pc</strong></p><p><strong>5.pc之间可以相互ping通</strong></p><h2 id="配置代码："><a href="#配置代码：" class="headerlink" title="配置代码："></a>配置代码：</h2><h3 id="Router0："><a href="#Router0：" class="headerlink" title="Router0："></a>Router0：</h3><pre class="line-numbers language-BASH"><code class="language-BASH">[V200R003C00]# sysname Router0# snmp-agent local-engineid 800007DB03000000000000 snmp-agent # clock timezone China-Standard-Time minus 08:00:00#portal local-server load portalpage.zip# drop illegal-mac alarm# set cpu-usage threshold 80 restore 75#aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%$K8m.Nt84DZ}e#<0`8bmE3Uw}%$%$ local-user admin service-type http#firewall zone Local priority 15#interface GigabitEthernet0/0/0 ip address 2.2.2.1 255.255.255.252 #interface GigabitEthernet0/0/1 ip address 1.1.1.2 255.255.255.252 #interface GigabitEthernet0/0/2#interface NULL0#interface LoopBack0 ip address 11.11.11.10 255.255.255.255 #ospf 1 router-id 11.11.11.10  area 0.0.0.0   network 2.2.2.0 0.0.0.3  area 0.0.0.100   network 1.1.1.0 0.0.0.3 #user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20#wlan ac#return<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-BASH"><code class="language-BASH">int lo 0area 0area 100reset ospf process //重启ospf进程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/744e70d2/image-20210101211841809.png" alt="peer-brief" style="zoom:50%;"><img src="/posts/744e70d2/image-20210101212026620.png" alt="bref" style="zoom:50%;"><img src="/posts/744e70d2/image-20210101212119939.png" alt="ip路由表" style="zoom:50%;"><img src="/posts/744e70d2/image-20210101212220355.png" alt="lsdb" style="zoom:50%;"><h3 id="Router1"><a href="#Router1" class="headerlink" title="Router1:"></a>Router1:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> sysname Router1<span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 2.2.2.2 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 3.3.3.1 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>interface LoopBack0 ip address 11.11.11.11 255.255.255.255 <span class="token comment" spellcheck="true">#</span>ospf 1 router-id 11.11.11.11  area 0.0.0.0   network 2.2.2.0 0.0.0.3  area 0.0.0.200   network 3.3.3.0 0.0.0.3 <span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/744e70d2/image-20210101212309706.png" alt="peer-brief" style="zoom:50%;"><img src="/posts/744e70d2/image-20210101212400619.png" alt="bref" style="zoom:50%;"><img src="/posts/744e70d2/image-20210101212500821.png" alt="router-table" style="zoom:50%;"><h3 id="Router2："><a href="#Router2：" class="headerlink" title="Router2："></a>Router2：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> sysname Router2<span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 1.1.1.1 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 192.168.1.1 255.255.255.0 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 ip address 192.168.2.1 255.255.255.0 <span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>interface LoopBack0 ip address 11.11.11.12 255.255.255.255 <span class="token comment" spellcheck="true">#</span>ospf 1 router-id 11.11.11.12  silent-interface GigabitEthernet0/0/1 silent-interface GigabitEthernet0/0/2 area 0.0.0.100   network 1.1.1.0 0.0.0.3   network 192.168.1.0 0.0.0.255   network 192.168.2.0 0.0.0.255 <span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/744e70d2/image-20210101212618508.png" alt="peer-brief" style="zoom:50%;"><img src="/posts/744e70d2/image-20210101212705921.png" alt="brief" style="zoom:50%;"><img src="/posts/744e70d2/image-20210101212732684.png" alt="router-table" style="zoom:50%;"><h3 id="router3"><a href="#router3" class="headerlink" title="router3:"></a>router3:</h3><pre class="line-numbers language-BASH"><code class="language-BASH">[V200R003C00]# sysname Router3# snmp-agent local-engineid 800007DB03000000000000 snmp-agent # clock timezone China-Standard-Time minus 08:00:00#portal local-server load portalpage.zip# drop illegal-mac alarm# set cpu-usage threshold 80 restore 75#aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%$K8m.Nt84DZ}e#<0`8bmE3Uw}%$%$ local-user admin service-type http#firewall zone Local priority 15#interface GigabitEthernet0/0/0 ip address 3.3.3.2 255.255.255.252 #interface GigabitEthernet0/0/1 ip address 172.16.1.1 255.255.255.0 #interface GigabitEthernet0/0/2 ip address 172.16.2.1 255.255.255.0 #interface NULL0#interface LoopBack0 ip address 11.11.11.13 255.255.255.255 #ospf 1 router-id 11.11.11.13  silent-interface GigabitEthernet0/0/1 silent-interface GigabitEthernet0/0/2 area 0.0.0.200   network 3.3.3.0 0.0.0.3   network 172.16.1.0 0.0.0.255   network 172.16.2.0 0.0.0.255 #user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20#wlan ac#return<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/744e70d2/image-20210101212931868.png" alt="peer-brief" style="zoom:50%;"><img src="/posts/744e70d2/image-20210101213033630.png" alt="brief" style="zoom:50%;"><img src="/posts/744e70d2/image-20210101213119105.png" alt="router-table" style="zoom:50%;"><h2 id="实验效果："><a href="#实验效果：" class="headerlink" title="实验效果："></a>实验效果：</h2><h3 id="部分："><a href="#部分：" class="headerlink" title="部分："></a>部分：</h3><img src="/posts/744e70d2/image-20210101213235712.png" alt="image-20210101213235712" style="zoom:50%;"><img src="/posts/744e70d2/image-20210101213245598.png" alt="image-20210101213245598" style="zoom:50%;"><img src="/posts/744e70d2/image-20210101213245598.png" alt="image-20210101213245598" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> ip网络实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ip网络实验5</title>
      <link href="posts/ed472168/"/>
      <url>posts/ed472168/</url>
      
        <content type="html"><![CDATA[<h1 id="配置rip实现小范围的通信"><a href="#配置rip实现小范围的通信" class="headerlink" title="配置rip实现小范围的通信"></a>配置rip实现小范围的通信</h1><h2 id="实验拓扑图："><a href="#实验拓扑图：" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h2><img src="/posts/ed472168/image-20201228191304926.png" alt="image-20201228191304926" style="zoom:80%;"><h3 id="pc的配置："><a href="#pc的配置：" class="headerlink" title="pc的配置："></a>pc的配置：</h3><img src="/posts/ed472168/image-20201228191226918.png" alt="image-20201228191226918" style="zoom:80%;"><h2 id="实验目的："><a href="#实验目的：" class="headerlink" title="实验目的："></a>实验目的：</h2><p>实现pc1、pc2、pc3、pc4之间互通信，可以互相ping通。</p><h2 id="配置："><a href="#配置：" class="headerlink" title="配置："></a>配置：</h2><h3 id="AR1"><a href="#AR1" class="headerlink" title="AR1:"></a>AR1:</h3><pre class="line-numbers language-bash"><code class="language-bash">1.先配置ip addr2.配置riprip 1version 2<span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>rip 1<span class="token punctuation">[</span>AR1-rip-1<span class="token punctuation">]</span>version 2<span class="token punctuation">[</span>AR1-rip-1<span class="token punctuation">]</span>network 192.168.1.0<span class="token punctuation">[</span>AR1-rip-1<span class="token punctuation">]</span>network 192.168.2.0<span class="token punctuation">[</span>AR1-rip-1<span class="token punctuation">]</span>network 1.0.0.0<span class="token punctuation">[</span>AR1-rip-1<span class="token punctuation">]</span>dis this<span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span>rip 1 version 2 network 192.168.1.0 network 192.168.2.0 network 1.0.0.0<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span class="token punctuation">[</span>AR1-rip-1<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-BASH"><code class="language-BASH">[V200R003C00]# sysname AR1#interface GigabitEthernet0/0/0 ip address 1.1.1.1 255.255.255.252 #interface GigabitEthernet0/0/1 ip address 192.168.1.1 255.255.255.0 #interface GigabitEthernet0/0/2 ip address 192.168.2.1 255.255.255.0 #interface NULL0#rip 1 version 2 network 192.168.1.0 network 192.168.2.0 network 1.0.0.0#user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20#wlan ac#return<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AR2"><a href="#AR2" class="headerlink" title="AR2;"></a>AR2;</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 1.1.1.2 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 2.2.2.1 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2<span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>rip 1 version 2 network 1.0.0.0 network 2.0.0.0<span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AR3"><a href="#AR3" class="headerlink" title="AR3:"></a>AR3:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 2.2.2.2 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 ip address 3.3.3.1 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>rip 1 version 2 network 2.0.0.0 network 3.0.0.0<span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AR4；"><a href="#AR4；" class="headerlink" title="AR4；"></a>AR4；</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 172.16.1.1 255.255.255.0 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 172.16.2.1 255.255.255.0 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 ip address 3.3.3.2 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>rip 1 version 2 network 3.0.0.0 network 172.16.0.0<span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实现效果图："><a href="#实现效果图：" class="headerlink" title="实现效果图："></a>实现效果图：</h2><img src="/posts/ed472168/image-20201228191927168.png" alt="image-20201228191927168" style="zoom:80%;">]]></content>
      
      
      <categories>
          
          <category> ip网络实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ip网络实验4</title>
      <link href="posts/9a4011fe/"/>
      <url>posts/9a4011fe/</url>
      
        <content type="html"><![CDATA[<h1 id="vlan综合实验"><a href="#vlan综合实验" class="headerlink" title="vlan综合实验"></a>vlan综合实验</h1><h2 id="实验拓扑"><a href="#实验拓扑" class="headerlink" title="实验拓扑"></a>实验拓扑</h2><img src="/posts/9a4011fe/image-20201226231630909.png" alt="image-20201226231630909" style="zoom:50%;"><img src="/posts/9a4011fe/image-20201226231657853.png" alt="image-20201226231657853" style="zoom:33%;"><img src="/posts/9a4011fe/image-20201226231734940.png" alt="image-20201226231734940" style="zoom:33%;"><img src="/posts/9a4011fe/image-20201226231754091.png" alt="image-20201226231754091" style="zoom:33%;"><img src="/posts/9a4011fe/image-20201226231807883.png" alt="image-20201226231807883" style="zoom:33%;"><h2 id="配置："><a href="#配置：" class="headerlink" title="配置："></a>配置：</h2><h3 id="LSW3"><a href="#LSW3" class="headerlink" title="LSW3"></a>LSW3</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#</span>sysname Huawei<span class="token comment" spellcheck="true">#</span>vlan batch 100 200<span class="token comment" spellcheck="true">#</span>stp instance 0 root primary<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface Vlanif100 ip address 192.168.0.10 255.255.255.0<span class="token comment" spellcheck="true">#</span>interface Vlanif200 ip address 172.32.0.10 255.255.255.0<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 port link-type trunk port trunk allow-pass vlan 100 200<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 port link-type trunk port trunk allow-pass vlan 100 200<span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>stp root primary</code></p><p><code>stp instance xx cost xx</code></p><h3 id="LSW1；"><a href="#LSW1；" class="headerlink" title="LSW1；"></a>LSW1；</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#</span>sysname Huawei<span class="token comment" spellcheck="true">#</span>vlan batch 100 200<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface Eth-Trunk1 port link-type trunk port trunk allow-pass vlan 100 200 stp instance 0 cost 10 mode lacp-static<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/1 port link-type trunk port trunk allow-pass vlan 100 200<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/2 eth-trunk 1<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/3 port link-type access port default vlan 100<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/4 port link-type access port default vlan 200<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/5 eth-trunk 1<span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="lsw4"><a href="#lsw4" class="headerlink" title="lsw4:"></a>lsw4:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#</span>sysname Huawei<span class="token comment" spellcheck="true">#</span>vlan batch 100 200<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface Eth-Trunk1 port link-type trunk port trunk allow-pass vlan 100 200 stp instance 0 cost 10 mode lacp-static<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/1 port link-type trunk port trunk allow-pass vlan 100 200<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/2 eth-trunk 1<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/3 port link-type access port default vlan 200<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/4 port link-type access port default vlan 100<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/5 eth-trunk 1<span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：华为S5700系列交换机配置链路聚合LACP报错。</p><p>(解决办法)[<a href="https://blog.51cto.com/7355754/2154322]" target="_blank" rel="noopener">https://blog.51cto.com/7355754/2154322]</a></p><h2 id="实现效果："><a href="#实现效果：" class="headerlink" title="实现效果："></a>实现效果：</h2><img src="/posts/9a4011fe/image-20201226232454477.png" alt="image-20201226232454477" style="zoom:33%;"><p>部分效果图，其他自行测试</p><pre class="line-numbers language-markdown"><code class="language-markdown">LSW3 要配置vlanifint vlanif 100ip add x.x.x.x xxint Eth-Trunk 1int ex/x/xeth-trunk 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ip网络实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ip网络实验3</title>
      <link href="posts/424845d/"/>
      <url>posts/424845d/</url>
      
        <content type="html"><![CDATA[<h1 id="单臂路由和静态路由"><a href="#单臂路由和静态路由" class="headerlink" title="单臂路由和静态路由"></a>单臂路由和静态路由</h1><h2 id="实验拓扑图"><a href="#实验拓扑图" class="headerlink" title="实验拓扑图"></a>实验拓扑图</h2><img src="/posts/424845d/image-20201226213050140.png" alt="image-20201226213050140" style="zoom:50%;"><img src="/posts/424845d/image-20201226213510469.png" alt="image-20201226213510469" style="zoom:33%;"><img src="/posts/424845d/image-20201226213611212.png" alt="image-20201226213611212" style="zoom:33%;"><img src="/posts/424845d/image-20201226213654340.png" alt="image-20201226213654340" style="zoom:33%;"><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><p>实现pc1、pc2、pc3之间互相ping通对方</p><h2 id="实验代码参考"><a href="#实验代码参考" class="headerlink" title="实验代码参考"></a>实验代码参考</h2><h3 id="LSW1："><a href="#LSW1：" class="headerlink" title="LSW1："></a>LSW1：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#</span>sysname Huawei<span class="token comment" spellcheck="true">#</span>vlan batch 100 200<span class="token comment" spellcheck="true">#</span>cluster <span class="token function">enable</span>ntdp <span class="token function">enable</span>ndp <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span>diffserv domain default<span class="token comment" spellcheck="true">#</span>drop-profile default<span class="token comment" spellcheck="true">#</span>aaa authentication-scheme default authorization-scheme default accounting-scheme default domain default domain default_admin local-user admin password simple admin local-user admin service-type http<span class="token comment" spellcheck="true">#</span>interface Vlanif1<span class="token comment" spellcheck="true">#</span>interface MEth0/0/1<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/1 port link-type trunk port trunk allow-pass vlan 100 200<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/2 port link-type access port default vlan 100<span class="token comment" spellcheck="true">#</span>interface Ethernet0/0/3 port link-type access port default vlan 200<span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：配置e0/0/1的接口的时候</p><pre class="line-numbers language-bash"><code class="language-bash">int e0/0/1.100ip add 192.168.100.1 24dotp1 termination vid 100arp broadcast <span class="token function">enable</span>int e0/0/1.200ip add 192.168.200.1 24dotp1 termination vid 200arp broadcast <span class="token function">enable</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AR1"><a href="#AR1" class="headerlink" title="AR1:"></a>AR1:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 1.1.1.1 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1.100 dot1q termination vid 100 ip address 192.168.100.1 255.255.255.0  arp broadcast <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1.200 dot1q termination vid 200 ip address 192.168.200.1 255.255.255.0  arp broadcast <span class="token function">enable</span><span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 ip address 2.2.2.1 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>ip route-static 172.32.0.0 255.255.255.0 1.1.1.2<span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token keyword">:</span> 17       Routes <span class="token keyword">:</span> 17       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface        1.1.1.0/30  Direct  0    0           D   1.1.1.1         GigabitEthernet0/0/0        1.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0        1.1.1.3/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0        2.2.2.0/30  Direct  0    0           D   2.2.2.1         GigabitEthernet0/0/2        2.2.2.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/2        2.2.2.3/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/2      127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0      127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0     172.32.0.0/24  Static  60   0          RD   1.1.1.2         GigabitEthernet0/0/0  192.168.100.0/24  Direct  0    0           D   192.168.100.1   GigabitEthernet0/0/1.100  192.168.100.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1.100192.168.100.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1.100  192.168.200.0/24  Direct  0    0           D   192.168.200.1   GigabitEthernet0/0/1.200  192.168.200.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1.200192.168.200.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1.200255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AR4"><a href="#AR4" class="headerlink" title="AR4:"></a>AR4:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>V200R003C00<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span> snmp-agent local-engineid 800007DB03000000000000 snmp-agent <span class="token comment" spellcheck="true">#</span> clock timezone China-Standard-Time minus 08:00:00<span class="token comment" spellcheck="true">#</span>portal local-server load portalpage.zip<span class="token comment" spellcheck="true">#</span> drop illegal-mac alarm<span class="token comment" spellcheck="true">#</span> <span class="token keyword">set</span> cpu-usage threshold 80 restore 75<span class="token comment" spellcheck="true">#</span>aaa  authentication-scheme default authorization-scheme default accounting-scheme default domain default  domain default_admin  local-user admin password cipher %$%<span class="token variable">$K8m</span>.Nt84DZ<span class="token punctuation">}</span>e<span class="token comment" spellcheck="true">#&lt;0`8bmE3Uw}%$%$</span> local-user admin service-type http<span class="token comment" spellcheck="true">#</span>firewall zone Local priority 15<span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/0 ip address 1.1.1.2 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/1 ip address 172.32.0.1 255.255.255.0 <span class="token comment" spellcheck="true">#</span>interface GigabitEthernet0/0/2 ip address 2.2.2.2 255.255.255.252 <span class="token comment" spellcheck="true">#</span>interface NULL0<span class="token comment" spellcheck="true">#</span>ip route-static 192.168.100.0 255.255.255.0 1.1.1.1ip route-static 192.168.200.0 255.255.255.0 1.1.1.1<span class="token comment" spellcheck="true">#</span>user-interface con 0 authentication-mode passworduser-interface vty 0 4user-interface vty 16 20<span class="token comment" spellcheck="true">#</span>wlan ac<span class="token comment" spellcheck="true">#</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token keyword">:</span> 15       Routes <span class="token keyword">:</span> 15       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface        1.1.1.0/30  Direct  0    0           D   1.1.1.2         GigabitEthernet0/0/0        1.1.1.2/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0        1.1.1.3/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0        2.2.2.0/30  Direct  0    0           D   2.2.2.2         GigabitEthernet0/0/2        2.2.2.2/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/2        2.2.2.3/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/2      127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0      127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0     172.32.0.0/24  Direct  0    0           D   172.32.0.1      GigabitEthernet0/0/1     172.32.0.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1   172.32.0.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1  192.168.100.0/24  Static  60   0          RD   1.1.1.1         GigabitEthernet0/0/0  192.168.200.0/24  Static  60   0          RD   1.1.1.1         GigabitEthernet0/0/0255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实验效果："><a href="#实验效果：" class="headerlink" title="实验效果："></a>实验效果：</h2><p><img src="/posts/424845d/image-20201226214805417.png" alt="image-20201226214805417" style="zoom:50%;"><img src="/posts/424845d/%E5%8D%95%E8%87%82%E8%B7%AF%E7%94%B1%E5%92%8C%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%5Cimage-20201226214845539.png" alt="image-20201226214845539"><img src="/posts/424845d/image-20201226214805417.png" alt="image-20201226214805417" style="zoom:50%;"><img src="/posts/424845d/%E5%8D%95%E8%87%82%E8%B7%AF%E7%94%B1%E5%92%8C%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%5Cimage-20201226214845539.png" alt="image-20201226214845539"></p><p><img src="/posts/424845d/image-20201226214845539.png" alt="image-20201226214845539" style="zoom:50%;"><img src="/posts/424845d/image-20201226214935018.png" alt="image-20201226214935018" style="zoom:50%;"></p>]]></content>
      
      
      <categories>
          
          <category> ip网络实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第四章-网络层</title>
      <link href="posts/ef8f80d2/"/>
      <url>posts/ef8f80d2/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络复习题第四章（标有课本知识点）"><a href="#计算机网络复习题第四章（标有课本知识点）" class="headerlink" title="计算机网络复习题第四章（标有课本知识点）"></a>计算机网络复习题第四章（标有课本知识点）</h1><p><strong>选择题</strong></p><p>1．如果子网掩码是 255.255.255.224，那么主机 218.22.50.40 所在的驻留子网是（ C）。<br> A.218.22.50.0<br> B.218.22.50.224<br> C.218.22.50.32<br> D.218.22.50.40</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>2．某公司申请到一个 C 类网络，出于地理位置上的考虑，必须切割成 5 个子网，那么子网掩<br> 码可以设置为（<strong>D</strong> ）。<br> A.255.255.0.0<br> B.255.255.255.0<br> C.255.255.255.192<br> D.255.255.255.224</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>3．转发数据包时，网络层所使用的主要信息依据是（<strong>A</strong> ）。<br> A.IP 路由表<br> B.MAC 地址表<br> C.ARP 缓存<br> D.端口列表</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.6 IP</strong> <strong>层转发分组的流程**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>4．下面四个选项中，合法的 Internet 主机 IP 地址是（<strong>C</strong> ）。<br> A.228.132.809.33<br> B.201.32.17.255<br> C.211.202.59.13<br> D.0.58.173.2</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>5．如果子网掩码是 255.255.192.0，那么下面主机（<strong>B</strong> ）必须通过路由器或三层交换<br> 机才能与主机 129.23.144.16 通信。<br> A.129.23.191.21<br> B.129.23.127.222<br> C.129.23.130.33<br> D.129.23.148.127</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.2** <strong>使用子网时分组的转发**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>6．下列（<strong>C</strong> ）的情况下需要启动 ARP 请求。<br> A.主机需要接收信息，但 ARP 表中没有源 IP 地址与 MAC 地址的映射关系<br> B.主机需要接收信息，但 ARP 表中只具有源 IP 地址与 MAC 地址的映射关系<br> C.主机需要发送信息，但 ARP 表中没有目的 IP 地址与 MAC 地址的映射关系<br> D.主机需要发送信息，但 ARP 表中只具有目的 IP 地址与 MAC 地址的映射关系</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.4</strong> <strong>地址解析协议</strong> <strong>ARP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>7．关于 OSPF 和 RIP，下列说法正确的是（ <strong>D</strong>）。<br> A.OSPF 和 RIP 都是静态路由<br> B.OSPF 属于距离向量型路由协议，RIP 属于链路状态型路由协议<br> C.OSPF 适合在小型的、动态的互联网上使用，而 RIP 适合在大型的、动态的互联网上使<br> 用<br> D.OSPF 适合在大型的、动态的互联网上使用，而 RIP 适合在小型的、动态的互联网上使<br> 用</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>8．IGP 的作用范围是（<strong>D</strong> ）。<br> A.主机<br> B.子网<br> C.区域<br> D.自治系统</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.1** <strong>有关路由选择协议的几个**</strong><br>** <strong>基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>9．对 IP 数据报分片的重组通常发生在（<strong>B</strong> ）上。<br> A.源主机<br> B.目的主机<br> C.IP 数据报经过的路由器<br> D.目的主机或路由器</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>10．如果主机地址部分的前 10 位用于子网，那么 184.231.138.239 的子网掩码是（ <strong>D</strong>）。<br> A.255.255.192.0<br> B.255.255.224.0<br> C.255.255.255.224<br> D.255.255.255.192</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：理解</strong></p><p>11．如果子网掩码是 255.255.255.224，那么主机 218.22.50.140 所在的驻留子网是（ <strong>C</strong>）。<br> A.218.22.50.224<br> B.218.22.50.140<br> C.218.22.50.128<br> D.218.22.50.32</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>12．IP 地址块 192.168.33.125/28 的子网掩码可写为（<strong>C</strong> ）。<br> A.255.255.255.192<br> B.255.255.255.224<br> C.255.255.255.240<br> D.255.255.255.248</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.3** <strong>无分类编址</strong> <strong>CIDR**</strong>（构造超****<br>** <strong>网）**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>13．在 RIP 协议中，最佳路径的衡量标准是（<strong>D</strong> ）。<br> A.时延<br> B.可靠性<br> C.带宽<br> D.路由跳数</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>14．IP 地址 192.168.1.255 代表（ <strong>B</strong>）。<br> A.一个 C 类网络<br> B.一个 C 类网络中的广播<br> C.一个 C 类网络中的主机<br> D.以上都不是</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>15．可以检测网络的连通状况的命令是（<strong>D</strong> ）。<br> A.ipconfig<br> B.tracert<br> C.nslookup<br> D.ping</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议</strong> <strong>ICMP——4.4.2 ICMP</strong> <strong>的应用举例**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>16．如果子网掩码是 255.255.255.128，那么下面主机（<strong>B</strong> ）必须通过路由器或三层交<br> 换机才能与主机 192.168.114.16 通信。<br> A.192.168.114.21<br> B.192.168.114.135<br> C.192.168.114.33<br> D.192.168.114.127</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.2** <strong>使用子网时分组的转发**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>17．CIDR 技术的作用是（<strong>A</strong> ）。<br> A.把小的网络汇聚成大的超网<br> B.多个主机共享同一个网络地址<br> C.把大的网络划分成小的子网<br> D.将本地 IP 地址转换成全球 IP 地址</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.3** <strong>无分类编址</strong> <strong>CIDR**</strong>（构造超****<br>** <strong>网）**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>18．IPv6 地址的长度是（ <strong>D</strong>）比特。<br> A.16<br> B.32<br> C.64<br> D.128</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.6 IPv6——4.6.2 IPv6** <strong>的地址**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>19．下列对 IPv6 地址 FF60:0:0:0601:BC:0:0:05D7 的简化表示中，错误的是（ <strong>B</strong>）。<br> A.FF60::601:BC:0:0:05D7<br> B.FF60::601:BC::05D7<br> C.FF60:0:0:601:BC::05D7<br> D.FF60:0:0:0601:BC::05D7</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.6 IPv6——4.6.2 IPv6** <strong>的地址**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>20．第一次对路由器进行配置，应该通过（<strong>D</strong> ）配置。<br> A.Web 浏览器<br> B.远程拨号<br> C.Telnet 方式<br> D.console 端口</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.5** <strong>路由器的构成**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>21．如果子网掩码是 255.255.0.0，那么下列地址为子网 112.11.0.0 内的广播地址的是<br> （ <strong>B</strong>）。<br> A.112.11.0.0<br> B.112.11.255.255<br> C.112.255.255.255<br> D.112.1.1.1</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>22．IP 地址 192.168.1.0 代表（<strong>A</strong> ）。<br> A.一个 C 类网络号<br> B.一个 C 类网络中的广播<br> C.一个 C 类网络中的主机<br> D.以上都不是</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>23．提供网络层的协议转换，并在不同网络之间存储和转发分组的网间连接器是（<strong>C</strong> ）。<br> A.转发器<br> B.网桥<br> C.路由器<br> D.网关</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.5** <strong>路由器的构成**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>24．下面的四个选项中，合法的 Internet 主机 IP 地址是（ <strong>C</strong>）。<br> A.208.132.309.33<br> B.192.168.17.55<br> C.211.202.59.103<br> D.101.58.173.2.13</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址；第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>—<br> —4.8** <strong>虚拟专用网</strong> <strong>VPN</strong> <strong>和网络地址转换</strong> <strong>NAT——4.8.1</strong> <strong>虚拟专用网</strong> <strong>VPN<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>25．如果主机地址部分的前 10 位用于表示子网，那么 184.231.138.239 的网络地址是<br> （ <strong>C</strong>）。<br> A.184.231.138.0<br> B.184.231.138.10<br> C.184.231.138.192<br> D.184.231.138.255</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.3** <strong>无分类编址</strong> <strong>CIDR**</strong>（构造超****<br>** <strong>网）**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：知识运用</strong></p><p>26．下列说法错误的是（<strong>A</strong> ）。<br> A.通常情况下，高速缓存中的 ARP 是由人工建立的<br> B.通常情况下，高速缓存中的 ARP 是由主机自动建立的<br> C.通常情况下，高速缓存中的 ARP 表是动态的<br> D.通常情况下，高速缓存中的 ARP 表保存了主机 IP 地址与物理地址的映射关系</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.4</strong> <strong>地址解析协议</strong> <strong>ARP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>27．EGP 在（ <strong>C</strong>）之间传播路由。<br> A.区域<br> B.局域网<br> C.自治系统<br> D.自然子网范围</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.1** <strong>有关路由选择协议的几个**</strong><br>** <strong>基本概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>28．下面的四个选项中，可用于局域网的 IP 地址是（ <strong>A</strong>）。<br> A.192.168.1.101<br> B.201.32.17.11<br> C.111.222.101.13<br> D.108.253.179.1</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.8** <strong>虚拟专用网</strong> <strong>VPN</strong> <strong>和网络地址转换</strong> <strong>NAT——4.8.1</strong> <strong>网络地址转**</strong><br>** <strong>换</strong> <strong>NAT<br>** <strong>难度：易</strong></strong><br>** <strong>类型：理解</strong></p><p>29．下面的 IPv6 地址，不符合书写规范是（ <strong>D</strong>）。<br> A．1236:0:0:CD30::<br> B．6F05::B3<br> C．::128.129.2.1<br> D．FE80::12::A2</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.6 IPv6——4.6.2 IPv6** <strong>的地址**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>30．（ <strong>B</strong>）向端系统提供虚电路和数据报两种网络服务。<br> A．广域网<br> B．通信子网<br> C．资源子网<br> D.局域网</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.1** <strong>网络层提供的两种服务**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>31．在 TCP/IP 协议体系的网际层，将 IP 地址映射到相应物理地址的协议是（ <strong>C</strong>）。<br> A.RARP<br> B.ICMP<br> C.ARP<br> D.IGMP</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.4</strong> <strong>地址解析协议</strong> <strong>ARP<br>** <strong>难度：易</strong></strong><br>** <strong>类型：识记</strong></p><p>32．以下关于子网掩码的说法，正确的是（ <strong>A</strong>）。<br> A.利用子网掩码可以判断两台主机是否在同一个子网<br> B.子网掩码代表 Internet 上每台主机的唯一编码<br> C.子网掩码用于设定网络管理员的密码<br> D.子网掩码的引入主要是为了方便记忆</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：理解</strong></p><p>33．通常分配给小型网络使用的 IP 地址是（ <strong>C</strong>）地址。<br> A.A 类<br> B.B 类<br> C.C 类<br> D.D 类</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>34．路由器最主要的功能是（ <strong>B</strong>）。<br> A.集中线路<br> B.选择数据分组传输的最佳路径<br> C.连接互联网<br> D.将信号还原为原来的速率再发送出去</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.5** <strong>路由器的构成**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>35．利用（ <strong>A</strong>）可以判断两台主机是否处于同一子网。<br> A.子网掩码<br> B.子网号<br> C.IP 地址<br> D.域名</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>36．将网络互相连接起来要使用一些中间设备，在网络层以上使用的中间设备是（ <strong>D</strong>）。<br> A.中继器<br> B.网桥<br> C.路由器<br> D.网关</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.1</strong> <strong>虚拟互连网络**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>37．IP 服务的主要特点是（ <strong>A</strong>）。<br> A.不可靠，无连接和尽最大努力投递<br> B.可靠，面向连接和尽最大努力投递<br> C.不可靠，面向连接和全双工<br> D.可靠，无连接和全双工</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.1</strong> <strong>虚拟互联网络**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>38．某路由器收到了一个 IP 数据报，在对其首部进行校验后发现该数据报存在错误，路由器<br> 最有可能采取的动作是（ <strong>C</strong>）。<br> A.纠正该 IP 数据报的错误<br> B.将该 IP 数据报返给源主机<br> C.丢弃该 IP 数据报<br> D.通知目的主机数据报出错</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.6 IP</strong> <strong>层转发分组的流程**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>39．如果子网掩码是 255.255.255.224，那么主机 192.168.23.122 所在的驻留子网是（<strong>D</strong> ）。<br> A.192.168.0.0<br> B.192.168.23.32<br> C.192.168.0.96<br> D.192.168.23.96</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>40．ARP 的功能是（ <strong>D</strong>）。<br> A.验证数据帧的接收<br> B.获得主机的 IP 地址，然后将 IP 地址映射到一个注册的域名上<br> C.测量在单个发送过程中丢失的数据包数<br> D.获得主机的 MAC 地址，然后将 MAC 地址映射到主机的 IP 地址上</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.4</strong> <strong>地址解析协议</strong> <strong>ARP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>41．三层交换机在转发数据时，可以根据数据包的（<strong>B</strong> ）进行路由的选择和转发。<br> A.源 IP 地址<br> B.目的 IP 地址<br> C.源 MAC 地址<br> D.目的 MAC 地址</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.6 IP</strong> <strong>层转发分组的流程**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>42．在路由表中 0.0.0.0 代表（<strong>C</strong> ）。<br> A.静态路由<br> B.动态路由<br> C.默认路由<br> D.RIP 路由</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.6 IP</strong> <strong>层转发分组的流程**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>43．当（ <strong>B</strong>）时，需要使用 NAPT。<br> A.缺乏全局 IP 地址<br> B.没有专门申请的全局 IP 地址，只有一个连接 ISP 的全局 IP 地址<br> C.内部网要求上网的主机数很多<br> D.提高内网的安全性</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.8** <strong>虚拟专用网</strong> <strong>VPN</strong> <strong>和网络地址转换</strong> <strong>NAT——4.8.2</strong> <strong>网络地址转**</strong><br>** <strong>换</strong> <strong>NAT<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>44．Internet 中，IP 数据报从源结点到目的结点，可能需要经过多个网络和路由器。在整个<br> 传输过程中，IP 数据报报头中的（ <strong>A</strong>）。<br> A.源地址和目的地址都不会发生变化<br> B.源地址有可能发生变化，而目的地址不会发生变化<br> C.源地址不会发生变化，而目的地址有可能发生变化<br> D.源地址和目的地址都有可能发生变化</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.6 IP</strong> <strong>层转发分组的流程**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>45．IP 协议的核心问题是（ <strong>B</strong>）。<br> A.传输<br> B.寻径<br> C.封装<br> D.选择</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.6 IP</strong> <strong>层转发分组的流程**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>46．输入 ping 命令后可以接收到（<strong>A</strong> ）信息。<br> A.ICMP 数据包的大小和数量、超时时间、成功率、往返时间<br> B.SNMP 数据包的大小和数量、超时时间、成功率、往返时间<br> C.ICMP 数据包的大小和数量、MAC 地址、成功率、往返时间<br> D.SNMP 数据包的大小和数量、超时时间、TCP 状态、往返时间</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议</strong> <strong>ICMP——4.4.2 ICMP</strong> <strong>的应用举例**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>47．有一种互连设备工作于网络层，它既可以用于相同（或相似）网络间的互连，也可以用于<br> 异构网络间的互连，这种设备是（<strong>C</strong> ）。<br> A.集线器<br> B.交换机<br> C.路由器<br> D.网关</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.5** <strong>路由器的构成**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>48．在转发数据包时，网络层所使用的主要信息依据是（ <strong>A</strong>）。<br> A.IP 路由表<br> B.RP 响应<br> C.桥接表<br> D.名字服务器的数据</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.6 IP</strong> <strong>层转发分组的流程**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>49．配置 OSPF 路由，必须具有的网络区域是（<strong>A</strong> ）。<br> A.Area0<br> B.Area1<br> C.Area2<br> D.Area3</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>50．下列用于查看路由表的命令是（<strong>A</strong> ）。<br> A.show ip route<br> B.show ip protocols<br> C.debug ip rip<br> D.clear ip route</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>51．以下关于 NAT 技术产生的目的描述准确的是（<strong>B</strong> ）。<br> A.为了增加网络的可利用率而开发<br> B.为了缓解 IP 地址空间枯竭的速度<br> C.IPV4 向 IPV6 过渡时期的手段<br> D.为了隐藏局域网内部服务器的真实 IP 地址</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.8** <strong>虚拟专用网</strong> <strong>VPN</strong> <strong>和网络地址转换</strong> <strong>NAT——4.8.2</strong> <strong>网络地址转**</strong><br>** <strong>换</strong> <strong>NAT<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>52．若两台主机位于同一子网中，则这两台主机的 IP 地址分别与它们的子网掩码进行逻辑与<br> 运算，结果一定（<strong>C</strong> ）。<br> A.为全 0<br> B.为全 1<br> C.相同<br> D.不同</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>53．IP 协议向运输层提供的是（ <strong>A</strong>）。<br> A.无连接的不可靠的服务<br> B.面向连接的不可靠的服务<br> C.无连接的可靠的服务<br> D.面向连接的可靠的服务</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.1</strong> <strong>虚拟互联网络**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>54．虚拟专用网 VPN 采用的类似点对点通信的安全技术是（<strong>C</strong> ）。<br> A.加密技术<br> B.身份认证技术<br> C.隧道技术<br> D.密钥管理技术</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.8** <strong>虚拟专用网</strong> <strong>VPN</strong> <strong>和网络地址转换</strong> <strong>NAT——4.8.1</strong> <strong>虚拟专用网**</strong><br> VPN<br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>55.子网上有一台工作站不能连接同一子网的 Server，而其他机器都能连接该 Server，用网<br> 络监视器发现这台 Windows 工作站在每次连接 Server 时，它广播 ARP 找默认网关（Default<br> Gateway）。其原因是（<strong>B</strong> ）<br> A．默认网关地址不正确<br> B. 子网掩码不正确<br> C．有多个 IP 地址<br> D. 没有 DNS</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>56.在以下 Internet 路由选择协议中，属于外部网关协议的是（ <strong>D</strong>）<br> A. RIP<br> B. HELLO<br> C. OSPF<br> D. BGP</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.4** <strong>外部网关协议</strong> <strong>BGP<br>** <strong>难度：易</strong></strong><br>** <strong>类型：识记</strong></p><p>57.Internet 与 X.25 网络之间的互连设备是（ <strong>D</strong>）<br> A. 中继器<br> B. 网桥<br> C. 路由器<br> D. 网关</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.1</strong> <strong>虚拟互连网络**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>58.RIP 协议和 OSPF 协议分别使用哪个协议进行传输？（<strong>A</strong> ）<br> A. UDP 和 IP<br> B. TCP 和 UDP<br> C. TCP 和 IP<br> D. 都使用 IP</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** **第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.3** <strong>内部网关协议</strong> <strong>OSPF</strong><br> <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>59 在 TCP/IP 网络中，每台主机都应该配置（ <strong>B</strong>）<br> A. IP 地址和默认网关<br> B. IP 地址和子网掩码<br> C. 只配置 IP 地址即可<br> D. 都必须配置 IP 地址、子网掩码和默认网关</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>60．以下哪些协议属于内部网关协议？（ <strong>C</strong>）<br> A. EGP<br> B. BGP<br> C. RIP、OSPF<br> D. BGP4</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.1** <strong>有关路由选择协议的几**</strong><br>** <strong>个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>61．RIP 协议采用（ <strong>A</strong>）协议广播距离向量？<br> A. UDP<br> B. IP<br> C. TCP<br> D. ICMP</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>难度：易</strong></strong><br>** <strong>类型：识记</strong></p><p>62．某 IP 地址 169.1.9.10 属于（ <strong>B</strong>）类地址<br> A. A 类地址<br> B. B 类地址<br> C. C 类地址<br> D. D 类地址</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>63．固定式路由选择算法属于（<strong>B</strong> ）<br> A. 自适应路由选择算法<br> B. 非自适应路由选择算法<br> C. 分布式路由选择算法<br> D. 集中式路由选择算法</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.3** <strong>内部网关协议**</strong><br> OSPF<br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>64．网关是运行在 ISO 参考模型哪一层的互连中继设备？（<strong>C</strong> ）<br> A. 网络层<br> B. 低三层<br> C. 高层<br> D. 数据链路层</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.1</strong> <strong>虚拟互连网络**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>65．ping 命令的功能借助（ <strong>B</strong>）协议来实现？<br> A. IP<br> B. ICMP<br> C. TCP<br> D. UDP</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议</strong> <strong>ICMP——4.4.2 ICMP</strong> <strong>的应用举例**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>66.ARP 协议的作用是（ <strong>D</strong>）。<br> A. 将端口号映射到 IP 地址<br> B. 连接 IP 层和 TCP 层<br> C. 广播 IP 地址<br> D. 将 IP 地址映射到第二层地址</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网路层**</strong>——4.2** <strong>网际协议**</strong>——4.2.4** <strong>地址解析协议</strong> <strong>ARP<br>** <strong>【难度】：易</strong></strong><br>** <strong>【类型】：识记</strong></p><p>67.如果用户网络需要划分成5个子网，每个子网最多20台主机，则适用的子网掩码是（<strong>B</strong> ）<br> A. 255.255.255.192<br> B. 255.255.255.224<br> C.255.255.255.240<br> D. 255.255.255.248</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>概述**</strong>——4.3** <strong>划分子网和构造子网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>68.ARP 请求是采用（ <strong>C</strong>）方式发送的。<br> A.单播<br> B.组播<br> C. 广播<br> D. 点播</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.4</strong> <strong>地址解析协议</strong> <strong>ARP<br>** <strong>【难度】：易</strong></strong><br>** <strong>【类型】：识记</strong></p><p>69.ARP 的协议数据单元封装在（ <strong>B</strong>）中传送。<br> A. IP 分组<br> B.以太帧<br> C. TCP 段<br> D. UDP 报文</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.4</strong> <strong>地址解析协议</strong> <strong>ARP<br>** <strong>【难度】：中</strong></strong><br>** <strong>【类型】：理解</strong></p><p>70.某主机的IP地址是193.100.77.55，掩码为255.255.252.0，若该主机向其所在的网络发送广播分组，则目的地址可能是（ <strong>D</strong> ）<br> A. 193.100.76.0<br> B.193.100.76.255<br> C. 193.100.77.255<br> D. 193.100.79.255</p><p><strong>【知识点】：第**</strong>4**<strong>章</strong> <strong>网络层**</strong>——4.3**<strong>划分子网和构造超网**</strong>——4.3.3** <strong>无分类编址**</strong>CIDR**<strong>（构造超网）**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>71.TCP/IP协议中负责将IP地址转换为物理地址的协议是（ <strong>C</strong> ）。<br> A. ICMP<br> B. IP<br> C. ARP<br> D. TCP</p><p><strong>【知识点】：第**</strong>4**<strong>章</strong> <strong>网络层**</strong>——4.2**<strong>网际协议**</strong>IP——4.2.4**<strong>地址解析协议**</strong>ARP<br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>72.某公司申请到一个C类网络，由于有地理位置上的考虑必须切割成5个子网，请问子网掩码要设为（ <strong>A</strong> ）。<br> A. 255.255.255.224<br> B. 255.255.255.240<br> C. 255.255.255.192<br> D. 255.255.255.254</p><p><strong>【知识点】：第**</strong>4**<strong>章</strong> <strong>网络层**</strong>——4.3**<strong>划分子网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>73.ICMP协议的功能包括（ <strong>B</strong> ）<br> A. 传递路由信息<br> B. 报告通信故障<br> C.分配网络地址<br> D. 管理用户连接</p><p><strong>【知识点】：第**</strong>4**<strong>章</strong> <strong>网络层**</strong>——4.4**<strong>网际控制报文协议**</strong>ICMP<br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>74.如果子网173.6.32.0/20被划分为子网173.6.32.0/26则下列结论中正确的是（ <strong>D</strong> ）<br> A. 被划分为62个子网<br> B.每个子网有64个主机<br> C. 被划分为32个子网<br> D. 每个子网有62个主机</p><p><strong>【知识点】：第**</strong>4**<strong>章</strong> <strong>网络层**</strong>——4.3**<strong>划分子网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：理解</strong></p><p>75.访问因特网的每台主机都需要分配IP地址（假定采用缺省子网掩码），IP地址（ <strong>C</strong>）分配给主机是正确的。<br> A. 192.46.10.0<br> B.212.6.256.2<br> C. 110.47.10.0<br> D. 127.10.10.17</p><p><strong>【知识点】：第**</strong>4**<strong>章</strong> <strong>网络层**</strong>——4.2**<strong>网络协议**</strong>IP——4.2.2** <strong>分类的**</strong>IP**<strong>地址**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>76.若IP数据报在传送过程中，TTL字段等于零，则路由器会发出（ <strong>A</strong> ）<br> A. 超时<br> B.路由重定向<br> C. 目标不可达<br> D. 源站抑制</p><p><strong>【知识点】：第**</strong>4**<strong>章</strong> <strong>网络层**</strong>——4.2**<strong>网际协议**</strong>IP——4.2.5 IP**<strong>数据报的格式**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>77.IPv6地址分为3种类型，它们是（ <strong>B</strong> ）<br> A. A类地址、B类地址、C类地址<br> B.单播地址、组播地址、任意播地址<br> C. 单播地址、组播地址、广播地址<br> D. 公共地址、站点地址、接口地址</p><p><strong>【知识点】：第**</strong>4**<strong>章</strong> <strong>网络层**</strong>——4.6IPv6<br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>78.作为ICMP的一个重要应用，分组网间探测ping使用了回送请求和（ <strong>A</strong> ）报文<br> A. 回送回答<br> B.时间戳请求<br> C. 时间戳回答<br> D. 差错报告</p><p><strong>【知识点】：第**</strong>4**<strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议**</strong>ICMP——4.4.1 ICMP**<strong>报文的种类**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>79.作为 ICMP 的一个重要应用，分组网间探测 ping 使用了回送请求和（<strong>A</strong> ）报文<br> A. 回送回答<br> B.时间戳请求<br> C. 时间戳回答<br> D. 差错报告</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议</strong> <strong>ICMP——4.4.1 ICMP</strong> <strong>报文的种类**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>80.对 IP 数据报分片的重组通常发生在（<strong>C</strong> ）上。<br> A. 源主机<br> B. IP 数据报经过的路由器<br> C. 目的主机<br> D. 目的主机或路由器</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议**</strong>——4.2.6 IP** <strong>层转发分组的流程**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>81.如果子网 173.6.32.0/20 被划分为子网 173.6.32.0/26 则下列结论中正确的是（ <strong>D</strong>）<br> A. 被划分为 62 个子网<br> B.每个子网有 64 个主机<br> C. 被划分为 32 个子网<br> D. 每个子网有 62 个主机</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：理解</strong></p><p>82.IP 多播需要使用（ <strong>C</strong>）协议和多播路由选择协议。<br> A. ICMP<br> B.RIP<br> C. IGMP<br> D. OSPF<br> .<br> <strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.7 IP** <strong>多播**</strong>——4.7.3** <strong>网际组管理协议（**</strong>IGMP**<strong>）和多播路由**</strong><br>** <strong>选择协议**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>83.某个 IP 地址的子网掩码为 255.255.255.192，该掩码又可以写为（<strong>C</strong> ）<br> A. /24<br> B. /25<br> C. /26<br> D. /28<br> .<br> <strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>84.下列关于 IP 地址的说法中错误的是（ <strong>C</strong>）<br> A．一个 IP 地址只能标识网络中的唯一的一台计算机<br> B．IP 地址一般用点分十进制表示<br> C．地址 205.106.286.36 是一个非法的 IP 地址<br> D．同一个网络中不能有两台计算机的 IP 地址相同</p><p><strong>【知识点】：第四章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP<br>** <strong>【难度】：中</strong></strong><br>** <strong>【类型】：理解</strong></p><p>85.设有两个子网 192.168.133.0/24 和 192.168.130.0/24，如果进行路由聚合，得到的网络<br> 地址是（ <strong>B</strong>）<br> A. 192.168.128.0/22<br> B. 192.168.128.0/21<br> C. 192.168.130.0/22<br> D. 192.168.132.0/20</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网路层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>86.有一个用来测试二个主机之间的连通性的命令是（ <strong>B</strong>）。<br> A.routing<br> B. ping<br> C. ARP<br> D. RARP</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议</strong> <strong>ICMP——4.4.2 ICMP</strong> <strong>的应用举例**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>87.常用的 IP 地址有 A、B、C 三类，128.11.3.31 是一个（ <strong>B</strong>）类 IP 地址。<br> A. A 类<br> B. B 类<br> C. C 类<br> D. D 类</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网络协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>88.题 2 中的 IP 地址，若采用默认子网掩码，其网络标识（netid）为（<strong>C</strong> ）。<br> A. 128.11.3.31<br> B. 128<br> C. 128.11<br> D. 128.11.3</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网络协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>89.访问因特网的每台主机都需要分配 IP 地址（假定采用缺省子网掩码），IP 地址（<strong>C</strong> ）<br> 分配给主机是正确的。<br> A. 192.46.10.0<br> B.212.6.256.2<br> C. 110.47.10.0<br> D. 127.10.10.17</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网络协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>90.若 IP 数据报在传送过程中，TTL 字段等于零，则路由器会发出（ <strong>A</strong>）<br> A. 超时<br> B.路由重定向<br> C. 目标不可达<br> D. 源站抑制</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>91.某主机的 IP 地址是 193.100.77.55，掩码为 255.255.252.0，若该主机向其所在的网络发送<br> 广播分组，则目的地址可能是（<strong>D</strong> ）<br> A. 193.100.76.0<br> B.193.100.76.255<br> C. 193.100.77.255<br> D. 193.100.79.255</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.3** <strong>无分类编址</strong> <strong>CIDR**</strong>（构造****<br>** <strong>超网）**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>92.如果用户网络需要划分成5个子网，每个子网最多20台主机，则适用的子网掩码是（<strong>B</strong> ）<br> A. 255.255.255.192<br> B. 255.255.255.224<br> C.255.255.255.240<br> D. 255.255.255.248</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>概述**</strong>——4.3** <strong>划分子网和构造子网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>93.若 IP 数据报在传送过程中，TTL 字段等于零，则路由器会发出（ <strong>A</strong>）<br> A. 超时<br> B.路由重定向<br> C. 目标不可达<br> D. 源站抑制</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>94.ARP 的协议数据单元封装在（<strong>B</strong> ）中传送。<br> A. IP 分组<br> B.以太帧<br> C. TCP 段<br> D. UDP 报文</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.4</strong> <strong>地址解析协议</strong> <strong>ARP<br>** <strong>【难度】：中</strong></strong><br>** <strong>【类型】：理解</strong></p><p>95.作为 ICMP 的一个重要应用，分组网间探测 ping 使用了回送请求和（ <strong>A</strong>）报文<br> A. 回送回答<br> B.时间戳请求<br> C. 时间戳回答<br> D. 差错报告</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议</strong> <strong>ICMP——4.4.1 ICMP</strong> <strong>报文的种类**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>96.IP 地址 128.11.3.31，若采用默认子网掩码，其网络标识（netid）为（ <strong>C</strong>）。<br> A. 128.11.3.31<br> B. 128<br> C. 128.11<br> D. 128.11.3</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网络协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>97.IP 多播需要使用（ <strong>C</strong>）协议和多播路由选择协议。<br> A. ICMP<br> B.RIP<br> C. IGMP<br> D. OSPF</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.7 IP** <strong>多播**</strong>——4.7.3** <strong>网际组管理协议（**</strong>IGMP**<strong>）和多播路由**</strong><br>** <strong>选择协议**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p><strong>多选题</strong></p><p>1．下列 IP 地址中，不能分配给 Internet 主机的有（ <strong>ABDE</strong>）。<br> A.10.1.1.220<br> B.192.168.1.101<br> C.213.212.202.202<br> D.172.20.20.11<br> E.127.0.0.1</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址；第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>—<br> —4.8** <strong>虚拟专用网</strong> <strong>VPN</strong> <strong>和网络地址转换</strong> <strong>NAT——4.8.1</strong> <strong>虚拟专用网</strong> <strong>VPN<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>2．关于 OSPF 和 RIP 两个路由协议，下面说法正确的有（ <strong>AD</strong>）。<br> A.两者都是动态路由<br> B.两者都是静态路由<br> C.OSPF 根据距离向量选择最佳路径，而 RIP 根据链路状态选择最佳路径<br> D.OSPF 适合在大型的网络上使用，而 RIP 适合在小型的网络上使用<br> E.从技术上讲，RIP 路由比 OSPF 路由先进</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>3．以下可用于从 IPv4 过渡到 IPv6 的技术有（<strong>BCD</strong> ）。<br> A.虚拟专用网<br> B.双协议栈<br> C.隧道技术<br> D.网络地址转换<br> E.访问控制列表</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.6 IPv6——4.6.3** <strong>从</strong> <strong>IPv4</strong> <strong>向</strong> <strong>IPv6</strong> <strong>过渡**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>4．下列关于地址转换的描述，正确的是（ <strong>AD</strong>）。</p><p>A.地址转换解决了因特网地址短缺所面临的问题<br> B.地址转换实现了对用户透明的网络外部地址的分配<br> C.使用地址转换后，对 IP 数据报加长、快速转发等不会造成影响<br> D.地址转换对内部主机提供了一定的隐私<br> E.地址转换使得网络调试变得更加简单了</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.8** <strong>虚拟专用网</strong> <strong>VPN</strong> <strong>和网络地址转换</strong> <strong>NAT——4.8.2</strong> <strong>网络地址转**</strong><br>** <strong>换</strong> <strong>NAT<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p><strong>判断题</strong></p><p>1．默认路由是在路由表中没有找到明确的目的网络时所选择的路由。（√ ）</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.6 IP</strong> <strong>层转发分组的流程**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>2．使用 ping 命令可以检测网络的连通性。（ √）</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议</strong> <strong>ICMP——4.4.2 ICMP</strong> <strong>的应用举例**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>3．使用 NAT 技术可以将私用的本地 IP 地址转换为合法的全球 IP 地址。（√ ）</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.8** <strong>虚拟专用网</strong> <strong>VPN</strong> <strong>和网络地址转换</strong> <strong>NAT——4.8.2</strong> <strong>网络地址转**</strong><br>** <strong>换</strong> <strong>NAT<br>** <strong>难度：易</strong></strong><br>** <strong>类型：理解</strong></p><p>4．默认路由是预先设定的最短路径。（× ）</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.6 IP</strong> <strong>层转发分组的流程**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>5．高速缓存中的 ARP 表保存了主机 IP 地址与物理地址的映射关系。（√ ）</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际</strong> <strong>IP——4.2.4</strong> <strong>地址解析协议</strong> <strong>ARP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>6．IPv6 地址仍然采用点分十进制记法。（ ×）</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.6 IPv6——4.6.2 IPv6** <strong>的地址**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>7．OSPF 是一种基于距离向量的内部网关协议。（× ）</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.3** <strong>内部网关协议</strong> <strong>OSPF<br>** <strong>难度：易</strong></strong><br>** <strong>类型：识记</strong></p><p>8．网络层所提供的服务可分为面向连接的服务和无连接的服务。（ √）</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.1** <strong>网络层提供的两种服务**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>9．BGP 是一种外部网关协议，用于在不同的自治系统之间进行路由选择。（√ ）</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.4** <strong>外部网关协议</strong> <strong>BGP<br>** <strong>难度：易</strong></strong><br>** <strong>类型：识记</strong></p><p>10．默认路由是预先设定的最短路径。（ ×）</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.6 IP</strong> <strong>层转发分组的流程**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>11.IP 数据报的校验和只校验其首部，为进一步减小校验和的工作量，IP 首部的校验和不采<br> 用 CRC 校验码。（√ ）</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>12.IGMP的两个重要应用是ping和traceroute。（ × ）</p><p><strong>【知识点】：第**</strong>4**<strong>章</strong> <strong>网络层**</strong>——4.4**<strong>网际报文协议**</strong>ICMP——4.2.2 ICMP**<strong>的应用举例**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>13.将 IP 地址和掩码的反码进行与运算可得到主机地址。（√ ）</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>14.IGMP 的两个重要应用是 ping 和 traceroute。（× ）</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际报文协议</strong> <strong>ICMP——4.2.2 ICMP</strong> <strong>的应用举例**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>15.使用子网划分网络后，路由表必须包含以下三项内容：目的网络地址、子网掩码和下一跳<br> 地址。（√ ）</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>16.IPv6 具有更大的地址空间，但不支持无连接的传送。（× ）</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.6IPv6——4.6.1IPv6** <strong>的基本首部**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>17.ping 是 IGMP 的重要应用。（ ×）</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议</strong> <strong>ICMP<br>** <strong>【难度】：易</strong></strong><br>** <strong>【类型】：识记</strong></p><p>18.IP 数据报的校验和只校验其首部，为进一步减小校验和的工作量，IP 首部的校验和不采<br> 用 CRC 校验码。（√ ）</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>19.OSPF 的更新过程收敛的快是其重要优点。（ √）</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.3** <strong>内部网关协议</strong> <strong>OSPF<br>** <strong>【难度】：易</strong></strong><br>** <strong>【类型】：识记</strong></p><p><strong>填空题</strong></p><p>1．IPv6 的地址长度是<strong>128</strong>位二进制位。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.6 IPv6——4.6.2 IPv6** <strong>的地址**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>2．ICMP 通常被认为是<strong>网络</strong>层的协议</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议</strong> <strong>ICMP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>3．IPv6 采用<strong>冒号十六进制法</strong>书写地址。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.6 IPv6——4.6.2 IPv6** <strong>的地址**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>4．IPv4 的地址长度是<strong>32</strong>位二进制位，IPv6 的地址长度是<strong>128</strong>位二进制位</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址；第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>—<br> —4.6 IPv6——4.6.2 IPv6** <strong>的地址**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>5．ARP 通常被认为是<strong>网络</strong>层的协议。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.4</strong> <strong>地址解析协议</strong> <strong>ARP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>6．若目的地址是 200.45.34.56，子网掩码是 255.255.240.0，则子网地址是<strong>200.45.32.0</strong>。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>7．与一个 C 类 IP 地址相对应的默认子网掩码是<strong>255.255.255.0</strong></p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>8.在 Windows 网络操作系统中，使用（<strong>ping</strong>）命令可以测试一台远方主机的连通性，使用（<strong>netstat</strong>）命<br> 令可以显示网络状态。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议</strong> <strong>ICMP——4.4.2 ICMP</strong> <strong>的应用举例**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>9.ARP 协议实现（<strong>IP</strong> <strong>地址</strong>）地址到（<strong>MAC</strong> <strong>地址</strong>）地址的映射。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.4</strong> <strong>地址解析协议</strong> <strong>ARP<br>** <strong>难度：易</strong></strong><br>** <strong>类型：识记</strong></p><p>10.在 Windows 网络操作系统中，使用（ <strong>arp</strong>）命令决定一台远方主机的 MAC 地址，<br> 使用（<strong>ipconfig</strong> ）命令可以察看与主机的网络接口的相关选项和参数。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.4</strong> <strong>地址解析协议</strong> <strong>ARP<br>** <strong>难度：易</strong></strong><br>** <strong>类型：识记</strong></p><p>11…分组交换网络提供的两个主要服务是（<strong>数据报</strong> ）和（<strong>虚电路</strong> ）</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.1** <strong>网络层提供的两种服务**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>12．ARP 协议实现（<strong>IP</strong> ）地址解析成（<strong>MAC**</strong>（或物理、硬件）** ）地址的过程。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.3 IP</strong> <strong>地址与硬件地址**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>13．OSPF 是基于（ <strong>链路状态</strong>）的分布式路由选择协议，采用（<strong>迪杰斯特拉</strong> ）算法计算路由。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.3** <strong>内部网关协议</strong> <strong>OSPF<br>** <strong>难度：易</strong></strong><br>** <strong>类型：识记</strong></p><p>14．常用的分布式路由选择算法包括（ <strong>距离向量</strong>）和（ <strong>链路状态</strong>）。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>难度：易</strong></strong><br>** <strong>类型：识记</strong></p><p>15．RIP 是基于（<strong>距离向量</strong> ）的分布式路由选择协议，距离的度量采用<br> （<strong>跳数</strong> ）。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>难度：易</strong></strong><br>** <strong>类型：识记</strong></p><p>16．RARP 协议实现（ <strong>MAC**</strong>（或物理或硬件）地址<strong>）地址到（</strong>IP** <strong>地址</strong> ）地址的解析过程。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.3 IP</strong> <strong>地址与硬件地址**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>17.OSPF 根据<strong>链路状态</strong>决定路由的选择，采用<strong>最短路径优先</strong>算法实现。</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.3** <strong>内部网关协议</strong> <strong>OSPF<br>** <strong>难度：易</strong></strong><br>** <strong>类型：识记</strong></p><p>18.地址 192.168.86.0/28 中有<strong>14</strong>个可用的子网和<strong>14</strong>台可用的主机。</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.2** <strong>构造超网**</strong><br>** <strong>【难度】：中</strong></p><p>19.ICMP的报文分为<strong>差错报告报文</strong>和<strong>询问报文</strong>两种。</p><p><strong>【知识点】：第**</strong>4**<strong>章网络层**</strong>——4.4** <strong>网际控制报文协议**</strong>ICMP——4.4.1 ICMP**<strong>的种类**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>20.网络号与主机号的32位全1的IP地址即255.255.255.255是<strong>本网广播地址或受限广播地址</strong>。</p><p><strong>【知识点】：第**</strong>4**<strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议**</strong>IP——4.2.2** <strong>分类的**</strong>IP**<strong>地址**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p><strong>名词解释</strong></p><p>1.RIP<br> <strong>【答案】：分布式的基于距离向量的路由选择协议</strong></p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>【难度】：中</strong></strong><br>** <strong>【类型】：理解</strong></p><p>2.OSPF<br> 【<strong>答案】：**</strong>Open Shortest Path First**<strong>，开放最短通路优先</strong></p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.3** <strong>内部网关协议</strong> <strong>OSPF<br>** <strong>【难度】：易</strong></strong><br>** <strong>【类型】：识记</strong></p><p>3.MPLS<br> <strong>【答案】：多协议标记交换，独立于第二和第三层协议，提供了一种方式，将</strong> <strong>IP</strong> <strong>地址映**</strong><br>** <strong>射为简单的具有固定长度的标签，用于不同的包转发和包交换技术。</strong></p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章网络层**</strong>——4.9** <strong>多协议标记交换</strong> <strong>MPLS——4.9.1 MPLS</strong> <strong>的工作原理**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p><strong>简答题</strong></p><p>1．网络层向上提供的服务有哪两种？请比较各自的特点。<br> <strong>答案：**</strong><br>** <strong>网络层向上可提供两种类型的服务：面向连接的虚电路服务和无连接的数据报服务。**</strong><br>** <strong>数据报方式中，分组是独立的实体，各分组可以经由不同的路径到达终点。虚电路方式**</strong><br>** <strong>中，必须先建立一条虚电路，然后各分组沿着同一路径到达终点。虚电路的可靠通信由网络**</strong><br>** <strong>保证，数据报的可靠通信则由用户主机保证。</strong></p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.1** <strong>网络层提供的两种服务**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>2．简述 RIP 路由协议的工作原理。<br> <strong>答案：**</strong><br> RIP** <strong>是一种分布式的基于距离向量的路由选择协议。**</strong>RIP** <strong>将**</strong>“**<strong>距离**</strong>”**<strong>定义为从源主机到目**</strong><br>** <strong>的主机所经过的路由器数量，也称为**</strong>“**<strong>跳数**</strong>”**<strong>。**</strong>RIP** <strong>认为好的路由就是跳数最少的路由。**</strong>RIP<br>** <strong>允许一条路由最多包含</strong> <strong>15</strong> <strong>个路由器。**</strong>RIP** <strong>仅和相邻路由器交换信息；路由器交换的信息是当**</strong><br>** <strong>前路由器所知道的全部信息，即自己的路由表；**</strong>RIP** <strong>通常每隔</strong> <strong>30</strong> <strong>秒交换一次路由信息。</strong></p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>3．简述 IP 协议的基本任务。</p><p><strong>答案：</strong><br> <strong>IP</strong> <strong>协议的基本任务是通过互联网传送数据报。其特点包括：主机上的网络层（**</strong>IP** <strong>层）向**</strong><br>** <strong>运输层提供服务；**</strong>IP** <strong>从源传输实体取得数据，并传送给目的主机的</strong> <strong>IP</strong> <strong>层；**</strong>IP** <strong>从不保证服务**</strong><br>** <strong>的可靠性；**</strong>IP** <strong>将高层协议数据封装为数据报，并交给下一层。</strong></p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.1</strong> <strong>虚拟互联网络**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>4．请指出下列 IP 地址中的错误。<br> （1）112.56.48.76.20<br> <strong>在</strong> <strong>IP</strong> <strong>地址的点分十进制记法中，**</strong>IP** <strong>地址不能超过</strong> <strong>4</strong> <strong>个字段。</strong></p><p>（2）183.256.76.253<br> <strong>在</strong> <strong>IP</strong> <strong>地址的点分十进制记法中，**</strong>IP** <strong>地址的每一个字段不能大于</strong> <strong>255</strong></p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>5．请问下列 IP 地址能否分配给主机？如果不能，请说明理由。<br> （1）131.107.256.80<br> （2）231.222.0.11<br> （3）126.1.0.0<br> （4）198.121.254.255<br> （5）202.117.34.32<br> <strong>答案：**</strong><br>** <strong>（**</strong>1**<strong>）不能分配主机，因为第三个字节</strong> <strong>256</strong> <strong>大于</strong> <strong>255**</strong>，是非法值。****<br>** <strong>（**</strong>2**<strong>）不能分配给主机，因为第一个字节</strong> <strong>231</strong> <strong>位于</strong> <strong>224</strong> <strong>和</strong> <strong>239</strong> <strong>之间，说明是组播地址。**</strong><br>** <strong>（**</strong>3**<strong>）不能分配给主机，因为以全</strong> <strong>0</strong> <strong>结尾的</strong> <strong>IP</strong> <strong>地址是网络地址。**</strong><br>** <strong>（**</strong>4**<strong>）不能分配给主机，因为以全</strong> <strong>1</strong> <strong>结尾的</strong> <strong>IP</strong> <strong>地址是广播地址。**</strong><br>** <strong>（**</strong>5**<strong>）可以分配给主机。</strong><br> <strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.2</strong> <strong>分类的</strong> <strong>IP</strong> <strong>地址**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>6．简述 IP 地址与 MAC 地址的区别。为什么要使用这两种不同类型的地址？<br> <strong>从层次的角度看，物理地址是数据链路层和物理层使用的地址。而</strong> <strong>IP</strong> <strong>地址是网络层及其**</strong><br>** <strong>以上各层使用的地址，是一种逻辑地址。**</strong><br>** <strong>由于全世界存在各式各样的网络，使用不同的硬件地址。要使这些异构网络能够互相通**</strong><br>** <strong>信，就必须进行非常复杂的硬件地址转换工作。由用户或用户主机来完成这项工作几乎是不**</strong><br>** <strong>可能的事。但统一的</strong> <strong>IP</strong> <strong>地址把这个复杂问题解决了。连接到</strong> <strong>Internet</strong> <strong>的主机只需拥有统一**</strong><br>** <strong>的</strong> <strong>IP</strong> <strong>地址，它们之间的通信就像连接在同一个网络上那样简单方便。当需要把</strong> <strong>IP</strong> <strong>地址转换**</strong><br>** <strong>为物理地址时，使用</strong> <strong>ARP</strong> <strong>协议即可实现。</strong><br> <strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.3 IP</strong> <strong>地址与硬件地址**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>7．为了缓解和最终解决 IPv4 地址空间耗尽的问题，IETF 提出和使用了一系列技术方案，请<br> 列举出这些技术方案。<br> <strong>答案：**</strong><br>** <strong>为了缓解和最终解决</strong> <strong>IPv4</strong> <strong>地址空间耗尽的问题，**</strong>IETF** <strong>提出和使用过的技术方案主要有：**</strong><br>** <strong>①</strong> <strong>可变长子网掩码</strong> <strong>VLSM**</strong>，将两级结构的** <strong>IP</strong> <strong>地址变换为三级结构的</strong> <strong>IP</strong> <strong>地址。**</strong><br>** <strong>②**</strong>无类域间路由** <strong>CIDR**</strong>，消除网络地址和主机地址的划分，改为网络前缀和网络后缀。****<br>** <strong>③**</strong>网络地址转换** <strong>NAT**</strong>，将** <strong>IP</strong> <strong>地址划分为本地地址和全球地址两种类型，如果本地主机要**</strong><br>** <strong>使用</strong> <strong>Internet**</strong>，可使用** <strong>NAT</strong> <strong>技术将本地</strong> <strong>IP</strong> <strong>地址转换为全球</strong> <strong>IP</strong> <strong>地址。**</strong><br>** <strong>④**</strong>IPv6** <strong>技术，将</strong> <strong>IP</strong> <strong>地址从</strong> <strong>32</strong> <strong>位扩展到</strong> <strong>128</strong> <strong>位。</strong></p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网；第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.6 IPv6**<strong>；第</strong> <strong>4<br>** **章</strong> <strong>网络层**</strong>——4.8** <strong>虚拟专用网</strong> <strong>VPN</strong> <strong>和网络地址转换</strong> <strong>NAT<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>8.请简述 RIP 的三要点。</p><p><strong>【答案】：**</strong><br>** <strong>（**</strong>1**<strong>）仅和相邻路由器交换信息。**</strong><br>** <strong>（**</strong>2**<strong>）交换的信息是当前本路由器所知道的全部信息，即自己的路由表。**</strong><br>** <strong>（**</strong>3**<strong>）按固定的时间间隔**</strong>(<strong>**如每隔</strong> <strong>30s)**</strong>交换路由信息。**</p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>【难度】：易</strong></strong><br>** <strong>【类型】：识记</strong></p><p>9.请简述 ARP 的四种典型情况。</p><p>【<strong>答案】：**</strong><br>** <strong>（**</strong>1**<strong>）发送方是主机，要把**</strong>IP** <strong>数据报发送到本网络上的另一个主机。这时发送**</strong>ARP**<strong>请求分组**</strong>(<strong><strong>在</strong></strong><br>** <strong>本网络上广播**</strong>)<strong><strong>，找到目的主机的硬件地址。</strong></strong><br>** <strong>（**</strong>2**<strong>）发送方是主机，要把</strong> <strong>IP</strong> <strong>数据报发送到另一个网络上的一个主机。这时用</strong> <strong>ARP</strong> <strong>找到本网**</strong><br>** <strong>络上的一个路由器的硬件地址，剩下的工作由这个路由器来完成。**</strong><br>** <strong>（**</strong>3**<strong>）发送方是路由器，要把</strong> <strong>IP</strong> <strong>数据报转发到本网络上的一个主机。这时用</strong> <strong>ARP</strong> <strong>找到目的主**</strong><br>** <strong>机的硬件地址。**</strong><br>** <strong>（**</strong>4**<strong>）发送方是路由器，要把</strong> <strong>IP</strong> <strong>数据报转发到另一个网络上的一个主机。这时用</strong> <strong>ARP</strong> <strong>找到本**</strong><br>** <strong>网络上的一个路由器的硬件地址，剩下的工作由这个路由器来完成</strong></p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.4 ARP</strong> <strong>地址解析协议**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>10.请简述 OSPF 的三要点。<br> <strong>【答案】：**</strong><br>** <strong>（**</strong>1**<strong>）向本自治系统中所有路由器发送信息，使用洪泛法。**</strong><br>** <strong>（**</strong>2**<strong>）发送的信息就是与本路由器相邻的所有路由器的链路状态，但这只是路由器所知道的部**</strong><br>** <strong>分信息。**</strong><br>** <strong>（**</strong>3**<strong>）只有当链路状态发生变化时，路由器才用洪泛法向所有路由器发送此信息</strong></p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.3** <strong>内部网关协议</strong> <strong>OSPF<br>** <strong>【难度】：易</strong></strong><br>** <strong>【类型】：识记</strong></p><p>11.试简单说明下列协议的作用：IP、ARP、RARP。</p><p><strong>P**</strong>协议：实现网络互连，使参与互连的性能各异的网络从用户看起来好像是一个统一的网络。****<br> ARP** <strong>协议：是解决同一个局域网上的主机和路由器的</strong> <strong>IP</strong> <strong>地址和硬件地址的映射问题。**</strong><br> RARP** <strong>协议：是解决同一个局域网上的主机和路由器的硬件地址和</strong> <strong>IP</strong> <strong>地址的映射问题。</strong></p><p><strong>【知识点】：第</strong> <strong>4</strong> <strong>章网络层**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：识记</strong></p><p><strong>计算题</strong></p><p>1．某地址块为 128.34.57.26/22。求该地址块的第一个地址和最后一个地址，以及该地址块<br> 中包含的地址个数</p><p><strong>答案：**</strong><br> 128.34.57.26** <strong>对应的二进制形式是</strong> <strong>10000000 00100010 00111001 00011010**</strong>，前** <strong>22</strong> <strong>位固**</strong><br>** <strong>定不变，后</strong> <strong>10</strong> <strong>位从全</strong> <strong>0</strong> <strong>变到全</strong> <strong>1**</strong>，对应的点分十进制是** <strong>128.34.56.0**</strong>（第一个地址）～****<br> 128.34.59.255**<strong>（最后一个地址），包含的地址数共</strong> <strong>1024</strong> <strong>个。</strong></p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>2．某单位分配到一个 B 类 IP 地址 129.250.0.0，该单位有 4000 台主机，分布在 16 个不同<br> 地点。若选用的子网掩码是 255.255.255.0，请给每一个地点分配一个子网号码，并计算每<br> 个地点主机号码的最小值和最大值。（注：子网号码和主机号码均从 1 开始编号）<br> <strong>答案：**</strong><br>** <strong>对</strong> <strong>B</strong> <strong>类地址设置子网掩码</strong> <strong>255.255.255.0**</strong>，说明子网位为** <strong>8</strong> <strong>位，主机位也为</strong> <strong>8</strong> <strong>位。**</strong><br> 4000** <strong>台主机均匀地分布在</strong> <strong>16</strong> <strong>个地点，则每个地点容纳的主机数为</strong> <strong>250</strong> <strong>台。**</strong><br>** <strong>子网号范围：**</strong>00000001**<strong>～**</strong>00010000**<strong>，即</strong> <strong>1**</strong>～**<strong>16<br>** <strong>主机地址范围：</strong></strong>00000001**<strong>～**</strong>11111010**<strong>，即</strong> <strong>1**</strong>～**<strong>250</strong></p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>3．一个 UDP 用户数据报的数据部分为 8192B，在数据链路层使用以太网传送。请问应划分成<br> 几个 IP 数据报？每个 IP 数据报的总长度字段和片偏移字段的值各是多少？<br> <strong>答案：**</strong><br>** <strong>包括首部，用户数据报</strong> <strong>UDP</strong> <strong>的实际长度是</strong> <strong>8200B**</strong>。根据以太网的帧格式，其数据部分最****<br>** <strong>大长度是</strong> <strong>1500B**</strong>。因此，网络层的** <strong>IP</strong> <strong>数据报的长度是</strong> <strong>1500B**</strong>，若去掉** <strong>IP</strong> <strong>首部的</strong> <strong>20B**</strong>，则** <strong>IP<br>** **数据报的数据部分最多只能有</strong> <strong>1480B**</strong>。为此，需要将该** <strong>UDP</strong> <strong>报文划分成</strong> <strong>6</strong> <strong>个</strong> <strong>IP</strong> <strong>数据报，前</strong> <strong>5<br>** **个</strong> <strong>IP</strong> <strong>数据报分片的数据部分为</strong> <strong>1480B**</strong>，最后一个** <strong>IP</strong> <strong>数据报分片的数据部分为</strong> <strong>800B**</strong>。各** <strong>IP</strong> <strong>数**</strong><br>** <strong>据报分片中的片偏移值分别是</strong> <strong>0**</strong>、**<strong>185**</strong>、**<strong>370**</strong>、**<strong>555**</strong>、**<strong>740</strong> <strong>和</strong> <strong>925**</strong>。**</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：知识运用</strong></p><p>4．若某地址块中的某地址为 146.120.86.26/20。请问该地址块的最小地址和最大地址各是<br> 什么？该地址块有多少个地址？相当于多少个 C 类地址？<br> <strong>答案：**</strong><br>** <strong>地址</strong> <strong>146.120.86.26/20</strong> <strong>说明前</strong> <strong>20</strong> <strong>位是网络地址部分，后</strong> <strong>12</strong> <strong>位是主机地址部分。将第三**</strong><br>** <strong>字节写作二进制形式</strong> <strong>146.120.01010110.0/20**</strong>。可以得到网络地址** <strong>146.120.80.0**</strong>，广播地址****<br> 146.120.95.255**<strong>。主机地址数</strong> <strong>2<br> 12 = 4096**</strong>，相当于** <strong>16</strong> <strong>个</strong> <strong>C</strong> <strong>类地址。</strong></p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>5.假设路由器 C 采用距离矢量路由选择算法，相邻路由器送来的距离矢量如下：B（5，0，8，<br> 12，6，2）、D（16，12，6，0，9，10）、E（7，6，3，9，0，4）。到 B，D 和 E 的延迟分别是<br> 6，3 和 5。计算 C 的更新路由表，给出采用的输出线路和预计延迟。<br> <strong>答案：**</strong><br>** <strong>从</strong> <strong>C</strong> <strong>结点通过</strong> <strong>B</strong> <strong>到达任意目的结点的距离为（**</strong>11**<strong>，**</strong>6**<strong>，**</strong>14**<strong>，**</strong>18**<strong>，**</strong>12**<strong>，**</strong>8**<strong>），通过</strong> <strong>D</strong> <strong>到达任意目的**</strong><br>** <strong>结点的距离为（**</strong>19**<strong>，**</strong>15**<strong>，**</strong>9**<strong>，**</strong>3**<strong>，**</strong>9**<strong>，**</strong>10**<strong>），通过</strong> <strong>E</strong> <strong>到达任意目的结点的距离为（**</strong>12**<strong>，**</strong>11**<strong>，**</strong>8**<strong>，**</strong>14**<strong>，**</strong><br> 5**<strong>，**</strong>9**<strong>）。取每个距离的最小值得到（**</strong>11**<strong>，**</strong>6**<strong>，**</strong>0**<strong>，**</strong>3**<strong>，**</strong>5**<strong>，**</strong>8**<strong>），其中</strong> <strong>C</strong> <strong>到</strong> <strong>C</strong> <strong>的最小距离取</strong> <strong>0**</strong>。对应****<br>** <strong>的输出线路分别为（**</strong>B**<strong>，**</strong>B**<strong>，**</strong>-<strong><strong>，</strong></strong>D**<strong>，**</strong>E**<strong>，**</strong>B**<strong>）。</strong></p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：理解</strong></p><p>6.某单位分配了一个 B 类地址，计划将内部网络分成 16 个子网，将来还要增加 12 个子网，<br> 每个子网的主机数接近 800 台，计算其可行的子网掩码方案。<br> <strong>答案：**</strong><br>** <strong>子网数可能达到</strong> <strong>28</strong> <strong>个，因此子网号至少需要</strong> <strong>5</strong> <strong>位，一个子网主机数最多达到</strong> <strong>800**</strong>，主机号至****<br>** <strong>少需要</strong> <strong>10</strong> <strong>位。**</strong>B** <strong>类地址子网号和主机号共</strong> <strong>16</strong> <strong>位，同时满足两个条件的分配方案位：**</strong>5** <strong>位子网**</strong><br>** <strong>号</strong> <strong>11</strong> <strong>位主机号，或者</strong> <strong>6</strong> <strong>位子网号</strong> <strong>10</strong> <strong>位主机号，对应的子网掩码为：**</strong>255.255.248.0** <strong>或**</strong><br> 255.255.252.0**<br> <strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>7.网络 ID 为 154.233.96.0，子网掩码为 255.255.224.0，计算子网的 IP 地址的范围。<br> <strong>答案：</strong><br> <strong>154.233.96.1—154.233.127.254</strong><br> <strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：知识运用</strong></p><p>8.一个 ISP 已经分配了 2048 个 C 类地址的地址块，从 192.24.0.0 到 192.31.255.0。为了<br> 实现 CIDR 应该在路由表中记录什么起始地址？采用什么作为子网掩码？<br> <strong>答案：**</strong><br>** <strong>地</strong> <strong>址</strong> <strong>192.24.0.0</strong> <strong>到</strong> <strong>192.31.255.0</strong> <strong>用十进制和二进制混合书写表示为：**</strong><br> 192.00011000.00000000.00000000—192.00011111.11111111.00000000**<strong>，这</strong> <strong>2048</strong> <strong>个</strong> <strong>C</strong> <strong>类地**</strong><br>** <strong>址块中，前面</strong> <strong>13</strong> <strong>位是相同的，以相同的部分作为网络号，其他位为主机号，形成网络号为**</strong><br> 192.24.0.0** <strong>，作为汇聚路由器中路由表的一行，子网掩码取值为**</strong><br> 11111111.11111000.00000000.00000000**<strong>，即</strong> <strong>255.248.0.0**</strong>。**</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.3** <strong>无分类编址</strong> <strong>CIDR**</strong>（构造超****<br>** <strong>网）**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>9.子网的 IP 地址范围为 61.8.0.1 到 61.15.255.254，子网掩码为多少？<br> <strong>答案：**</strong><br>** <strong>一个子网中</strong> <strong>IP</strong> <strong>地址从</strong> <strong>61.8.0.1</strong> <strong>变化到</strong> <strong>61.15.255.254**</strong>，后三个字节写成二进制即****<br> 61.00001000.00000000.00000001—61.00001111.11111111.11111110**<strong>，把不变的部分作为网**</strong><br>** <strong>络号，变化部分作为主机号，子网掩码为</strong> <strong>255.11111000. 0.0</strong> <strong>即</strong> <strong>255.248. 0.0**</strong>。**</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>10．设网络 ID 为 190.1.48.0，子网掩码为 255.255.248.0，计算子网的主机号的范围。<br> <strong>答案：**</strong><br> 190.1.48.0**<strong>：**</strong>190.1.48.1—190.1.55.254**<br> <strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>11．一台路由器接收到以下 IP 地址：57.6.96.0/21、57.6.104.0/21、57.6.112.0/21、<br> 57.6.120.0/21。如果所有这些地址都使用同一条输出线路，那么可以把这些地址聚合在一起<br> 吗？聚合后的地址和掩码是什么？<br> <strong>答案：**</strong><br> 57.6.01100000.0/21**<strong>、**</strong>57.6.01101000.0/21**<strong>、**</strong>57.6.01110000.0/21**<strong>、**</strong>57.6.01111000.0/21**<strong>，**</strong><br>** <strong>地址前</strong> <strong>19</strong> <strong>位相同，聚合地址为</strong> <strong>57.6.01100000.0/19**</strong>，即** <strong>57.6.96.0/19</strong><br> <strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.3** <strong>无分类编址</strong> <strong>CIDR**</strong>（构造超****<br> 12<br>** <strong>网）**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p><strong>综合题</strong></p><p>1．根据给定的 IP 地址和子网掩码，填写下面的表格。<br> <img src="/posts/ef8f80d2/clip_image001.png" alt="在这里插入图片描述"></p><p>答案：<br> <strong>（**</strong>1**<strong>）**</strong>28.85.245.0<br>** <strong>（**</strong>2**<strong>）**</strong>28.85.245.255<br>** <strong>（**</strong>3**<strong>）**</strong>28.85.245.1**<strong>～**</strong>28.85.245.254<br>** <strong>（**</strong>4**<strong>）**</strong>153.50.6.0<br>** <strong>（**</strong>5**<strong>）**</strong>153.50.6.127<br>** <strong>（**</strong>6**<strong>）**</strong>153.50.6.1**<strong>～**</strong>153.50.6.126<br>** <strong>（**</strong>7**<strong>）**</strong>200.12.45.96<br>** <strong>（**</strong>8**<strong>）**</strong>200.12.45.127<br>** <strong>（**</strong>9**<strong>）**</strong>200.12.45.97**<strong>～**</strong>200.12.45.126**<br> <strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>2．一个数据报长度为 4000 字节（固定首部长度 20 字节）。现在经过一个网络传送，但此网<br> 络能够传送的最大数据长度为 1500 字节。请问应当将数据报划分为几个数据报分片？各数据<br> 报分片的数据字段长度、片偏移字段和 MF 标志应如何设置？<br> <strong>答案：**</strong><br>** <strong>数据报的总长度减去首部长度，得</strong> <strong>IP</strong> <strong>数据报的数据部分长度，**</strong><br> 4000 – 20 = 3980B<br>** <strong>划分出一个数据报分片（考虑首部有</strong> <strong>20B</strong> <strong>长），**</strong><br> 3980 - (1500-20) = 2500B<br>** <strong>剩下的数据长度大于</strong> <strong>MTU**</strong>，再划分出一个数据报分片，****<br> 2500 - (1500-20) = 1020B<br>** <strong>剩下的数据长度小于</strong> <strong>MTU**</strong>。****<br>** <strong>因此，该数据报划分为</strong> <strong>3</strong> <strong>个数据报分片，数据长度分别为</strong> <strong>1480</strong> <strong>字节、**</strong>1480** <strong>字节和</strong> <strong>1020<br>** **字节；片偏移字段的值分别是</strong> <strong>0**</strong>、**<strong>185**</strong>（**<strong>1480/8**</strong>）和** <strong>370**</strong>（**<strong>2×1480/8**</strong>）；**<strong>MF</strong> <strong>字段的值分别为</strong> <strong>1**</strong>、****<br> 1** <strong>和</strong> <strong>0**</strong>。该数据报分片情况如下图所示。**<br> <img src="/posts/ef8f80d2/clip_image002.png" alt="在这里插入图片描述"><br> <strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：知识运用</strong></p><p>3．某公司申请了一个 C 类网络地址 202.203.204.0，根据公司发展需要，内部划分成生产部、<br> 财务部、人事部和销售部 4 个部门，每个部门都有 25 台计算机。请问如何划分子网？分别写<br> 出每个子网的网络地址、子网掩码和可用 IP 地址段。<br> 答案：<br> <strong>对于该</strong> <strong>C</strong> <strong>类网络，设从主机位借</strong> <strong>n</strong> <strong>位作为子网位，则主机位为**</strong>(8-n)<strong>**位，可得关系式</strong><br> <img src="/posts/ef8f80d2/clip_image003.png" alt="在这里插入图片描述"></p><p><strong>解得</strong> <strong>n = 3<br>** <strong>因此，划分后的子网前缀为</strong></strong>(24+3)=27** <strong>位，则子网掩码为</strong> <strong>255.255.255.224**</strong>，主机位长度****<br>** <strong>为</strong> <strong>5</strong> <strong>位。子网划分结果如下表所示</strong><br> <img src="/posts/ef8f80d2/clip_image004.png" alt="在这里插入图片描述"><br> <strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>4．一个 3200 位长的 TCP 报文传送到 IP 层，加上 160 位的首部后成为数据报。下面的互联网<br> 由两个局域网通过路由器连接起来。但第二个局域网所能传送的最长数据帧中的数据部分只<br> 有 1200 位。因此数据报在路由器上必须进行分片。请问第二个局域网向其上层要传送多少比<br> 特的数据？<br> <strong>答案：**</strong><br>** <strong>第二个局域网所能传送的最长数据帧中的数据部分只有</strong> <strong>1200bit**</strong>，也就是说** <strong>IP</strong> <strong>数据报的**</strong><br>** <strong>最大长度是</strong> <strong>1200bit**</strong>，故** <strong>IP</strong> <strong>数据报的数据部分（本题中是</strong> <strong>TCP</strong> <strong>报文段）最长为**</strong><br> IP** <strong>数据报的总长度</strong> <strong>- IP</strong> <strong>数据报的首部</strong> <strong>= 1200bit – 160 bit = 1040 bit<br>** **运输层交给网络层的</strong> <strong>TCP</strong> <strong>报文将划分成四个部分，即**</strong><br> 3200bit = 1040bit + 1040bit + 1040bit + 80bit**<br> <img src="/posts/ef8f80d2/clip_image005.png" alt="在这里插入图片描述"><br> <strong>每个</strong> <strong>TCP</strong> <strong>报文分组加上</strong> <strong>160bit</strong> <strong>的</strong> <strong>IP</strong> <strong>数据报首部就构成了独立的</strong> <strong>IP</strong> <strong>数据报。**</strong>4** <strong>个</strong> <strong>IP</strong> <strong>数**</strong><br>** <strong>据报长度总计为**</strong><br> (1040bit + 160bit) × 3 + (80bit + 160bit) = 3840bit<br>** <strong>也就是说第二个局域网要向上层传送</strong> <strong>3840</strong> <strong>比特的数据。</strong></p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：知识运用</strong></p><p>5．某中学打算组建局域网形式的教学机房，有计算机 80 台，24 端口的交换机 4 台，拓扑结<br> 构如下图所示。<br> <img src="/posts/ef8f80d2/clip_image006.png" alt="在这里插入图片描述"><br> 请规划设计：（1）工作组名称、计算机名称；（2）各计算机的 IP 地址、子网掩码和默认<br> 网关；（3）说明如何测试计算机之间的连通性。</p><p><strong>（**</strong>1**<strong>）根据题目描述，组建的是教学机房，可将局域网的工作组命名为</strong> <strong>jiaoxuegroup**</strong>，****<br>** <strong>或使用系统默认的工作组名称</strong> <strong>workgroup**</strong>，或其它名称。**<strong>80</strong> <strong>台计算机可划分为</strong> <strong>8</strong> <strong>组（采用字**</strong><br>** <strong>母编号，分别为</strong> <strong>A**</strong>、**<strong>B**</strong>、**<strong>C**</strong>、**<strong>D**</strong>、**<strong>E**</strong>、**<strong>F**</strong>、**<strong>G**</strong>、**<strong>H**</strong>），每组** <strong>10</strong> <strong>台（使用数字序号标识，分别是</strong> <strong>01**</strong>、**<strong>02**</strong>、****<br> 03**<strong>、**</strong>04**<strong>、**</strong>05**<strong>、**</strong>06**<strong>、**</strong>07**<strong>、**</strong>08**<strong>、**</strong>09**<strong>、**</strong>10**<strong>）。这样每一台计算机的名称就由**</strong>“**<strong>字母**</strong>+<strong><strong>数字序号</strong></strong>”**<strong>构成，**</strong><br>** <strong>例如，**</strong>A01**<strong>、**</strong>H10**<strong>。**</strong><br>** <strong>（**</strong>2**<strong>）由于是局域网，故使用专用</strong> <strong>IP</strong> <strong>地址。建议采用的</strong> <strong>IP</strong> <strong>地址范围是</strong> <strong>192.168.0.1**</strong>～****<br> 192.168.0.254**<strong>，子网掩码是</strong> <strong>255.255.255.0**</strong>。其中** <strong>192.168.0.254</strong> <strong>用作默认网关，其他主机**</strong><br>** <strong>根据计算机名称分配</strong> <strong>IP</strong> <strong>地址。例如，**</strong>A01** <strong>分配</strong> <strong>IP</strong> <strong>地址</strong> <strong>192.168.0.1**</strong>，**<strong>A10</strong> <strong>分配</strong> <strong>IP</strong> <strong>地址**</strong><br> 192.168.0.10**<strong>，**</strong>B01** <strong>分配</strong> <strong>IP</strong> <strong>地址</strong> <strong>192.168.0.11**</strong>，**<strong>B10</strong> <strong>分配</strong> <strong>IP</strong> <strong>地址</strong> <strong>192.168.0.20**</strong>，依次类推。****<br>** <strong>（**</strong>3**<strong>）所有一切做好（包括连接网线、配置</strong> <strong>IP</strong> <strong>地址）后，先观测主机桌面右下角是否有**</strong><br>** <strong>红叉，如果没有，说明网络物理上已经连通。否则需要进一步检查是网线问题还是网卡问题。**</strong><br>** <strong>接下来可以使用</strong> <strong>ping</strong> <strong>命令测试主机之间逻辑上是否连通。</strong></p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网；第**</strong><br> 4** <strong>章</strong> <strong>网络层**</strong>——4.4** <strong>网际控制报文协议</strong> <strong>ICMP——4.4.2 ICMP</strong> <strong>的应用举例；第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>—<br> —4.8** <strong>虚拟专用网</strong> <strong>VPN</strong> <strong>和网络地址转换</strong> <strong>NAT——4.8.1</strong> <strong>虚拟专用网</strong> <strong>VPN<br>** <strong>难度：难</strong></strong><br>** <strong>类型：知识运用</strong></p><p>6．现有一个 C 类网段 193.160.80.0，要将其划分为 6 个子网，请问如何指定子网掩码？每<br> 个子网的网络地址、广播地址分别是多少？可分配的主机地址范围是多少？</p><p><strong>答案：**</strong><br>** <strong>设从主机位借</strong> <strong>n</strong> <strong>位用作子网位，则</strong> <img src="/posts/ef8f80d2/clip_image007.png" alt="在这里插入图片描述"><br> <strong>解得</strong> <strong>n = 3<br>** **因此，网络位共</strong> <strong>27</strong> <strong>位，子网掩码是</strong> <strong>255.255.255.224**</strong>。****<br>** <strong>各子网网络地址、广播地址、主机地址范围如下：**</strong><br>** <strong>①**</strong>193.160.80.32 193.160.80.63 193.160.80.33**<strong>～**</strong>193.160.80.62<br>** <strong>②**</strong>193.160.80.64 193.160.80.95 193.160.80.65**<strong>～**</strong>193.160.80.94<br>** <strong>③**</strong>193.160.80.96 193.160.80.127 193.160.80.97**<strong>～**</strong>193.160.80.126<br>** <strong>④**</strong>193.160.80.128 193.160.80.159 193.160.80.129**<strong>～**</strong>193.160.80.158<br>** <strong>⑤**</strong>193.160.80.160 193.160.80.191 193.160.80.161**<strong>～**</strong>193.160.80.190<br>** <strong>⑥**</strong>193.160.80.192 193.160.80.223 193.160.80.193**<strong>～**</strong>193.160.80.222**</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>7．已知一个分组的数据部分长度为 3800 字节，网络规定分组的分片长度不能超过 1420 字节，<br> 假设 IP 分组的首部采用固定首部 20 个字节。请问原始分组需要分成几个分片？每个分片的<br> 总长度、标识字段（注：原始分组标识字段是 666）、DF 标志位（注：0 表示可分片，1 表示<br> 不可分片）、MF 标志位（注：0 表示是最后分片，1 表示后面还有分片）、分片偏移字段各是<br> 多少？</p><p><strong>答案：**</strong><br> 3800÷1400 = 2.7&gt;2**<strong>，故原始分组需要分成</strong> <strong>3</strong> <strong>个分片。具体分片情况如下表所示。</strong><br> <img src="/posts/ef8f80d2/clip_image008.png" alt="在这里插入图片描述"><br> <strong>注：分组分片</strong> <strong>1</strong> <strong>距离原始分组开始位置为</strong> <strong>0**</strong>，故分片偏移字段为** <strong>0**</strong>；分组分片** <strong>2</strong> <strong>距离原始**</strong><br>** <strong>分组开始位置为</strong> <strong>1400**</strong>，分片偏移字段为** <strong>1400÷8**</strong>；分组分片** <strong>3</strong> <strong>距离原始分组开始位置为</strong> <strong>2800**</strong>，****<br>** <strong>分片偏移字段为</strong> <strong>2800÷8**</strong>。**</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：知识运用</strong></p><p>8．某路由器所建立的路由表内容如下表所示<br> <img src="/posts/ef8f80d2/clip_image009.png" alt="在这里插入图片描述"><br> 现收到 5 个分组，其目的 IP 地址分别是：（1）128.96.39.143；（2）128.96.40.142；（3）<br> 128.96.40.15；（4）192.4.153.129；（5）192.4.153.49。请计算出它们的下一跳。</p><p><strong>答案：**</strong><br>** <strong>使用</strong> <strong>IP</strong> <strong>地址与子网掩码进行与运算，可求得目的网络地址，从而根据路由表找到下一跳。**</strong><br>** <strong>（**</strong>1**<strong>）**</strong>128.96.39.143**<strong>∧**</strong>255.255.255.128 = 128.96.39.128**<strong>，故下一跳为接口</strong> <strong>1**</strong>。****<br>** <strong>（**</strong>2**<strong>）**</strong>128.96.40.142**<strong>∧**</strong>255.255.255.128 = 128.96.40.128**<strong>，路由表中没有该目的地址，**</strong><br>** <strong>故只能使用默认路由，下一跳为</strong> <strong>R4**</strong>。****<br>** <strong>（**</strong>3**<strong>）**</strong>128.96.40.15**<strong>∧**</strong>255.255.255.128 = 128.96.40.0**<strong>，故一跳为</strong> <strong>R2**</strong>。****<br>** <strong>（**</strong>4**<strong>）**</strong>192.4.153.129**<strong>∧**</strong>255.255.255.192 = 192.4.153.128**<strong>，路由表中没有该目的地址，**</strong><br>** <strong>故只能使用默认路由，下一跳为</strong> <strong>R4**</strong>。****<br>** <strong>（**</strong>5**<strong>）**</strong>192.4.153.49**<strong>∧**</strong>255.255.255.192 = 192.4.153.0**<strong>，故下一跳为</strong> <strong>R3**</strong>。**</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.6 IP</strong> <strong>层转发分组的流程**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：知识运用</strong></p><p>9．假设 IP 数据报使用固定长度的首部（即没有选项和填充字段），其中各字段的初始数值如<br> 下表所示。<br> <img src="/posts/ef8f80d2/clip_image010.png" alt="在这里插入图片描述"><br> 请计算首部中校验和字段的数值，并填入表中。</p><p><strong>答案：**</strong><br>** <strong>首部校验和规则：对首部每</strong> <strong>16</strong> <strong>位二进制位求和，进位和运算结果相加，最后求出二进制**</strong><br>** <strong>反码，即是校验和字段的值。**</strong><br>** <strong>为了便于计算，本题中可先写出各组的十六进制形式，**</strong><br> 0x4500 0x001C<br> 0x0001 0x0000<br> 0x0411 0x0000<br> 0x0A0C 0x0E05<br> 0x0C06 0x0709<br>** <strong>求和得</strong> <strong>0x744E**</strong>，对应的二进制形式为** <strong>0111010001001110**</strong>，反码得** <strong>1000101110110001**</strong>，****<br>** <strong>其十进制形式为</strong> <strong>35761**</strong>，将其填入表中，本题解毕。**</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：知识运用</strong></p><p>10．某网络中路由器 B 的当前路由表如表 1 所示，B 收到从路由器 C 发来的路由信息如表 2 所<br> 示。请给出路由器 B 更新后的路由表。<br> 表 1 路由器 B 的当前路由：<br> <img src="/posts/ef8f80d2/clip_image011.png" alt="在这里插入图片描述"><br> 表 2 路由器 B 从路由器 C 收到的路由信息:<br> <img src="/posts/ef8f80d2/clip_image012.png" alt="在这里插入图片描述"><br> <strong>答案：路由器</strong> <strong>B</strong> <strong>更新后的路由表如下表所示**</strong>:**</p><p><img src="/posts/ef8f80d2/clip_image013.png" alt="在这里插入图片描述"><br> <strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：知识运用</strong></p><p>11．IP 数据报携带了 TCP 报文，其中 IP 头部长度为 20B，总长度字段内容为十六进制数 04B0，<br> TCP 头部长度为 32B。请求出 TCP 数据段中数据部分的长度。<br> <strong>答案：**</strong><br>** <strong>在</strong> <strong>IP</strong> <strong>数据报中，总长度指首部长度和数据长度之和。本题中，总长度字段内容为十六进**</strong><br>** <strong>制数</strong> <strong>04B0**</strong>，对应的十进制数是** <strong>1200**</strong>，即** <strong>IP</strong> <strong>数据报总长度为</strong> <strong>1200B**</strong>。****<br> IP** <strong>数据报总长度减去</strong> <strong>IP</strong> <strong>首部长度，得</strong> <strong>IP</strong> <strong>数据部分长度为</strong> <strong>1180B**</strong>。再减去** <strong>TCP</strong> <strong>首部长度**</strong><br>** <strong>的</strong> <strong>32B**</strong>，可得** <strong>TCP</strong> <strong>数据长度为</strong> <strong>1148B**</strong>。**</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式；第</strong> <strong>5</strong> <strong>章</strong> <strong>运输层**</strong>—<br> —5.5 TCP** <strong>报文段的首部格式**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>12．某个网络中，R1 和 R2 为相邻路由器。下面的表 1 为 R1 的原路由表，表 2 是 R1 新收到的<br> 由 R2 广播的路由信息。请给出根据距离矢量路由算法更新后的 R1 路由表。<br> 表 1 R1 的原路由表：<br> <img src="/posts/ef8f80d2/clip_image014.png" alt="在这里插入图片描述"><br> 表 2 R2 广播的路由信息:<br> <img src="/posts/ef8f80d2/clip_image015.png" alt="在这里插入图片描述"><br> <strong>答案：**</strong>R1** <strong>更新后的路由表如下**</strong>:**</p><p><img src="/posts/ef8f80d2/clip_image016.png" alt="在这里插入图片描述"><br> <strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网路由选择协议**</strong>——4.5.2** <strong>内部网关协议</strong> <strong>RIP<br>** <strong>难度：中</strong></strong><br>** <strong>类型：知识运用</strong></p><p>13．计算并填写下面的表格<br> <img src="/posts/ef8f80d2/clip_image017.png" alt="在这里插入图片描述"><br> <strong>答案：**</strong><br>** <strong>（**</strong>1**<strong>）**</strong>A** <strong>类**</strong><br>** <strong>（**</strong>2**<strong>）**</strong>125.160.0.0<br>** <strong>（**</strong>3**<strong>）**</strong>125.191.255.255<br>** <strong>（**</strong>4**<strong>）**</strong>125.160.0.1<br>** <strong>（**</strong>5**<strong>）**</strong>125.191.255.254**</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.3** <strong>划分子网和构造超网**</strong>——4.3.1** <strong>划分子网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>14.某单位有 5 个物理网络，各网络的主机数分别是 60、60、60、30、30，但该单位只申请<br> 到了一个 C 类网络 202.10.223.0。请问该如何分配 IP 地址？要求写出各个子网的网络地址、<br> 子网掩码和可用的 IP 地址范围。<br> <strong>答案：**</strong><br>** <strong>先将网络</strong> <strong>202.10.223.0</strong> <strong>划分成</strong> <strong>4</strong> <strong>个等规模的子网，每个子网</strong> <strong>60</strong> <strong>台主机，从主机位借</strong> <strong>n<br>** **位作为子网，则</strong><br> <img src="/posts/ef8f80d2/clip_image018.png" alt="在这里插入图片描述"><br> <strong>解得</strong> <strong>n=2**</strong>，也就是从原主机位借** <strong>2</strong> <strong>位作为子网，划分后的各子网网络位共</strong> <strong>26</strong> <strong>位，子网掩**</strong><br>** <strong>码是</strong> <strong>255.255.255.192**</strong>。具体分配如下**<strong>:</strong><br> <img src="/posts/ef8f80d2/clip_image019.png" alt="在这里插入图片描述"><br> <strong>按照上面的方法，再将第</strong> <strong>4</strong> <strong>个子网一分为二。**</strong>IP** <strong>地址的最终分配情况如下**</strong>:**<br> <img src="/posts/ef8f80d2/clip_image020.png" alt="在这里插入图片描述"><br> 知识点：第 4 章 网络层——4.3 划分子网和构造超网——4.3.1 划分子网<br> 难度：中<br> 类型：知识运用</p><p>1.假设一个总长度为 4000 字节的 IP 数据报进入路由器，转发端口输出链路的最大传输单元<br> 为 1500 字节，请问该数据报是否需要分片，如果需要分片分成几片，写出每个 IP 数据报分<br> 片的总长度、标志和片偏移的值。（假设 IP 数据报首部长度为固定 20 字节）<br> <strong>答案：**</strong><br>** <strong>需要分片，共分</strong> <strong>3</strong> <strong>个片段。总长度字段长度分别为</strong> <strong>1500, 1500</strong> <strong>和</strong> <strong>1040</strong> <strong>字节。片偏移字段**</strong><br>** <strong>的值分别为</strong> <strong>0, 185</strong> <strong>和</strong> <strong>370**</strong>。**<strong>MF</strong> <strong>字段的值分别为</strong> <strong>1, 1</strong> <strong>和</strong> <strong>0**</strong>。**</p><p><strong>知识点：第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.2** <strong>网际协议</strong> <strong>IP——4.2.5 IP</strong> <strong>数据报的格式**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三章-数据链路层</title>
      <link href="posts/a9ef41eb/"/>
      <url>posts/a9ef41eb/</url>
      
        <content type="html"><![CDATA[<p><strong>计算机网络复习题第三章（标有课本知识点）</strong></p><h2 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a><strong>选择题</strong></h2><p>1．MAC 地址通常存储在计算机的（<strong>A</strong> ）。<br> A.网卡上<br> B.内存中<br> C.高速缓存中<br> D.硬盘上</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>2．下面关于以太网的描述正确的是（ <strong>A</strong>）。<br> A.数据包以广播方式发送<br> B.所有结点可以同时发送和接收数据<br> C.两个结点相互通信时，其它结点不检测总线上的信号<br> D.网络中有一个控制中心，用于控制所有结点的发送和接收</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>3．数据链路层传输的 PDU 是（ <strong>C</strong>）。<br> A.比特流<br> B.字节<br> C.数据帧<br> D.分组</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.1** <strong>数据链路和帧**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>4．二层交换机工作在 OSI/RM 的（<strong>B</strong> ）。<br> A.物理层<br> B.数据链路层<br> C.网络层<br> D.应用层</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>5．无线局域网中为实现传输媒体共享而采用的协议是（ <strong>A</strong>）。<br> A.CSMA/CA<br> B.FTP<br> C.CSMA/CD<br> D.HTTP</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>6．IEEE 802.3 的物理层协议 10BASE-T 规定从网卡到集线器的最大传输距离为（ <strong>A</strong>）。<br> A.100m<br> B.500m<br> C.200m<br> D.1000m</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.1** <strong>在物理层扩展以太网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>7．以集线器为核心创建的网络，其物理拓扑结构是（ <strong>A</strong>）。<br> A.星型<br> B.总线型<br> C.环型<br> D.网状</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.1** <strong>在物理层扩展以太网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>8．串行通信中，PPP 协议面向的是（ <strong>A</strong>）。<br> A.字符<br> B.比特<br> C.字节<br> D.字</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2** <strong>点对点协议</strong> <strong>PPP**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>9．以太网使用的 MAC 层协议是（<strong>D</strong>）。<br> A.CSMA 协议<br> B.TCP/IP 协议<br> C.X.25 协议<br> D.CSMA/CD 协议</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>10．在 OSI 的七层模型中，集线器工作在（A ）。<br> A.物理层<br> B.数据链路层<br> C.网络层<br> D.传输层</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.1** <strong>在物理层扩展以太网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>11．IEEE 802.3 标准规定的以太网的物理地址长度是（ <strong>C</strong>）。<br> A.8bit<br> B.32bit<br> C.48bit<br> D.64bit</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>12．具有检错和纠错功能的编码是（ <strong>C</strong>）。<br> A.奇偶校验码<br> B.循环冗余码<br> C.海明码<br> D.以上都是</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本问题**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>13．VLAN 在现代组网技术中占有重要地位，同一个 VLAN 中的两台主机（<strong>B</strong> ）。<br> A.必须连接在同一交换机上<br> B.可以跨越多台交换机<br> C.必须连接在同一集线器上<br> D.可以跨越多台路由器</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.3** <strong>虚拟局域网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>14．以太网数据帧最大长度是（<strong>A</strong>）。<br> A.1518B<br> B.1500B<br> C.1024B<br> D.1000B</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>15．媒体接入控制 MAC 是（<strong>D</strong> ）的子层。<br> A.网络层<br> B.运输层<br> C.物理层<br> D.数据链路层</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>16．以下使用 CSMA/CD 协议的是（ <strong>C</strong>）。<br> A.令牌环网<br> B.FDDI 网<br> C.以太网<br> D.Novell 网</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>17．计算机在局域网络上使用的硬件地址也称为 MAC 地址，这是因为（ <strong>A</strong>）。<br> A.硬件地址是传输数据时在媒体接入控制层使用的地址<br> B.它是地址，MAC 是物理地址的简称<br> C.它是物理层地址，MAC 是物理层的简称<br> D.它是数据链路层地址，MAC 是数据链路层的简称</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>18．100BASE-T 以太网的物理拓扑结构是（<strong>B</strong> ）。<br> A.总线型<br> B.星型<br> C.环型<br> D.混合型</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.5** <strong>高速以太网**</strong>——3.5.1 100BASE-T** <strong>以太网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>19．下列 MAC 地址正确的是（<strong>A</strong> ）。<br> A.00-06-5B-4F-45-BA<br> B.192.168.1.55<br> C.65-10-96-58-16<br> D.00-16-5B-4A-34-2H</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>20．STP 的最根本目的是（ <strong>D</strong>）。<br> A.防止广播风暴<br> B.防止信息丢失<br> C.使网桥具备网络层功能<br> D.防止网络中出现信息回路造成网络瘫</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>21．具有 LAN 物理层和 WAN 物理层两部分标准的以太网技术是（ <strong>D</strong>）。<br> A.传统以太网<br> B.百兆以太网<br> C.吉比特以太网<br> D.10 吉比特以太网</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.5** <strong>高速以太网**</strong>——3.5.2** <strong>吉比特以太网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>22．IEEE 802.3 帧格式中的帧开始定界符的比特序列是（ <strong>B</strong>）。<br> A.10101010<br> B.10101011<br> C.11010101<br> D.10101101</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：识记</strong></p><p>23．IEEE 802.3 局域网标准中，设置 MAC 子层的主要目的之一是实现（<strong>D</strong> ）。<br> A.差错恢复<br> B.逻辑链路的建立<br> C.流量控制<br> D.帧的寻址与识别</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>24.LAN 交换机是（<strong>D</strong> ）<br> A. 工作在第 1 层的多端口中继器<br> B. 工作在第 2 层的多端口集线器<br> C. 工作在第 3 层的多端口路由器<br> D. 工作在第 2 层的多端口网桥</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>25.IEEE802 规定了 ISO 参考模型的哪一层?（ B ）<br> A. 数据链路层和网络层<br> B. 物理层和数据链路层<br> C. 物理层<br> D. 数据链路层</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据**</strong><br>** <strong>链路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>26.IEEE802.3 标准在 MAC 子层及物理层采用的媒体接入控制方法是（<strong>A</strong> ）<br> A CSMA/CD<br> B Token Passing<br> C Token Bus<br> D 10BaseT</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>27.在 10BASE-T 以太网上，配置了二台 PC 机，但都不能访问网络，检测后发现两台 PC 机上<br> 的网卡的配置完全相同，其配置如下：<br> MAC：10C8 0500 0000<br> IRQ：5<br> I/O port：300<br> Transceivor：RJ-45<br> 问应该修改任一块网卡的哪项配置？（<strong>A</strong> ）<br> A. MAC<br> B. IRQ<br> C. I/O port<br> D. Transceiver</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC**</strong><br>** <strong>层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>28.要控制网络上的广播风暴，可以采用哪个手段？（<strong>A</strong> ）<br> A. 用路由器将网络分段<br> B. 用网桥将网络分段<br> C. 将网络转接成 10BaseT<br> D. 采用交换机划分网段</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.3** <strong>虚拟局域网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>29.在以太网组网配置中，采用 UTP 以星形结构构成的网络称为（<strong>C</strong> ）<br> A. 10Base2<br> B. 10Base5<br> C. 10BaseT<br> D. 10BaseF</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.3** <strong>使用集线器的**</strong><br>** <strong>星形拓扑**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>30.使用中继器连接 LAN 的电缆段是有限制的，任何两个数据终端设备间允许的传输通路中<br> 可使用的中继器个数最多是（<strong>C</strong> ）<br> A. 1 个<br> B. 3 个<br> C. 4 个<br> D. 5 个</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.1** <strong>在物理层扩展以太网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>31.以下对 PPP 协议的说法中错误的是（<strong>B</strong> ）<br> A. 具有差错控制能力<br> B. 仅支持 IP 协议<br> C. 具有动态分配 IP 地址的支持<br> D. 支持身份验证</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2** <strong>点对点协议</strong> <strong>PPP——3.2.1 PPP</strong> <strong>协议的特点**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>32．以 UTP 作为传输媒体，采用物理星形拓扑结构构成的以太网称为（<strong>B</strong> ）<br> A. 10BaseF<br> B. 10BaseT<br> C. 10Base2<br> D. 10Base5</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.3** <strong>使用集线器的**</strong><br>** <strong>星形拓扑**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>33．局域网标准主要定义的是哪层（<strong>D</strong> ）<br> A．物理层<br> B. 数据链路层<br> C. 网络层<br> D. 低两层</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据**</strong><br>** <strong>链路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>34．在中继器连接的网络中，需要遵守 5-4-3 规则，其含义是（ <strong>D</strong>）<br> A. 用 3 个中继器连接 4 个网段，最多不能超过 5 个网段<br> B. 用 4 个中继器连接最少 3 个网段， 最多连接 5 个网段<br> C. 用 5 个中继器连接 4 个网段，只能有 3 个网段可以连接站点<br> D. 用 4 个中继器连接 5 个网段，只能有 3 个网段可以连接站点</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.1** <strong>在物理层扩展以太网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>35．Windows 环境下网卡遵循的驱动程序标准为（<strong>B</strong> ）<br> A. ODI<br> B. NDIS<br> C. TDI<br> D. WNet</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的**</strong><br> *<em>MAC***</em> <strong>层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>36.100BASE-TX 使用（ <strong>A</strong>）传输介质。<br> A. 双绞线<br> B. 同轴电缆<br> C. 红外线<br> D. 光纤</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>37.为解决帧同步问题，在 PPP 的帧结构中规定在帧的起始字节为标志字段 F，其形式为<br> （ <strong>C</strong>）。<br> A. 11111110<br> B.11111111<br> C. 01111110<br> D. 01111111</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2** <strong>点对点协议</strong> <strong>PPP——3.2.2PPP</strong> <strong>协议的帧格式**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>38.在 IEEE802 系列标准中描述逻辑链路控制 (LLC)子层的功能、特性和协议的是（ <strong>A</strong>）<br> A. IEEE802.2<br> B.IEEE802.3<br> C. IEEE802.4<br> D. IEEE802.5</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2** <strong>局域网的数据**</strong><br>** <strong>链路层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>39.计算机与外界局域网的通信主要通过通信适配器（或网络适配器），又称为（<strong>A</strong> ）<br> A. 网卡<br> B. 网关<br> C. 网线<br> D. 网络</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道路的数据链路层**</strong>——3.3.1** <strong>局域网的**</strong><br>** <strong>数据链路层**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>40.以下不属于局域网常用拓扑结构的是（<strong>A</strong> ）<br> A.树型<br> B. 星型<br> C. 总线型<br> D. 环型</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数**</strong><br>** <strong>据链路层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>41.下列最好地描述了循环冗余检验的特征的是（ <strong>B</strong>）<br> A. 逐个的检查每个字符<br> B. 查出 99%以上的差错<br> C.查不出有偶数个位出错的差错<br> D. 不如纵向冗余检查可靠</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本**</strong><br>** <strong>问题**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>42.可能引起广播风暴的网络设备是（ <strong>B</strong>）<br> A. 网关<br> B.网桥<br> C. 路由器<br> D. 以上都不是</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>43.100BASE-TX 使用（ <strong>A</strong>）传输介质。<br> A. 双绞线<br> B. 同轴电缆<br> C. 红外线<br> D. 光纤</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>44.为解决帧同步问题，在 PPP 的帧结构中规定在帧的起始字节为标志字段 F，其形式为<br> （<strong>C</strong> ）。<br> A. 11111110<br> B.11111111<br> C. 01111110<br> D. 01111111</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2** <strong>点对点协议</strong> <strong>PPP——3.2.2PPP</strong> <strong>协议的帧格式**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>45.在 IEEE802 系列标准中描述逻辑链路控制 (LLC)子层的功能、特性和协议的是（ <strong>A</strong>）<br> A. IEEE802.2<br> B.IEEE802.3<br> C. IEEE802.4<br> D. IEEE802.5</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2** <strong>局域网的数据**</strong><br>** <strong>链路层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>46.采用二层以太网交换机扩展局域网，以下错误的是（<strong>B</strong> ）<br> A. 二层以太网交换机的各个端口可以支持不同的速率<br> B.二层以太网交换机的各个端口可以隔离广播帧<br> C. 二层以太网交换机需要对收到的数据帧进行处理，增加了传输时延<br> D. 二层以太网交换机在转发帧时不改变帧的源地址</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>47.局域网互连主要有（<strong>B</strong> ）两种形式。<br> (1)LAN-LAN (2) LAN-WAN (3)WAN-WAN (4)LAN-WAN-LAN<br> A. （1）和（2）<br> B. （1）和（4）<br> C. （2）和（3）<br> D. （3）和（4）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>概述**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.3** <strong>虚拟局域网**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>48.以下不属于局域网常用拓扑结构的是（<strong>A</strong> ）<br> A.树型<br> B. 星型<br> C. 总线型<br> D. 环型</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数**</strong><br>** <strong>据链路层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>49.下列最好地描述了循环冗余检验的特征的是（<strong>B</strong> ）<br> A. 逐个的检查每个字符<br> B. 查出 99%以上的差错<br> C.查不出有偶数个位出错的差错<br> D. 不如纵向冗余检查可靠</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本**</strong><br>** <strong>问题**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>50.计算机与外界局域网的通信主要通过通信适配器（或网络适配器），又称为（ <strong>A</strong>）。<br> A. 网卡<br> B. 网关<br> C. 网线<br> D. 网络</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道路的数据链路层**</strong>——3.3.1** <strong>局域网的**</strong><br>** <strong>数据链路层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>51.802.3 以太网最大可传送的帧（数据）长度（ <strong>D</strong>）个 8 位组。<br> A. 32<br> B. 64<br> C. 512<br> D. 1500</p><p><strong>【知识点】：第三章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>–3.3.4** <strong>以太网的信道**</strong><br>** <strong>利用率**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：理解</strong></p><p>52.MAC 地址一般存放在（<strong>B</strong> ）中。<br> A. PC 的 ROM<br> B.适配器的 ROM<br> C. DNS 服务器<br> D. DHCP 服务器</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据**</strong><br>** <strong>链路层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>53.下列不属于局域网拓扑结构的是（<strong>C</strong> ）<br> A. 总线形<br> B.星形<br> C. 网状形<br> D. 环形</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.1** <strong>数据链路和**</strong><br>** <strong>帧**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>54.计算机网络拓扑通过网络中结点与通信线路之间的几何关系来表示（ <strong>D</strong>）。<br> A. 网络层次<br> B. 协议关系<br> C. 体系结构<br> D. 网络结构</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.3** <strong>使用集线器的星**</strong><br>** <strong>形拓扑**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>55.误码率描述了数据传输系统正常工作状态下传输的（<strong>C</strong> ）。<br> A. 安全性<br> B. 效率<br> C. 可靠性<br> D. 延迟</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本问题**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>56.VLAN 在现代组网技术中占有重要地位，在由多个 VLAN 组成的一个局域网中以下哪种说<br> 法是不正确的？（ <strong>B</strong>）<br> A. 当站点从一个 VLAN 转移到另一个 VLAN 是，一般不需要改变物理连接<br> B. VLAN 中的一个站点可以和另一个 VLAN 中的站点直接通信<br> C. 当站点在一个 VLAN 中广播时，其他 VLAN 中的站点不能收到<br> D. VLAN 可以通过 MAC 地址，交换机端口等进行定义</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.3** <strong>虚拟局域网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>57.采用 CSMA/CD 媒体接入控制方法的局域网适用于办公自动化环境。这类局域网在何种网<br> 络通信负荷情况下表现出较好的吞吐率与延迟特性？（<strong>C</strong> ）<br> A. 较高<br> B. 较低<br> C. 中等<br> D. 不限定</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>58.以太网交换机是按照 (<strong>A</strong>) 进行转发的。<br> A. MAC 地址<br> B. IP 地址<br> C. 协议类型<br> D. 端口号</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>59．网卡地址的二进制位有（ <strong>A</strong>）位？<br> A．48<br> B.64<br> C.128<br> D.256</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>网络层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据链路层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>60.MAC 地址通常存储在计算机的（ B）。<br> （A）内存中<br> （B）网卡上<br> （C）硬盘上<br> （D）高速缓冲区中</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>61.网桥工作于（<strong>B</strong> ）<br> （A）物理层<br> （B）数据链路层<br> （C）网络层<br> （D）高层</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>概述**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>62.若数据链路的发送窗口尺寸 WT=4，在发送 3 号帧、并接到 2 号帧的确认帧后，发送方还<br> 可连续发送（ <strong>B</strong>）<br> （A）2 帧<br> （B）3 帧<br> （C）4 帧<br> （D）1 帧</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.1** <strong>数据链路层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>63.令牌环网中某个站点能发送帧是因为（<strong>C</strong> ）。<br> A. 最先提出申请<br> B. 优先级最高<br> C. 令牌到达<br> D. 可随机发送</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.5** <strong>高速以太网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>64.局部地区通信网络简称局域网，英文缩写为（ <strong>B</strong>）。<br> A. WAN<br> B. LAN<br> C. SAN<br> D.MAN</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>65.以太网媒体访问控制技术 CSMA/CD 的机制是（A ）。<br> A. 争用带宽<br> B. 预约带宽<br> C. 循环使用带宽<br> D. 按优先级分配带宽</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网</strong></p><p>66．下列有关集线器的说法正确的是(<strong>B</strong> )。<br> A．集线器只能和工作站相连<br> B．利用集线器可将总线型网络转换为星型拓扑<br> C．集线器只对信号起传递作用<br> D．集线器不能实现网段的隔离</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.3** <strong>使用集线器的星**</strong><br>** <strong>型拓扑**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>67．10BASE-T 是指(<strong>C</strong> )。<br> A．粗同轴电缆<br> B．细同轴电缆<br> C．双绞线<br> D．光纤</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.3** <strong>使用集线器的星**</strong><br>** <strong>型拓扑**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>68．以太网媒体访问控制技术 CSMA/CD 的机制是( <strong>A</strong>)。<br> A．争用带宽<br> B．预约带宽<br> C．循环使用带宽<br> D．按优先级分配带宽</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.3** <strong>使用集线器的星**</strong><br>** <strong>型拓扑**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>69．在局域网中，MAC 指的是(<strong>B</strong> )。<br> A．逻辑链路控制子层<br> B．媒体接入控制子层<br> C．物理层<br> D．数据链路层</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据链**</strong><br>** <strong>路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>70．下列哪种连接方式采用上、下行不对称的高速数据调制技术( <strong>B</strong>)。<br> A．ISDN<br> B．Cable Modem<br> C．ADSL<br> D．UML</p><p><strong>知识点：第三章</strong> <strong>数据链路层**</strong>——3.5** <strong>高速以太网**</strong>–3.5.1 100BASE-T** <strong>以太网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>71．MAC 地址是一个( )字节的二进制串，以太网 MAC 地址由 IEEE 负责分配。以太网地<br> 址分为两个部分：地址的前( )个字节代表厂商代码，后( <strong>A</strong>)个字节由厂商自行分配。<br> A．6，3，3<br> B．6，4，2<br> C．6，2，4<br> D．5，3，2</p><p><strong>知识点：第三章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>–3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>72．802.3 以太网最大可传送的帧（数据）长度为( <strong>D</strong>)个 8 位组。<br> A．64<br> B．32<br> C．256<br> D．1500</p><p><strong>知识点：第三章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>–3.3.4** <strong>以太网的信道利用**</strong><br>** <strong>率**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>73．当一台主机从一个网络移到另一个网络时，以下说法正确的是( <strong>B</strong>)。<br> A．必须改变它的 IP 地址和 MAC 地址<br> B．必须改变它的 IP 地址，但不需改动 MAC 地址<br> C．必须改变它的 MAC 地址，但不需改动 IP 地址<br> D．MAC 地址、IP 地址都不需改动</p><p><strong>知识点：第三章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>–3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><h2 id="多选题"><a href="#多选题" class="headerlink" title="多选题"></a><strong>多选题</strong></h2><p>1．网络拓扑结构可分为（ <strong>ABCD</strong>）。<br> A.总线型<br> B.星型<br> C.环型<br> D.树型<br> E.关系</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据链**</strong><br>** <strong>路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>2．以下属于网络连接设备的有（ABCE ）。<br> A.集线器<br> B.中继器<br> C.交换机<br> D.服务器<br> E.路由器</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网；第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由**</strong><br>** <strong>选择协议**</strong>——4.5.5** <strong>路由器的构成**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：识记</strong></p><p>3．下面关于以太网的描述错误的是（ <strong>BCD</strong>）。<br> A.数据包以广播方式发送<br> B.所有结点可以同时发送和接收数据<br> C.两个结点相互通信时，其它结点不检测总线上的信号<br> D.网络中有一个控制中心，用于控制所有结点的发送和接收</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>4．以下属于网络连接设备的有（ <strong>ABCE</strong>）。<br> A.集线器<br> B.中继器<br> C.交换机<br> D.服务器<br> E.路由器</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网；第</strong> <strong>4</strong> <strong>章</strong> <strong>网络层**</strong>——4.5** <strong>互联网的路由**</strong><br>** <strong>选择协议**</strong>——4.5.5** <strong>路由器的构成**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>5．决定局域网特性的主要技术因素有（<strong>ABE</strong> ）。<br> A.网络拓扑<br> B.传输媒体<br> C.数据库软件<br> D.服务器软件<br> E.信道访问协</p><p>知识点：第 3 章 数据链路层——3.3 使用广播信道的数据链路层<br> 难度：中<br> 类型：理解</p><h2 id="判断题"><a href="#判断题" class="headerlink" title="判断题"></a><strong>判断题</strong></h2><p>1．三层 交换机在转发数据时，可以根据数据报的 MAC 地址表进行路由的选择和转发。 （× ）</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.3** <strong>虚拟局域网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>2．数据链路层使用的信道主要有两种类型，即点对点信道和广播信道。（√ ）</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层；第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>—*<strong>*<br> *<em>—3.3*</em></strong> <strong>使用广播信道的数据链路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>3．三层交换技术在网络模型中的数据链路层实现了分组的高速转发。（ ×）</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.3** <strong>虚拟局域网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>4．由于前向纠错法是自动校正错误，所以大多数网络使用它。（ ×）</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本问题**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>5．所有以太网交换机端口既支持 10BASE-T 标准，又支持 100BASE-T 标准。（ ×）</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>6．减少传输差错的最根本途径是采用自动校正的前向纠错法。（ ×）</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本问题**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>7.网桥能够互连两个采用不同数据链路层协议、不同传输介质与不同传输速率的局域网。<br> （√ ）</p><p>【<strong>知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>8.万兆以太网（10 Gbps Ethernet）只工作在全双工方式，因此不存在争用问题，不使用<br> CSMA/CD 协议，这使其传输距离不受冲突检测的限制。（ <strong>√</strong>）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.5** <strong>高速以太网**</strong>——3.5.310** <strong>吉比特以太网（**</strong>10GE**<strong>）和更**</strong><br>** <strong>快的以太网**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>9.PPP 协议只支持双工链路。（ ×）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2 PPP** <strong>协议**</strong>——3.2.1 PPP** <strong>协议的特点**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>10.IP地址是数据链路层使用的逻辑地址。（ × ）<br> <strong>【知识点】：第**</strong>3**<strong>章</strong> <strong>数据链路层**</strong>——3.3**<strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的**</strong>MAC**<strong>层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>11.PPP协议只支持全双工链路。（ √ ）</p><p><strong>【知识点】：第**</strong>3**<strong>章</strong> <strong>数据链路层**</strong>——3.2 PPP**<strong>协议**</strong>——3.2.1 PPP**<strong>协议的特点**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>12.用于 LAN 范围的 FDDI 大多采用。（√ ）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2 PPP** <strong>协议**</strong>——3.2.1 PPP** <strong>协议的特点**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>13.硬件地址又称为 MAC 地址，对于局域网上的每一台计算机来说，这个地址都是唯一的。<br> （√ ）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC**</strong><br>** <strong>层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>14.适配器（即网卡）所实现的功能包含了数据链路层和网络层这两个层次的功能。（× ）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数**</strong><br>** <strong>据链路层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>15.适配器（即网卡）所实现的功能包含了数据链路层和网络层这两个层次的功能。（ ×）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数**</strong><br>** <strong>据链路层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>16.万兆以太网（10 Gbps Ethernet）只工作在全双工方式，因此不存在争用问题，不使用<br> CSMA/CD 协议，这使其传输距离不受冲突检测的限制。（√ ）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.5** <strong>高速以太网**</strong>——3.5.310** <strong>吉比特以太网（**</strong>10GE**<strong>）和**</strong><br>** <strong>更快的以太网**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>17.PPP 协议只支持双工链路。（× ）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2 PPP** <strong>协议**</strong>——3.2.1 PPP** <strong>协议的特点**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>18.用于 LAN 范围的 FDDI 大多采用。（√ ）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2 PPP** <strong>协议**</strong>——3.2.1 PPP** <strong>协议的特点**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>19.硬件地址又称为 MAC 地址，对于局域网上的每一台计算机来说，这个地址都是唯一的。<br> （√ ）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC**</strong><br>** <strong>层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>20.适配器（即网卡）所实现的功能包含了数据链路层和网络层这两个层次的功能。（× ）</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数**</strong><br>** <strong>据链路层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><h2 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a><strong>填空题</strong></h2><p>1．常见的局域网拓扑结构有<strong>总线型</strong>、<strong>环型</strong>、<strong>星型树型</strong>和网状。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据链**</strong><br>** <strong>路层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：识记</strong></p><p>2．数据链路层中传输的数据块称为<strong>帧</strong>，数据链路层中差错控制的两种基本编码方<br> 法是<strong>检错</strong>码和<strong>纠错</strong>码。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>3．IEEE 802.3 或 Ethernet 规定数据的传输必须使用<strong>曼彻斯特</strong>编码进行</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据链**</strong><br>** <strong>路层**</strong><br>** <strong>难度：易</strong></p><p>4．数据链路层的基本问题可概括为<strong>封装成帧</strong>、<strong>透明传输</strong>和差错检测。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本问题**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>5.局域网的数据链路层分成（<strong>逻辑链路控制子层</strong> <strong>LLC</strong>）和（<strong>介质访问控制子层</strong> <strong>MAC</strong>）两个子层。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据**</strong><br>** <strong>链路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>6.网桥分成（<strong>透明网桥</strong>）和（<strong>源路由网桥</strong>）等类型。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>7.在局域网标准中，在 MAC 子层及物理层 IEEE802.3 采用（<strong>CSMA/CD</strong> ）协议，IEEE802.5 采<br> 用（<strong>Token Passing</strong> ）协议</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>8．流量控制策略的基本思想是通过（ <strong>接收端</strong>）控制（<strong>发送端</strong> ）来实现的。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本问**</strong><br>** <strong>题**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>9．局域网数据链路层分成（<strong>介质访问控制子层</strong> <strong>MAC</strong> ）和（<strong>逻辑链路控制子层</strong> <strong>LLC</strong> ）两个子层</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据**</strong><br>** <strong>链路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>10．在局域网标准中，IEEE802.3 采用（ <strong>CSMA/CD</strong>）协议，IEEE802.4 采用（<strong>Token ( Passing) Bus</strong> <strong>令牌传递总线</strong> ）协议，IEEE802.5 采用（<strong>Token Passing(**</strong>或** <strong>Token Ring)**</strong>令牌传递**<strong>/**</strong>或令牌环** ）协议。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：识记</strong></p><p>11．在 Internet 网络中，拨号网络或点对点连接数据链路层协议主要有（ <strong>SLIP</strong>）和<br> （ <strong>PPP</strong>）。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2** <strong>点对点协议</strong> <strong>PPP——3.2.1 PPP</strong> <strong>协议的特点**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>12．数据链路的管理包括数据链路的（ <strong>建立</strong>）、（<strong>维持</strong> ）和（<strong>释放</strong> ）。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基**</strong><br>** <strong>本问题**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>13．局域网体系结构的低两层功能由（ <strong>网卡和驱动程序</strong>）完成，网络层以上的功能由<br> （<strong>操作系统</strong> ）完成。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的**</strong><br> *<em>MAC***</em> <strong>层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>14．传统网络包括（<strong>以太网</strong> ）、（<strong>令牌环</strong> ）和（<strong>FDDI</strong> ）都属于共享媒体的广播网络。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太**</strong><br>** <strong>网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>15.802.3 以太网最大可传送的帧（数据）长度为<strong>1500</strong>个 8 位组。</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC**</strong><br>** <strong>层**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>16.当 PPP 协议在使用异步传输时，采用<strong>字节填充</strong>实现透明传输</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点到点信道的数据链路层**</strong>——3.1.2** <strong>三个基本**</strong><br>** <strong>问题**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：理解</strong></p><p>17.在 OSI 参考模型中，网桥实现互联的层次为<strong>数据链路层</strong></p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太**</strong><br>** <strong>网**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>18.局域网互连主要有<strong>LAN-LAN</strong>和<strong>LAN-WAN-LAN</strong>两种形式。</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>概述**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.3** <strong>虚拟局域网**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>19.网卡地址的二进制位有<strong>48</strong>位</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC**</strong><br>** <strong>层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>20.MAC 地址是一个<strong>6</strong>字节的二进制串，以太网 MAC 地址由 IEEE 负责分配。以太<br> 网地址分为两个部分：地址的前<strong>3</strong>个字节代表厂商代码，后<strong>3</strong>个字节<br> 由厂商自行分配</p><p><strong>【知识点】：第三章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>–3.3.5** <strong>以太网的</strong> <strong>MAC**</strong><br>** <strong>层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：理解</strong></p><p>21.802.3 以太网最大可传送的帧（数据）长度为<strong>1500</strong>个 8 位组。</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC**</strong><br>** <strong>层**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>22.MAC 地址通常存储在计算机的<strong>网卡</strong>上。</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC**</strong><br>** <strong>层**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>23.100BASE-F 中，通常 F 指<strong>光纤</strong>。</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章数据链路层**</strong>——3.5** <strong>高速以太网**</strong>——3.5.1100BASE-T** <strong>以太网**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>24.适用于非屏蔽双绞线的以太网卡应提供<strong>RJ-45</strong>标准接口。</p><p>知识点：第 3 章 数据链路层——3.5 高速以太网——3.5.4 使用以太网进行宽带接入<br> 难度：易<br> 类型：识记</p><p>25.<strong>网桥</strong>在数据链路层实现网络互连的主要设备。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点的数据链路层**</strong>——3.1.1** <strong>数据链路和帧**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>26．局域网常用的拓扑结构有<strong>星型</strong>、<strong>总线型</strong>和<strong>环型</strong>三种。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据链**</strong><br>** <strong>路层**</strong><br>** <strong>难度：易</strong></p><p>27．CSMA/CD 协议的要点是<strong>载波监听</strong>、<strong>多路访问</strong>和<strong>冲突检测</strong>。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>28.在 IEEE802 局域网体系结构中，数据链路层被细化成<strong>LLC</strong> <strong>逻辑链路</strong>子层和<strong>MAC</strong> <strong>介质访问控制</strong>子层两层。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的链路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>29.IEEE802.3 规定了一个数据帧的长度为<strong>64</strong>字节到<strong>1518</strong>字节之间。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br> *<em>——MAC***</em> <strong>帧的格式**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>30.VLAN（虚拟局域网）是一种将局域网从<strong>逻辑</strong>上划分网段，而不是从<strong>物理</strong>上划<br> 分网段，从而实现虚拟工作组的新兴数据交换技术。</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展以太网**</strong>——3.4.3** <strong>虚拟局域网**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>31.以太网采用的协议是<strong>CSMA/CD</strong>。协议的要点是：发送前先监听，边发送边监听，一旦发<br> 现总线上出现了碰撞，就立即停止发送</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSDN/CD** <strong>协议**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>32.IEEE802 委员会把局域网的数据链路层拆成两个子层，即<strong>逻辑链路控制子层或</strong> <strong>LLC</strong>和媒体接入控<strong>制子层或</strong> <strong>MAC</strong>，前者与传输媒体无关</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.1** <strong>局域网的数据链**</strong><br>** <strong>路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>33．有两种基本的差错控制编码，即检错码和纠错码，在计算机网络和数据通信中广泛使<br> 用的一种检错码为<strong>循环冗余检验或</strong> <strong>CRC</strong></p><p><strong>知识点：第三章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：识记</strong></p><p>34．在数据链路层，数据的传送单位是<strong>帧</strong></p><p><strong>知识点：第三章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>35．网桥也称桥接器，它是<strong>数据链路层</strong></p><p><strong>知识点：第三章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a><strong>名词解释</strong></h2><p>1.CSMA/CD<br> <strong>答案：**</strong><br> *<em>CSMA/CD***</em> <strong>意思是载波监听多点接入**</strong>/<strong><strong>碰撞检测，</strong></strong>“*<strong><em>多点接入**<strong>”**</strong>就是说明这是总线型网络，许多****<br>** <strong>计算机以多点接入的方式连接在一根总线上，协议的实质是**</strong>“**<strong>载波监听**</strong>”**<strong>和**</strong>“**<strong>碰撞检测**</strong>”**<strong>。**</strong><br> *</em>“****</strong>载波监听**<strong>”**</strong>就是检测信道，不管在发送前，还是在发送中，每个站都必须不停地检测信道。****<br>** <strong>在发送前检测信道，是为了获得发送权，在发送中检测信道，是为了及时发现有没有其他站**</strong><br>** <strong>的发送和本站发送的碰撞。这就称为碰撞检测。</strong> <strong>“**</strong>碰撞检测**<strong>”**</strong>也就是**<strong>“**</strong>边发送边监听**<strong>”**</strong>，即****<br>** <strong>适配器边发送数据边检测信道上的信号电压的变化情况，以便判断自己在发送数据时其他站**</strong><br>** <strong>是否也在发送数据。。所谓**</strong>“**<strong>碰撞**</strong>”**<strong>就是发生了冲突。因此**</strong>“**<strong>碰撞检测**</strong>”**<strong>也称为**</strong>“**<strong>冲突检测**</strong>”**<strong>。**</strong><br>** <strong>任何一个正在发送数据的站，一旦发现总线上出现了碰撞，其适配器就要立即停止发送，免**</strong><br>** <strong>得继续进行无效的发送，白白浪费网络资源，然后等待一段随机时间后再次发送。</strong></p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>2.异步传输<br> <strong>【答案】：以字节为传输单位、面向字符的传输。**</strong><br>** <strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2** <strong>点对点协议</strong> <strong>PPP——3.2.2 PPP</strong> <strong>协议的帧格式**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>3.CRC<br> <strong>【答案】：**</strong>Cyclic Redundancy Check**<strong>，循环冗余检查**</strong><br>** <strong>【知识点】：第</strong> <strong>3</strong> <strong>章数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本**</strong><br>** <strong>问题**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>4.交换机<br> <strong>【答案】：主要工作在</strong> <strong>OSI/RM</strong> <strong>的数据链路层，以帧作为数据转发的基本单位，是一种多**</strong><br>** <strong>接口的透明网桥。**</strong><br>** <strong>【知识点】：第</strong> <strong>3</strong> <strong>章数据链路层**</strong>——3. 4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>5．PPPoE<br> <strong>【答案】：为宽带上网的主机使用的链路层协议。**</strong><br>** <strong>【知识点】：第</strong> <strong>3</strong> <strong>章数据链路层**</strong>——3.2** <strong>点对点协议</strong> <strong>PPP——3.2.1PPP</strong> <strong>协议的特点**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>6.PPP<br> <strong>【答案】：目前使用最广泛的数据链路层的点对点的协议**</strong><br>** <strong>【知识点】：第</strong> <strong>3</strong> <strong>章数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本**</strong><br>** <strong>问题**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>7．MTU<br> <strong>答案：**</strong>MTU**<strong>：最大传送单元**</strong><br>** <strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：背诵掌握</strong></p><h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a><strong>简答题</strong></h2><p>1．请介绍交换机 MAC 地址学习的基本过程。</p><p><strong>答案：**</strong><br>** <strong>交换机工作在数据链路层，该层基于</strong> <strong>MAC</strong> <strong>地址转发数据。交换机</strong> <strong>MAC</strong> <strong>地址转发数据依赖**</strong><br> *<em>MAC***</em> <strong>地址表，**</strong>MAC** <strong>地址表的生成即</strong> <strong>MAC</strong> <strong>地址学习的过程。**</strong><br>** <strong>假定以太网交换机有</strong> <strong>4</strong> <strong>个接口，分别连接了主机</strong> <strong>A**</strong>、**<strong>B**</strong>、**<strong>C**</strong>、**<strong>D**</strong>。一开始，交换机中的** <strong>MAC**</strong><br>** <strong>地址表是空的。现在主机</strong> <strong>A</strong> <strong>向主机</strong> <strong>B</strong> <strong>发送数据帧，从接口</strong> <strong>1</strong> <strong>进入交换机。交换机收到数据帧**</strong><br>** <strong>后，先查找地址表，没有查到应从哪个接口转发数据帧。这时，交换机会把数据帧的源</strong> <strong>MAC**</strong><br>** <strong>地址</strong> <strong>A</strong> <strong>和接口</strong> <strong>1</strong> <strong>写入到</strong> <strong>MAC</strong> <strong>地址表中，然后向除接口</strong> <strong>1</strong> <strong>以外的所有接口广播这个数据帧。主**</strong><br>** <strong>机</strong> <strong>C</strong> <strong>和</strong> <strong>D</strong> <strong>收到后会丢弃该帧，因为目的地址不对。主机</strong> <strong>B</strong> <strong>收下该帧，主机</strong> <strong>B</strong> <strong>回复数据帧给</strong> <strong>A**</strong>，****<br>** <strong>交换机将主机</strong> <strong>B</strong> <strong>的</strong> <strong>MAC</strong> <strong>地址和连接的接口</strong> <strong>2</strong> <strong>写入到</strong> <strong>MAC</strong> <strong>地址表。**</strong><br>** <strong>随着数据帧的多次转发，交换机就逐渐建立了比较完整的</strong> <strong>MAC</strong> <strong>地址表。</strong></p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.2** <strong>在数据链路层扩展以太网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>2．PPP 协议使用同步传输技术传送比特序列 0110111111111100。请问经过零比特填充后变成<br> 什么样的比特序列？若接收到的 PPP 帧的数据部分是 0001110111110111110110，请问原来的<br> 比特序列是什么？<br> <strong>答案：**</strong><br>** <strong>经零比特填充后所得的比特序列是</strong> <strong>011011111011111000**</strong>。****<br>** <strong>经还原后得到的比特序列是</strong> <strong>00011101111111111110**</strong>。**</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2** <strong>点对点协议</strong> <strong>PPP——3.2.2 PPP</strong> <strong>协议的帧格式**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>3．试分析用集线器、LAN 交换机和路由器进行网络互连时，在冲突域和广播域上有什么区别？</p><p><strong>答案：**</strong><br>** <strong>集线器：所有站点在一个冲突域和广播域中**</strong><br>** <strong>交换机：每个站点在一个单独的冲突域，但共享一个广播域**</strong><br>** <strong>路由器：每个子网是一个广播域</strong><br> <strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong>——3.4.1** <strong>在物理层扩展以太网、**</strong>3.4.2****<br>** <strong>在数据链路层扩展以太网、**</strong>3.4.3** <strong>虚拟局域网**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>4.简述路由器与网桥的区别？</p><p><strong>网桥工作在</strong> <strong>OSI</strong> <strong>参考模型的第</strong> <strong>2</strong> <strong>层，路由器工作在第</strong> <strong>3</strong> <strong>层；路由器的传输性能不如网桥，但**</strong><br>** <strong>适应范围超过网桥；路由器能抑制广播包，但网桥不能；路由器可以拥有不同的子网，而网**</strong><br>** <strong>桥连接的网络具有相同的子网地址；路由器的安装和配置比网桥复杂。</strong></p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.4** <strong>扩展的以太网**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>5.简述 CSMA/CD 的工作原理？<br> <strong>【答案】：**</strong><br>** <strong>发送前先监听信道是否空闲，若空闲则立即发送；如果信道忙，则继续监听，一旦空闲就立**</strong><br>** <strong>即发送；在发送过程中，仍需继续监听。若监听到冲突，则立即停止发送数据，然后发送一**</strong><br>** <strong>串干扰信号；发送干扰信号的目的是强化冲突，以便使所有的站点都能检测到发生了冲突。**</strong><br>** <strong>等待一段随机时间（称为退避）以后，再重新尝试。归结为四句话：发前先听，空闲即发送，**</strong><br>** <strong>边发边听，冲突时退避。</strong></p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协**</strong><br>** <strong>议**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>6.在 IEEE802.3 标准以太网中，为什么说如果有碰撞则一定发生在碰撞窗口内，或者说一<br> 个帧如果在碰撞窗口内没发生冲突，则该包就不会再发生碰撞？<br> 答案：<br> <strong>（**</strong>1**<strong>）由于节点要发送数据时，先侦听信道是否有载波，如果有，表示信道忙，则继续侦听，**</strong><br>** <strong>直至检测到空闲为止；</strong> <strong>（**</strong>2** <strong>分）**</strong><br>** <strong>（**</strong>2**<strong>）当一个数据帧从节点</strong> <strong>1</strong> <strong>向最远的节点传输过程中，如果有其他节点也正在发送数据，此**</strong><br>** <strong>时就发生碰撞，碰撞后的信号需要经过碰撞窗口时间后传回节点</strong> <strong>1**</strong>，节点** <strong>1</strong> <strong>就会检测到碰撞，**</strong><br>** <strong>所以说如果有碰撞则一定发生在碰撞窗口内，如果在碰撞窗口内没有发生碰撞，之后如果其**</strong><br>** <strong>他节点再要发送数据，就会侦听到信道忙，而不会发送数据，从不会再发生碰撞。（**</strong>3** <strong>分）</strong></p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>7．简述共享式集线器（HUB）与交换机（SWITCH）的异同点<br> <strong>答案：**</strong><br>** <strong>⑴**</strong>在** <strong>OSI</strong> <strong>参考模型中工作的层次不同：**</strong>HUB** <strong>一般工作在物理层，交换机工作在数据链路**</strong><br>** <strong>层或网络层。**</strong><br>** <strong>⑵**</strong>数据传输方式不同：**<strong>HUB</strong> <strong>的所有设备在同一冲突域和同一广播域，采用的数据传输方**</strong><br>** <strong>式是广播方式，容易产生广播风暴；交换机的数据传输是有目的的，数据在发送方与接收方**</strong><br>** <strong>之间进行点对点的传送，数据传输效率提高，不会出现广播风暴，在安全性方面也不会出现**</strong><br>** <strong>其他节点侦听的现象。**</strong><br>** <strong>⑶**</strong>带宽占用方式不同：**<strong>HUB</strong> <strong>的所有端口共享总带宽，而交换机的每个端口都有自己的带**</strong><br>** <strong>宽。**</strong><br>** <strong>⑷**</strong>传输模式不同：**<strong>HUB</strong> <strong>只能采用半双工方式进行传输，交换机既可采用半双工也可采用**</strong><br>** <strong>全双工。</strong><br> <strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.3** <strong>使用集线器的星**</strong><br>** <strong>型拓扑**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>8．试简述主机 1（IP 地址为 192.168.2.1，MAC 地址为 E1）向主机 2（IP 地址为 192.168.2.2，<br> MAC 地址为 E2）发送数据时 ARP 协议的工作过程（主机 1、主机 2 在同一个子网内）。</p><p><strong>答案：**</strong><br>** <strong>⑴**</strong>当主机** <strong>1</strong> <strong>要向主机</strong> <strong>2</strong> <strong>发送数据时，必须知道主机</strong> <strong>2</strong> <strong>的</strong> <strong>MAC</strong> <strong>地址，为此，先根据主机</strong> <strong>2</strong> <strong>的**</strong><br> *<em>IP***</em> <strong>地址在本机的</strong> <strong>ARP</strong> <strong>缓冲表内查找，如找到</strong> <strong>E2**</strong>，则把** <strong>E2</strong> <strong>填到</strong> <strong>MAC</strong> <strong>帧中，并把数据发送给**</strong><br>** <strong>主机</strong> <strong>2**</strong>；****<br>** <strong>⑵**</strong>如果在本机的** <strong>ARP</strong> <strong>缓冲表内找不到主机</strong> <strong>2</strong> <strong>的</strong> <strong>MAC</strong> <strong>地址，则主机</strong> <strong>1</strong> <strong>产生一个</strong> <strong>ARP</strong> <strong>询问包，**</strong><br>** <strong>其中包含主机</strong> <strong>1</strong> <strong>的</strong> <strong>IP</strong> <strong>地址，**</strong>MAC** <strong>地址</strong> <strong>E1**</strong>，主机** <strong>2</strong> <strong>的</strong> <strong>IP</strong> <strong>地址，并广播到网络上询问有谁知**</strong><br>** <strong>道主机</strong> <strong>2</strong> <strong>的</strong> <strong>MAC</strong> <strong>地址；**</strong><br>** <strong>⑶**</strong>主机** <strong>2</strong> <strong>收到</strong> <strong>ARP</strong> <strong>询问包后，根据询问者的</strong> <strong>IP</strong> <strong>和</strong> <strong>MAC</strong> <strong>地址</strong> <strong>E1</strong> <strong>立即向主机</strong> <strong>1</strong> <strong>回送一个</strong> <strong>ARP**</strong><br>** <strong>响应包，其中包含主机</strong> <strong>1</strong> <strong>的</strong> <strong>IP</strong> <strong>地址，**</strong>MAC** <strong>地址</strong> <strong>E1**</strong>，主机** <strong>2</strong> <strong>的</strong> <strong>IP</strong> <strong>地址和</strong> <strong>MAC</strong> <strong>地址</strong> <strong>E2**</strong>，从****<br>** <strong>而主机</strong> <strong>1</strong> <strong>获得了主机</strong> <strong>2</strong> <strong>的</strong> <strong>MAC</strong> <strong>地址</strong> <strong>E2**</strong>，进而可向主机** <strong>2</strong> <strong>发送数据。**</strong><br>** <strong>知识点：第三章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>–3.3.5** <strong>以太网的</strong> <strong>MAC</strong> <strong>层**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><h2 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a><strong>综合题</strong></h2><p>1．要发送的数据是 1101011011，已知 CRC 码的生成多项式 <img src="/posts/a9ef41eb/clip_image001.png" alt="在这里插入图片描述">，求校验序列FCS。</p><p><strong>答案：**</strong><br>** <strong>采用</strong> <strong>CRC</strong> <strong>的生成多项式</strong> <strong>G(X) = X**</strong><br> *<em>4 + X +1*****</em>，用二进制表示就是** <strong>G = 10011**</strong>，这是模** <strong>2</strong> <strong>运**</strong><br>** <strong>算中的除数。在发送的数据后面添加</strong> <strong>4</strong> <strong>个</strong> <strong>0**</strong>，得被除数** <strong>11010110110000**</strong><br>** <strong>模</strong> <strong>2</strong> <strong>运算，得余数</strong> <strong>R = 1110**</strong>，这就是校验序列** <strong>FCS</strong> <strong>的值。</strong></p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本问题**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>2．已知 CRC 码的生成多项式 <img src="/posts/a9ef41eb/clip_image002.png" alt="在这里插入图片描述">，若信息位是 1101110010001，求冗余多项式 R(X)。</p><p><strong>答案：**</strong><br>** <strong>由生成多项式</strong> <strong>G(X) = X6 + X 5 + X +1</strong> <strong>得除数</strong> <strong>P = 1100011**</strong>。*<strong>*<br>** <strong>由于生成多项式最高次方为</strong> <strong>6**</strong>，且信息位是** <strong>1101110010001**</strong>，故被除数是*<strong>*<br> *<em>1101110010001000000*</em></strong></strong>。****<br>** <strong>下面采用模</strong> <strong>2</strong> <strong>运算求解冗余多项式</strong> <strong>R(x)**</strong>。**<br> <img src="/posts/a9ef41eb/clip_image003.png" alt="在这里插入图片描述"></p><p><strong>由于生成多项式最高次方为</strong> <strong>6**</strong>，故冗余位应该为** <strong>6</strong> <strong>位。在上面得到的余数最高位前面补**</strong><br>** <strong>零凑足</strong> <strong>6</strong> <strong>位，得</strong> <strong>R(X) = 010110**</strong>。**</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本问题**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>3．要发送的数据是 101110，已知 CRC 码的生成多项式 <img src="/posts/a9ef41eb/clip_image004.png" alt="G(X) = X3 +1">，求帧校验序列 FCS。</p><p><strong>采用</strong> <strong>CRC</strong> <strong>的生成多项式</strong> <strong>G(X) = X**</strong><br> *<em>3 + 1*****</em>，用二进制表示就是** <strong>G = 1001**</strong>，这是模** <strong>2</strong> <strong>运算中**</strong><br>** <strong>的除数。在拟发送的数据后面添加</strong> <strong>3</strong> <strong>个</strong> <strong>0</strong> <strong>得被除数</strong> <strong>101110000**</strong>。****<br>** <strong>模</strong> <strong>2</strong> <strong>运算得余数</strong> <strong>R = 011**</strong>，这就是校验序列的值**</p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本问题**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>4.考虑建立一个 CSMA/CD 网，电缆长 1km，不使用中继器，运行速率为 1Gb/s。电缆中的信<br> 号速度是 200000km/s。最小帧长度是多少？<br> <strong>答案：**</strong><br>** <strong>单程传播时间为</strong> <strong>1km/200000km/s=5</strong> <strong>微秒，往返传播时间为</strong> <strong>10</strong> <strong>微秒。为了能够按照</strong> <strong>CSMA/CD**</strong><br>** <strong>工作，最小帧的发送时间不能小于</strong> <strong>10</strong> <strong>微秒。以</strong> <strong>1Gb/s</strong> <strong>速率工作，**</strong>10** <strong>微秒可以发送的比特数**</strong><br>** <strong>等于</strong> <strong>10000</strong> <strong>位。因此最小帧是</strong> <strong>10000</strong> <strong>位或</strong> <strong>1250</strong> <strong>字</strong></p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.3** <strong>使用广播信道的数据链路层**</strong>——3.3.2 CSMA/CD** <strong>协议**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>5．某公司内部有一个采用 TCP/IP 协议的 100Base-TX 局域网，包括 1 台服务器和 20 台客户<br> 机，通过一台 16 端口的交换机与一台 8 端口的共享集线器级连，同时通过一台路由器连接<br> Internet，服务器上运行 DHCP 服务软件，客户机的 IP 地址由 DHCP 自动分配，请回答下述问<br> 题：</p><p>（1）连接计算机与集线器的单根电缆的最大长度为多少？<br> （2）集线器每个端口的平均带宽是多少？<br> （3）为了控制局域网用户访问 Internet 时只能进行 WWW 浏览，应该在路由器上采取什么措<br> 施？</p><p>6.要发送的数据为 1101011011。采用 CRC 的生成多项式是 P(x)=x4+x+1 。试求应添加在数<br> 据后面的余数。数据在传输过程中最后一个 1 变成了 0，问接收端能否发现？若数据在传输<br> 过程中最后两个 1 都变成了 0，问接收端能否发现？</p><p><strong>【答案】：**</strong><br>** <strong>添加的检验序列为</strong> <strong>1110</strong> <strong>（**</strong>11010110110000** <strong>除以</strong> <strong>10011**</strong>）****<br>** <strong>数据在传输过程中最后一个</strong> <strong>1</strong> <strong>变成了</strong> <strong>0**</strong>，**<strong>11010110101110</strong> <strong>除以</strong> <strong>10011**</strong>，余数为** <strong>011**</strong>，不为** <strong>0**</strong>，****<br>** <strong>接收端可以发现差错。**</strong><br>** <strong>数据在传输过程中最后两个</strong> <strong>1</strong> <strong>都变成了</strong> <strong>0**</strong>，**<strong>11010110001110</strong> <strong>除以</strong> <strong>10011**</strong>，余数为** <strong>101**</strong>，不****<br>** <strong>为</strong> <strong>0**</strong>，接收端可以发现差错。**</p><p><strong>【知识点】：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.1** <strong>数据链路**</strong><br>** <strong>和帧**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：知识运用</strong></p><p>7.设生成多项式为: <img src="/posts/a9ef41eb/clip_image005.png" alt="在这里插入图片描述">，收到的信息码字为 100011，检查和 CRC 为 1001，<br> 请问收到的信息有错吗，为什么？</p><p><img src="/posts/a9ef41eb/clip_image006.png" alt="在这里插入图片描述"><br> <strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.1** <strong>使用点对点信道的数据链路层**</strong>——3.1.2** <strong>三个基本问题**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>8.一个 PPP 帧的数据部分（用十六进制写出）是 7D 5E FE 27 7D 5D 7D 5D 65 7D 5E。试问<br> 真正的数据是什么（用十六进制写出）？</p><p>答案：<strong>7E FE 27 7D 7D 65 7E**</strong>。****<br>** <strong>评分标准：全部正确给</strong> <strong>5</strong> <strong>分，答错给</strong> <strong>0</strong> <strong>分。</strong></p><p><strong>知识点：第</strong> <strong>3</strong> <strong>章</strong> <strong>数据链路层**</strong>——3.2** <strong>点对点协议</strong> <strong>PPP——2</strong> <strong>字节填充**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二章-物理层</title>
      <link href="posts/60187dc5/"/>
      <url>posts/60187dc5/</url>
      
        <content type="html"><![CDATA[<p><strong>计算机网络复习题第二章（标有课本知识点）</strong></p><h2 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a><strong>选择题</strong></h2><p>1．常用的传输介质中，带宽最大、传输信号衰减最小、抗干扰能力最强的是（ <strong>B</strong>）。<br> A.同轴电缆<br> B.光纤<br> C.双绞线<br> D.无线电磁波</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>2．在脉冲编码调制中，若规定的量化级是 256，则需要使用（ <strong>D</strong>）位编码。<br> A.5<br> B.6<br> C.7<br> D.8</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.5** <strong>数字传输系统**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>3．交换机与双绞线进行连接的端口是（ <strong>A</strong>）。<br> A.RJ-45<br> B.RJ-11<br> C.USB<br> D.COM</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>4．同步传输中的同步是指（<strong>B</strong> ）。<br> A.时钟频率同步<br> B.时钟同步<br> C.传输速率同步<br> D.位、字符同步</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：理解</strong></p><p>5．物理层的（ <strong>B</strong>）规定了接口信号的来源、作用以及与其他信号之间的关系。<br> A.机械特性<br> B.功能特性<br> C.电气特性<br> D.规程特性</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.1** <strong>物理层的基本概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>6．声音属于（ <strong>A</strong>）。<br> A.模拟数据<br> B.数字数据<br> C.模拟信号<br> D.数字信号</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.1** <strong>数据通信系统的模型**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>7．目前网络传输媒体中传输速率最高的是（<strong>C</strong> ）。<br> A.双绞线<br> B.同轴电缆<br> C.光纤<br> D.电话线</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：识记</strong></p><p>8．若码元传输速率为 2400 波特，每个码元可取 4 种有效离散值，则相应的数据传输速率为<br> （<strong>D</strong> ）。<br> A.1200b/s<br> B.2400b/s<br> C.3600b/s<br> D.4800b/s</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>9．当物理信道的可用带宽超过单个原始信号所需带宽时，可采用的复用技术是（<strong>A</strong> ）。<br> A.FDM<br> B.TDM<br> C.WDM<br> D.STDM</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分复**</strong><br>** <strong>用**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>10.信道容量是带宽与信噪比的函数，以下哪个术语用来描述这种关系？（ <strong>A</strong>）<br> A．香农定理<br> B. 带宽<br> C．奈奎斯特准则<br> D. 傅里叶原理</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>11.在基带传输中采用的编码方式有（<strong>A</strong> ）<br> A．曼彻斯特编码<br> B. 正交幅度相位调制法<br> C．FSK<br> D. 移相键控法</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>12.波特率等于（ <strong>B</strong>）。<br> A．每秒传输的比特<br> B. 每秒钟可能发生的信号变化的次数<br> C．每秒传输的周期<br> D. 每秒传输的字节数</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>13.在通信术语中，计算机和终端统称为（<strong>A</strong> ）<br> A. DTE<br> B. DCE<br> C. DSE<br> D. Client/Server</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.1** <strong>数据通信系统的模型**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>14.在下列传输媒体中，哪一种错误率最低？（ B）<br> A．同轴电缆<br> B. 光缆<br> C. 微波<br> D. 双绞线</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>15.某 Modem 使用坐标图中（1，1），（2，2），（-2，-2）和（-1，-1）表示 4 个数据点，它在<br> 1200 波特的线路上可以达到的数据传输率是（ <strong>B</strong>）<br> A. 1200bps<br> B. 2400bps<br> C. 9600bps<br> D. 19200bps</p><p>知识点：第 2 章 物理层——2.2 数据通信的基础知识——2.2.3 信道的极限容量<br> 难度：中<br> 类型：理解</p><p>16.两个设备之间进行通信必须同步，下列哪种方法可以在没有时钟信号的情况下保持同步？<br> （<strong>B</strong> ）<br> A. 时分多路复用<br> B. 异步数据传输<br> C. 同步数据传输<br> D. 异步传输模式</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>17.T1 系统的速率为多少？（ <strong>A</strong>）<br> A.1.544Mbps<br> B.2.048Mbps<br> C.64Kbps<br> D.155Mbps</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.5** <strong>数字传输系统**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>18．多路复用器的主要功能是（ <strong>C</strong>）<br> A. 执行数/模转换<br> B. 减少主机的通信处理负载<br> C. 结合来自两条或更多条线路的传输<br> D. 执行串行/并行转换</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分**</strong><br>** <strong>复用**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>19．下列哪一项最好地描述了基带信号（ B）<br> A. 通过同一通道传输多重信号<br> B. 信号以其原始的状态传输<br> C. 对信道上的频率范围通常要进行划分<br> D. b 和 c</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本**</strong><br>** <strong>概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>20．终端和主计算机属于（B ）<br> A. DCE<br> B. DTE<br> C. 硬件接口<br> D. Modem</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.1** <strong>数据通信系统的模型**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>21.EI 载波把 32 个信道按时分多路方式复用在一条 2.048 Mb/s 的高速信道上，每条话音信道<br> 的数据速率是（ <strong>B</strong>）<br> A. 56Kb/s<br> B. 64Kb/s<br> C. 128Kb/s<br> D. 512Kb/s</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>概述**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分**</strong><br>** <strong>复用**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>22.在同一个信道上的同一时刻，能够进行双向数据传送的通信方式是（ <strong>C</strong>）。<br> A. 单工<br> B.半双工<br> C. 全双工<br> D. 以上都不是</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>23.设数据传输速率为4800bps，采用16相相移键控调制，则调制速率为（ <strong>D</strong> ）baud<br> A. 4800<br> B.3600<br> C. 2400<br> D. 1200</p><p><strong>【知识点】：第**</strong>2**<strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>24.设数据传输速率为 4800bps，采用 16 相相移键控调制，则调制速率为（<strong>D</strong> ）baud<br> A. 4800<br> B.3600<br> C. 2400<br> D. 1200</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>25.光纤上采用的多路复用技术是（ <strong>D</strong>）<br> A. CDM<br> B.TDM<br> C. FDM<br> D. WDM</p><p>【<strong>知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道路复用技术**</strong>——2.4.2** <strong>波分复用**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>26.在同一个信道上的同一时刻，能够进行双向数据传送的通信方式是（ <strong>C</strong>）<br> A. 单工<br> B.半双工<br> C. 全双工<br> D. 以上都不是</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>27.两个设备之间进行通信必须同步，下列方法中可以在没有时钟信号的情况下保持同步的是<br> （<strong>B</strong> ）<br> A. 时分多路复用<br> B.异步数据传输<br> C. 同步数据传输<br> D. 异步传输模式</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：理解</strong></p><p>28.OSI 的物理层有四个特性，即：机械特性、电气特性、功能特性、规程特性。请问：在<br> EIA-232-E 标准接口(它是 EIA 制订的著名物理层异步通信接口标准)里，“规定引脚的作用”<br> 属于（<strong>C</strong> ）特性？<br> A. 机械特性<br> B.电气特性<br> C. 功能特性<br> D. 规程特性</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.1** <strong>物理层的基本概念**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>29.设数据传输速率为 4800bps，采用 16 相相移键控调制，则调制速率为（ D）baud<br> A. 4800<br> B.3600<br> C. 2400<br> D. 1200</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>30.EI 载波把 32 个信道按时分多路方式复用在一条 2.048 Mb/s 的高速信道上，每条话音信道<br> 的数据速率是（B ）<br> A. 56Kb/s<br> B. 64Kb/s<br> C. 128Kb/s<br> D. 512Kb/s</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>概述**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分**</strong><br>** <strong>复用**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>31.光纤通信中使用的复用方式是（ <strong>D</strong>）。<br> A. 时分多路<br> B. 空分多路<br> C. 频分多路<br> D. 波分多路</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.2** <strong>波分复用**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>32.在同一个信道上的同一时刻，能够进行双向数据传送的通信方式是（<strong>C</strong> ）<br> A. 单工<br> B.半双工<br> C. 全双工<br> D. 以上都不是</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>33.香农定理从定量的角度描述了“带宽”与“速率”的关系。在香农定理的公式中与信道的<br> 最大传输速率相关的参数主要有信道宽度与（<strong>B</strong> ）。<br> A. 频率特性<br> B. 信噪比<br> C. 相位特性<br> D. 噪声功率</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>34.下列有关光纤的说法中哪些是错误的？（<strong>C</strong> ）<br> A. 多模光纤可传输不同波长不同入射角度的光<br> B. 多模光纤的纤芯较粗<br> C. 采用多模光纤时，信号的最大传输距离比单模光纤长<br> D. 多模光纤的成本比单模光纤低</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>35．如果 Ethernet 交换机有 4 个 100Mbps 全双工端口和 20 个 10Mbps 半双工端口，那么这个<br> 交换机的总带宽最高可以达到（ <strong>B</strong>）。<br> A. 600Mbps<br> B. 1000Mbps<br> C. 1200Mbps<br> D. 1600Mbps</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>36.各种网络在物理层互连时要求（<strong>A</strong> ）<br> （A）数据传输率和链路协议都相同<br> （B）数据传输率相同，链路协议可不同<br> （C）数据传输率可不同，链路协议相同<br> （D）数据传输率和链路协议都可不同</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.——2…****<br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>37.采用全双工通信方式，数据传输的方向性结构为( <strong>A</strong>)<br> （A）可以在两个方向上同时传输<br> （B）只能在一个方向上传输<br> （C）可以在两个方向上传输，但不能同时进行<br> （D）以上均不对</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>38．采用全双工通信方式，数据传输的方向为(<strong>A</strong> )。<br> A．可以在两个方向上同时传输<br> B．只能在一个方向上传输<br> C．可以在两个方向上传输，但不能同时进行<br> D．以上均不对</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本感念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：识记</strong></p><p>39．下面接入方式中哪种传输速率最快(<strong>B</strong> )。<br> A．电话拨号<br> B．光纤接入<br> C．ADSL<br> D．光纤同轴混合</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>40.在以下传输介质中，带宽最宽，抗干扰能力最强的是(<strong>D</strong> )。<br> A．双绞线<br> B．无线信道<br> C．同轴电缆<br> D．光纤</p><p><strong>知识点：第二章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>引导型传输媒体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>41．在物理层接口特性中，用于描述完成每种功能的事件发生顺序的是( <strong>C</strong>)。<br> A．机械特性<br> B．功能特性<br> C．过程特性<br> D．电气特性</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.1** <strong>物理层的基本概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>42．若下图为 10Base-T 网卡接收到的信号波形，则该网卡收到的比特串是( **C)**。<br> <img src="/posts/60187dc5/clip_image001.png" alt="在这里插入图片描述"><br> A．00110010<br> B．10101101<br> C．00110110<br> D．11000101</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信系统的模型**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>43．将物理信道的总频道带宽分割成若干个子信道，每个子信道传输一路信号，这种复用技术<br> 称为( <strong>C</strong>)。<br> A．时分多路复用<br> B．码分多路复用<br> C．频分多路复用<br> D．波分多路复用</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分复**</strong><br>** <strong>用</strong> <strong>2.4.2</strong> <strong>波分复用</strong> <strong>2.4.3</strong> <strong>码分复用**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>44．若某通信链路的数据传输速率为 2400bit/s，采用 4 相位调制，则该链路的波特率是( <strong>B</strong>)。<br> A．600Baud<br> B．1200 Baud<br> C．4800 Baud<br> D．9600 Baud</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>信道的极限容量**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>45．1000BASE-T标准使用5类非屏蔽双绞线，双绞线长度最长可以达到：（ <strong>C</strong> ）<br> A. 25米<br> B. 50米<br> C. 100米<br> D. 250米</p><p><strong>知识点：第**</strong>2**<strong>章</strong> <strong>物理层**</strong>——2.3**<strong>物理层下面的传输媒体**</strong>——2.3.1**<strong>导引型传输媒体**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>46．由于码元的传输速率受奈氏准则的制约，所以要提高信息的传输速率，就必须设法使一个码元能携带更多个比特的信息量。因此需要采用多元制的调制方法。当采用16元制时，如果码元的传输速率是2400Baud，则信息的传输速率为（<strong>B</strong> ）。<br> A．38400b/s<br> B．9600b/s<br> C．4800b/s<br> D．2400b/s</p><p><strong>知识点：第**</strong>2**<strong>章</strong> <strong>物理层**</strong>——2.2**<strong>数据通信的基础知识**</strong>——2.2.2** <strong>信道的极限容量**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>47．信道复用技术一般分为频分复用、（<strong>A</strong>）、波分复用、码分复用。<br> A.时分复用<br> B.信道复用<br> C.光分复用<br> D.无线复用</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用**</strong><br>** <strong>和统计时分复用**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>48.在现在的局域网中，连接 PC 机时使用最多的媒体是（<strong>D</strong>）。<br> A.光纤<br> B.无线<br> C.同轴电缆<br> D.双绞线</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒**</strong><br>** <strong>体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>49．在计算机网络的中继系统中，中继器处于 OSI 参考模型的（ <strong>A</strong>）。<br> A. 物理层<br> B. 数据链路层<br> C. 网络层<br> D. 高层</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.2** <strong>非导引型传输媒体**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>50．将一条物理信道按时间分成若干时间片轮换地给多个信号使用，每一时间片由复用的一个<br> 信号占用，这样可以在一条物理信道上传输多个数字信号，这种得复用方式是（<strong>B</strong> ）。<br> A. 频分多路复用<br> B. 时分多路复用<br> C. 空分多路复用<br> D. 频分与时分混合多路复用</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分复用**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>51．10Base-T 网络采用的传输介质是（ <strong>A</strong>）。<br> A. 双绞线<br> B. 同轴电缆<br> C. 光纤<br> D. 微波</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>52．利用模拟通信信道传输数据信号的方法称为（ <strong>B</strong>）。<br> A. 频带传输<br> B. 基带传输<br> C. 异步传输<br> D. 同步传输</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本问题**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：识记</strong></p><p>53．基于 ADSL 的接入网由三部分组成：（<strong>D</strong>）、用户线和 ADSL 调制解调器。<br> A. HFC<br> B. ATU<br> C. DMT<br> D. DSLAM</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>概述**</strong>——2.6** <strong>宽带接入技术**</strong>——2.6.1ADSL** <strong>技术**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>54．以下关于传输介质与信号编码关系的描述中，错误的是<strong>D</strong>。<br> A．连接物理层的传输介质可以有不同类型<br> B．通信线路分为两类:点对点通信线路和广播通信线路<br> C．物理层根据所使用传输介质的不同制定相应的物理层协议<br> D．物理层协议规定数据信号的编码方式、信号类型、传输速率与数据链路质量</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>55.以下关于接入技术基本概念的描述中，错误的是<strong>D</strong>。<br> A．接人技术关系到用户能得到的网络服务的类型、服务质量与资费等问题<br> B．接入可以分为家庭接入、校园接入、机关与企业接入<br> C．宽带接入主要有 ADSI 技术、HFC 技术、光纤、无线接入技术<br> D．无线接入主要是靠蓝牙技术</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><h2 id="多选题"><a href="#多选题" class="headerlink" title="多选题"></a><strong>多选题</strong></h2><p>1．按照信号传送的方向与时间的关系，可将数据通信分为（ <strong>ABC</strong>）。<br> A.单工通信<br> B.半双工通信<br> C.全双工通信<br> D.并行通信</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>2．多路复用技术通常有（ <strong>ABCD</strong>）。<br> A.码分多路复用<br> B.波分多路复用<br> C.频分多路复用<br> D.时分多路复用</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>3．下列属于无线传输介质的有（ <strong>ACDE</strong>）。<br> A.无线电波<br> B．光纤<br> C.微波<br> D.红外线<br> E.激光</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.2** <strong>非导引型传输媒体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型</strong> <strong>：识记</strong></p><p>4．多路复用技术通常有（ <strong>ABCDE</strong>）。<br> A.码分多路复用<br> B.波分多路复用<br> C.频分多路复用<br> D.时分多路复用<br> E.空分多路复用</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>5．数字数据编码为模拟信号的方式有（<strong>ABC</strong> ）。<br> A.调幅<br> B.调频<br> C.调相<br> D.非归零编码<br> E.曼彻斯特编码</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型</strong> <strong>：理解</strong></p><p>6．以下属于宽带接入技术的有（<strong>ABCDE</strong> ）。<br> A.ADSL<br> B.HFC<br> C.光纤接入<br> D.以太网接入<br> E.无线接入</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.6** <strong>宽带接入技术**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>7．下列属于数字信号编码方案的是（<strong>ABE</strong> ）。<br> A.不归零码<br> B.曼彻斯特编码<br> C.循环冗余码<br> D.奇偶校验码<br> E.差分曼彻斯特编码</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><h2 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a><strong>填空题</strong></h2><p>1．基本的带通调制方法有<strong>调幅</strong>、<strong>调频</strong>和<strong>调相</strong>。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易</strong></p><p>2．非对称数字用户线路的英文缩写是<strong>ADLS</strong>。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.6** <strong>宽带接入技术**</strong>——2.6.1 ADSL** <strong>技术**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>3．物理层描述的媒体接口特性有：<strong>机械特性</strong>、<strong>电气特性</strong>、<strong>功能特性</strong>和<strong>过程特性</strong>。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.1** <strong>物理层的基本概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>4．波分多路复用技术主要用于<strong>光纤</strong>通信。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.2** <strong>波分复用**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>5．有一通频带为 100kHz 的信道，假设每路信号的带宽为 3.3kHz，保护频带为 0.8kHz，若采<br> 用频分多路复用，则最多能传输的路数是<strong>24</strong>。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分复**</strong><br>** <strong>用**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：知识运用</strong></p><p>6．将发送端的数字信号变换成模拟信号的过程称为<strong>调制</strong>，而将接收端的模拟信号还<br> 原成数字信号的过程称为<strong>解调</strong>。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>7．根据信号中参数的取值方式，通常将信号分为<strong>模拟</strong>信号和<strong>数字</strong>信号。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>8．在早期的数字传输系统中，T1 标准的数据传输速率是<strong>1.544Mb/s</strong>，E1 标准的数据传输速<br> 率是<strong>2.048Mb/s</strong>。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.5** <strong>数字传输系统**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>9.调制解调器的解调器是将（<strong>模拟</strong>）信号转换成（<strong>数字</strong>）信号</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.1** <strong>数据通信系统的模型**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>10.编码解码器（Codec）的编码器是将（<strong>模拟</strong> ）信号转换成（<strong>数字</strong> ）信号。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.1** <strong>数据通信系统的模型**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>11.ISDN 数字位流管道常用的标准接口包括（<strong>基本速率接口</strong> <strong>BRI</strong> ）和（ <strong>一次群速率接口</strong> <strong>PRI</strong>）。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>12.多路复用技术主要包括（ <strong>频分多路复用</strong>）和（<strong>时分多路复用</strong> ）两种。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分**</strong><br>** <strong>复用**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>13．脉码调制的过程包括（ <strong>采样</strong>）、（<strong>量化</strong> ）和（ <strong>编码</strong>）三个阶段。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.5** <strong>数字传输系统**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>14．承载信息的基本信号单位是（ <strong>码元</strong>），它所承载的信息量是由（<strong>码元信号状态个数</strong> ）来决定的。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>15.HFC 网称为（ <strong>光纤同轴混合网</strong>），它是在（<strong>有线电视网</strong> ）基础上发展起来。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.6** <strong>宽带接入技术**</strong>——2.6.2** <strong>光纤同轴混合网（**</strong>HFC** <strong>网）**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>16．调制的基本形式有（ <strong>调幅</strong>）、（<strong>调频</strong> ）和（ <strong>调相</strong>）。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.1** <strong>数据通信系统的模型**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>17．多路复用技术分为（<strong>频分</strong> ）、（<strong>时分</strong> ）和（ <strong>波分</strong>）。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计**</strong><br>** <strong>时分复用**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>18．ADSL 中文名称为（<strong>非对称用户数字线</strong>），其特点是上行和下行带宽（ <strong>不相等</strong>）。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.6** <strong>宽带接入技术**</strong>——2.6.1 ADSL** <strong>技术**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>19.双绞线可分为<strong>无屏蔽双绞线</strong>和<strong>屏蔽双绞线</strong>。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>20.<strong>不归零制</strong>、<strong>曼彻斯特编码</strong>和<strong>差分曼彻斯特编码</strong>是二进制数据编码技术中的三种主要编码方案。</p><p><strong>【知识点】：第二章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.1** <strong>数据通信系统的模型时**</strong><br>** <strong>分复用**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>21.<strong>时分复用</strong>是所有用户在不同的时间占用同样的频带宽度的复用模式。</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章物理层**</strong>——2.4** <strong>信道复用技术**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>22.提高通信信道使用效率的复用技术可以分为<strong>波分多路复用</strong>、<strong>频分多路复用</strong>、<strong>时分多路复用</strong>和<strong>码分多路复用</strong>。</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统**</strong><br>** <strong>计时分复用**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>23.在采用电信号表达数据的系统中，数据有<strong>数字数据</strong>和<strong>模拟数据</strong>两种。</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.1** <strong>数据通信系统的模型**</strong><br>** <strong>【难度】：易</strong></p><p>24.<strong>全双工</strong>是在同一个信道上的同一时刻，能够进行双向数据传送的通信方式。</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>—2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>25.常用的信道复用技术有<strong>FDM</strong>、<strong>TDM</strong>、<strong>STDM</strong>、CDM 和<strong>WDM</strong>。</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道路复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时**</strong><br>** <strong>分复用**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>26．在 OSI 的不同层次中，所传输的数据形式是不同的，物理层所传的数据单位是<strong>位</strong>、<br> 数据链路层的数据单位是<strong>帧</strong>、网络层的数据单位是<strong>IP</strong> <strong>数据报**</strong>/<strong>**分组</strong>、运输层传输的数据单位<br> 是<strong>报文</strong>。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>27.在采用电信号表达数据的系统中，数据有<strong>数字数据</strong>和<strong>模拟数据</strong>两种。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.1** <strong>数据通信系统的模型**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>28.信道复用技术有<strong>时分多路复用</strong>，<strong>频分多路复用</strong>和波分多路复用</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分复**</strong><br>** <strong>用**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>29.多路复用技术是使多路信号共同使用一条线路进行传输，或者将多路信号组合在一条物理<br> 信道上传输，以充分利用信道的容量。多路复用分为：<strong>频分多路复用</strong>、<strong>波分多路复用</strong>、时<strong>分多路复用</strong>和码分多路复用 。</p><p><strong>知识点</strong> <strong>：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>30.将数字信号调制为模拟信号有三种方式，即<strong>调频</strong>、<strong>调幅</strong>、<strong>调相</strong>。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本感念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>31.信道复用技术主要有<strong>频分复用或</strong> <strong>FDM</strong>、<strong>时分复用或</strong> <strong>TDM</strong>、<strong>波分复用或</strong> <strong>WDM</strong>和<strong>码分复用或</strong> <strong>CDMA</strong>四类。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分复**</strong><br>** <strong>用</strong> <strong>2.4.2</strong> <strong>波分复用</strong> <strong>2.4.3</strong> <strong>码分复用**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>32． <strong>物理地址或硬件地址</strong> 是数据链接层和物理层使用的地址，而 <strong>IP</strong> <strong>地址</strong><br> 是网络层和以上各层使用的地址</p><p><strong>知识点：第二章</strong> <strong>物理层**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>33．误码率最低的传输介质是<strong>光纤</strong>。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>引导性传输媒体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>34．DNS 协议用于完成<strong>域名</strong>与 IP 地址的转换。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>35．最常用的两种多路复用技术为<strong>频分</strong>多路复用和<strong>时分</strong>多路复用，其中，<br> 前者是同一时间同时传送多路信号，而后者是将一条物理信道按时间分成若干个时间片轮流<br> 分配给多个信号使用</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分复用**</strong><br>** <strong>难度：易</strong></p><p>36．将数字信号调制为模拟信号有三种方式，即调幅、<strong>调频</strong>、<strong>调相</strong>。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><h2 id="判断题"><a href="#判断题" class="headerlink" title="判断题"></a><strong>判断题</strong></h2><p>1．光缆的光纤通常是偶数个，一进一出。（√ ）</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>2．通常情况下，远距离通信使用多模光纤，近距离通信使用单模光纤。（× ）</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>3．模拟信号不可以在无线媒体上传输。（ ×）</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>4．数字通信中，发送端和接收端必须以某种方式保持同步。（ √）</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>5．模拟信号不可以在无线媒体上传输。（ ×）</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>6．异步传输是以数据块为单位的数据传输。（ ×）</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>7．双绞线不仅可以传输数字信号，也可以传输模拟信号。（ √）</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><p>8．半双工与全双工都有两个传输信道。（√）</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>9.在常用的传输介质中，抗干扰能力最强、安全性最好的一种传输介质是双绞线。（ ×）</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>10.单向通信又称为单工通信，即通信的双方不能同时发送和接收信息。（× ）</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概**</strong><br>** <strong>念**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>11.非对称数字用户线 ADSL 技术最大的好处就是可以利用现有的电话网中的用户线（铜线），<br> 而不需要重新布线。（ √）</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.6** <strong>宽带接入技术**</strong>——2.6.1ADSL** <strong>技术**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>12.频分复用的所有用户是在不同的时间占用同样的频带宽度。（× ）</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分**</strong><br>** <strong>复用**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>13．在半双工通信的网络上，每个设备能够同时发送和接收数据。（× ）</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：识记</strong></p><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a><strong>名词解释</strong></h2><p>1.基带信号：来自于信源的信号。</p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.2** <strong>有关信道的几个基本概念**</strong><br>** <strong>【难度】：易**</strong><br>** <strong>【类型】：识记</strong></p><p>2．信道复用:<strong>信道复用技术是指能在同一传输信道中同时传输多路信号的技术。</strong></p><p><strong>【知识点】：第</strong> <strong>2</strong> <strong>章物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分**</strong><br>** <strong>复用**</strong><br>** <strong>【难度】：中**</strong><br>** <strong>【类型】：理解</strong></p><p>3．FDM：频分复用</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.1** <strong>频分复用、时分复用和统计时分复**</strong><br>** <strong>用**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：背诵掌握</strong></p><h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a><strong>简答题</strong></h2><p>1．RJ-45 插头上的网线排序有哪两种方式？这两种方式在应用上有何不同？各应用于什么场<br> 合？</p><p><strong>答案：**</strong><br> *<em>EIA/TIA***</em> <strong>的布线标准中规定</strong> <strong>RJ-45</strong> <strong>插头上的排序方式有两种。**</strong><br>** <strong>第一种是</strong> <strong>T568A</strong> <strong>线序，用于网络设备需要交叉互连的场合。**</strong>“*<strong><em>交叉**<strong>”**</strong>是指网线的一端按****<br> *</em>T568A**</strong> <strong>线序连接，而另一端按</strong> <strong>T568B</strong> <strong>线序连接。交叉用于连接两台同类设备，例如两台计算**</strong><br>** <strong>机、集线器或交换机。**</strong><br>** <strong>第二种是</strong> <strong>T568B</strong> <strong>线序，用于网络设备直通互连的场合。**</strong>“*<strong><em>直通**<strong>”**</strong>是指网线两端都使用** <strong>T568B**</strong><br>** <strong>线序连接。直通用于连接两台不同类设备，例如计算机与交换机、计算机与集线器。**</strong><br> *</em>T568A**</strong> <strong>线序：绿白、绿、橙白、蓝、蓝白、橙、棕白、棕。**</strong><br> *<em>T568B***</em> <strong>线序：橙白、橙、绿白、蓝、蓝白、绿、棕白、棕。</strong></p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong>——2.3.1** <strong>导引型传输媒体**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>1．简述物理层的特性。</p><p><strong>物理层主要有四个特性，分别是机械特性、电气特性、功能特性和规程特性。**</strong><br>** <strong>机械特性说明接口所用连接器的形状、尺寸、引脚数目、排列、固定和锁定装置等。**</strong><br>** <strong>电气特性说明在接口电缆的各条线上出现什么样的电压范围。**</strong><br>** <strong>功能特性说明各条线上出现的电平表示何种意义。**</strong><br>** <strong>规程特性说明对于不同功能的各种事件的出现顺序。</strong></p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.1** <strong>物理层的概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>2．TCP 采用了什么样的连接服务？简述建立 TCP 连接的过程。<br> <strong>答案：**</strong><br> *<em>TCP***</em> <strong>是运输层的协议，采用了面向连接的服务。**</strong>TCP** <strong>的连接过程被称为三报文握手。具体**</strong><br>** <strong>过程如下：**</strong><br> *<em>T1***</em> <strong>时刻，发送端向接收端发送建立连接的请求，并将连接请求标志字段</strong> <strong>SYN</strong> <strong>置为</strong> <strong>1**</strong>。*<strong>*<br> *<em>T2*</em></strong> <strong>时刻，接收端收到发送端的请求，向发送端响应，并将连接请求字段</strong> <strong>SYN</strong> <strong>置为</strong> <strong>1**</strong>。*<strong>*<br> *<em>T3*</em></strong> <strong>时刻，发送端收到接收端的响应，再向接收端发送连接确认，通信两端的连接正式建**</strong><br>** <strong>立。</strong></p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.1** <strong>物理层的概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>3．通过 IEEE 802.3 局域网发送 ASCII 码数据“Good morning!”，若封装成一个 MAC 帧，请<br> 问该帧的数据字段有效字节是多少？需要填充多少个字节？</p><p><strong>答案：**</strong><br>** <strong>因为</strong> <strong>MAC</strong> <strong>帧最小帧长是</strong> <strong>64</strong> <strong>字节，**</strong>MAC** <strong>帧头占</strong> <strong>18</strong> <strong>字节，因此数据部分长度不能小于</strong> <strong>46</strong> <strong>字**</strong><br>** <strong>节。如果小于则进行字节填充。本题中，数据帧的数据字段有效字节长度是</strong> <strong>13</strong> <strong>字节（由字符**</strong><br>** <strong>个数决定），故还需要填充</strong> <strong>33</strong> <strong>字节。</strong></p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.1** <strong>物理层的概念**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>4．简述计算机网络的传输媒体有哪些，并简要介绍这些媒体的特点？</p><p><strong>导引型媒体：双绞线、同轴电缆、光缆**</strong><br>** <strong>导引型媒体：无线电波</strong></p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.3** <strong>物理层下面的传输媒体**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型</strong> <strong>：识记</strong></p><h2 id="综合应用题"><a href="#综合应用题" class="headerlink" title="综合应用题"></a><strong>综合应用题</strong></h2><p>1．一个信道的带宽是 4kHz，数字信号的电平取值存在 4 种可能，请问理想状态下该信道的<br> 最大数据传输率是多少？若考虑到信道噪声，信噪比为 30dB，则该信道的最大数据传输率是<br> 多少？（注：log 2 1001≈10</p><p>答案：<br> 理想状态下使用奈奎斯特准则求解信道最大数据传输速率<br> <img src="/posts/60187dc5/clip_image002.png" alt="C = 2Hlog 2 N"><br> 将 H = 4kHz，N = 4 代入得 C = 16kbps。<br> 有噪声干扰时使用香农公式求解信道最大数据传输速率<br> <img src="/posts/60187dc5/clip_image003.png" alt="C = Hlog 2 (1+S/N)"><br> 又 10log10(S/N) = 30dB，可求得 S/N = 1000。<br> 将 H = 4kHz，S/N = 1000 代入香农公式得 C = 40kbps。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：知识运用</strong></p><p>2．假设使用 12MHz 的采用频率对信号进行采样，若采用四调相方式，请计算在无噪声信道中<br> 的数据传输速率和所需的信道带宽</p><p><img src="/posts/60187dc5/clip_image004.png" alt="四调相方式意味着一个脉冲携带 log 2 4 个比特信息，数据传输速率为 12log 2 4Mbps，即 24Mbps。"><br> 根据采样定理，采样频率是带宽的 2 倍，故信道带宽是 6MHz。</p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>3.一个用于发送二进制信号的 3kHz 信道，其信躁比为 20dB，可以获得的最大数据率是多少？<br> 答案：<br> <img src="/posts/60187dc5/clip_image005.png" alt="**20dB=10lg100，香农极限=3log2（1+100）=3*6.66=19.98kb/s；奈奎斯特极限=2*3=6kb/s；最大极限为 6kb/s。**"><br> <strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>难度：易**</strong><br>** <strong>类型：理解</strong></p><p>4.设信号脉冲周期为 0.002 秒，脉冲信号有效值状态个数为 8。如果用 4 进制代码表示上述<br> 信号，一个脉冲信号需要用多少位 4 进制代码表示？用 4 进制代码表示上述信号，其数据传<br> 输率是多少？</p><p><strong>答案：**</strong><br>** <strong>显然，脉冲信号变化的频率为</strong> <strong>1/0.002=500**</strong>，即信号传输率（波特率）为** <strong>500 Baud**</strong>。一个脉****<br>** <strong>冲信号运载的</strong> <strong>4</strong> <strong>进制位数为</strong> <strong>log 4 8</strong> <strong>取整，即</strong> <strong>2</strong> <strong>位。因此，数据传输率为</strong> <strong>2X500=1000</strong> <strong>位**</strong>/<strong>**秒。</strong></p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>难度：难**</strong><br>** <strong>类型：知识运用</strong></p><p>5．假定 PSTN 的带宽是 3000Hz，典型的信噪比是 20dB，试确定可以取得的理论上最大的信息<br> （数据）速率。</p><p><img src="/posts/60187dc5/clip_image006.png" alt="20dB=10lg(S/N)，S/N=100，最大信息传输率=3000Xlog 2 (1+100)=19936bps"><br> <strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>6．在 50kHz 线路上使用 T1 载波需要多大的信躁比？</p><p><img src="/posts/60187dc5/clip_image007.png" alt=". 因为 T1 信道的最大数据率为 1.544Mbps，根据香农公式 T1 信道最大传输率=50000Xlog 2 (1+S/N)=1544000bps，S/N=230 -1，？dB=10lg(S/N)，信噪比约为 93dB。"></p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.2** <strong>数据通信的基础知识**</strong>——2.2.3** <strong>信道的极限容量**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p><p>7．共有 4 个站进行码分多址 CDMA 通信。4 个站的码片序列为：<br> A.（-1 –1 –1 +1 +1 –1 +1 +1） B.（-1 –1 +1 -1 +1 +1 +1 -1）<br> C.（-1 +1 –1 +1 +1 +1 -1 -1） D.（-1 +1 –1 –1 -1 –1 +1 -1）<br> 现收到这样的码片序列：（-1 +1 –3 +1 -1 –3 +1 +1）。问哪个站发送数据了？发送数据的<br> 站发送的 1 还是 0？</p><p><strong>答：**</strong>S·A=<strong><strong>（＋</strong></strong>1*<strong><em>－**<strong>1**</strong>＋**<strong>3**</strong>＋**<strong>1**</strong>－**<strong>1**</strong>＋**<strong>3**</strong>＋**<strong>1**</strong>＋**<strong>1**</strong>）／**<strong>8=1**</strong>，** <strong>A</strong> <strong>发送</strong> <strong>1**</strong><br> *</em>S·B=****</strong>（＋*<strong><em>1**<strong>－**</strong>1**<strong>－**</strong>3**<strong>－**</strong>1**<strong>－**</strong>1**<strong>－**</strong>3**<strong>＋**</strong>1**<strong>－**</strong>1**<strong>）／**</strong>8=<strong><strong>－</strong></strong>1**<strong>，</strong> <strong>B</strong> <strong>发送</strong> <strong>0**</strong><br> *</em>S·C=****</strong>（＋*<strong><em>1**<strong>＋**</strong>1**<strong>＋**</strong>3**<strong>＋**</strong>1**<strong>－**</strong>1**<strong>－**</strong>3**<strong>－**</strong>1**<strong>－**</strong>1**<strong>）／**</strong>8=0**<strong>，</strong> <strong>C</strong> <strong>无发送**</strong><br> *</em>S·D=****</strong>（＋**<strong>1**</strong>＋**<strong>1**</strong>＋**<strong>3**</strong>－**<strong>1**</strong>＋**<strong>1**</strong>＋**<strong>3**</strong>＋**<strong>1**</strong>－**<strong>1**</strong>）／**<strong>8=1**</strong>，** <strong>D</strong> <strong>发送</strong> <strong>1</strong></p><p><strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：理解</strong></p><p>8．某个CDMA站接收方收到一条碎片系列：(-1+1-3+1-1-3+1+1)，假设各个站点的码片向量如<br> 下所示。<br> 站点A：(-1-1-1+1+1-1+1+1) 站点B：(-1-1+1-1+1+1+1-1)<br> 站点C：(-1+1-1-1-1-1+1-1) 站点D：(-1+1-1+1+1+1-1-1)<br> 试问：哪些站点发送了数据？分别发送了什么数据？</p><p><strong>站点</strong> <strong>A**</strong>：*<strong><em>(-1+1-3+1-1-3+1+1)**</em></strong>(-1-1-1+1+1-1+1+1)/8=1*<strong>***<br>*</strong> <strong><em>站点</em></strong> <strong><em>B**<strong><strong>：**</strong></strong>(-1+1-3+1-1-3+1+1)**</em></strong>(-1-1+1-1+1+1+1-1)/8=-1*<strong>*<br>** <strong>站点</strong> <strong>C**</strong>：*<strong><em>(-1+1-3+1-1-3+1+1)</em></strong></strong>(-1+1-1-1-1-1+1-1)/8=1*<strong>***<br>*</strong> <strong><em>站点</em></strong> <strong><em>D**<strong><strong>：**</strong></strong>(-1+1-3+1-1-3+1+1)**</em></strong>(-1+1-1+1+1+1-1-1)/8=0****<br>** <strong>由计算结果可知：站点</strong> <strong>A</strong> <strong>和站点</strong> <strong>C</strong> <strong>发送了比特</strong> <strong>1**</strong>，站点** <strong>B</strong> <strong>发送了比特</strong> <strong>0**</strong>，站点** <strong>D</strong> <strong>没有发送**</strong><br>** <strong>数据。**</strong><br>** <strong>知识点：第</strong> <strong>2</strong> <strong>章</strong> <strong>物理层**</strong>——2.4** <strong>信道复用技术**</strong>——2.4.3** <strong>码分复用**</strong><br>** <strong>难度：中**</strong><br>** <strong>类型：知识运用</strong></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ip网络实验2</title>
      <link href="posts/7323b4cb/"/>
      <url>posts/7323b4cb/</url>
      
        <content type="html"><![CDATA[<h1 id="VLAN的配置与应用"><a href="#VLAN的配置与应用" class="headerlink" title="VLAN的配置与应用"></a>VLAN的配置与应用</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><img src="/posts/7323b4cb/image-20201213233518704.png" alt="image-20201213233518704" style="zoom:50%;"><h3 id="步骤1-搭建实验环境"><a href="#步骤1-搭建实验环境" class="headerlink" title="步骤1:搭建实验环境"></a>步骤1:搭建实验环境</h3><img src="/posts/7323b4cb/image-20201213223123880.png" alt="image-20201213223123880" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213223246835.png" alt="image-20201213223246835" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213223424243.png" alt="image-20201213223424243" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213223540475.png" alt="image-20201213223540475" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213223632292.png" alt="image-20201213223632292" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213223825284.png" alt="image-20201213223825284" style="zoom:50%;"><h3 id="步骤2-配置pc机"><a href="#步骤2-配置pc机" class="headerlink" title="步骤2:配置pc机"></a>步骤2:配置pc机</h3><blockquote><p>实现pc1与pc4在同一个vlan段 vlan100</p><p>pc2与pc3在同一个vlan段 vlan200</p></blockquote><img src="/posts/7323b4cb/image-20201213232842601.png" alt="image-20201213232842601" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213232914736.png" alt="image-20201213232914736" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213224221741.png" alt="image-20201213224221741" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213224259611.png" alt="image-20201213224259611" style="zoom:50%;"><h3 id="步骤3-配置交换机"><a href="#步骤3-配置交换机" class="headerlink" title="步骤3:配置交换机"></a>步骤3:配置交换机</h3><img src="/posts/7323b4cb/image-20201213224811770.png" alt="image-20201213224811770" style="zoom:50%;"><h4 id="配置LSW1"><a href="#配置LSW1" class="headerlink" title="配置LSW1"></a>配置LSW1</h4><p>1.进入配置模式 <code>system-view</code></p><img src="/posts/7323b4cb/image-20201213224530584.png" alt="image-20201213224530584" style="zoom:50%;"><p>2.划分vlan <code>vlan100</code>  <code>vlan200</code></p><img src="/posts/7323b4cb/image-20201213224707463.png" alt="image-20201213224707463" style="zoom:50%;"><p>3.配置端口 0/0/1</p><pre class="line-numbers language-markdown"><code class="language-markdown">interface Ethernet0/0/1    //可以简写 int e0/0/1port link-type accessport default vlan 100dis this //查看当前端口配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/7323b4cb/image-20201213225726690.png" alt="image-20201213225726690" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213225832494.png" alt="image-20201213225832494" style="zoom:50%;"><p>4.配置端口 0/0/2</p><pre class="line-numbers language-markdown"><code class="language-markdown">interface Ethernet0/0/2    //可以简写 int e0/0/2port link-type accessport default vlan 20<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="/posts/7323b4cb/image-20201213230028535.png" alt="image-20201213230028535" style="zoom:50%;"><p>5.配置端口 0/0/3</p><pre class="line-numbers language-markdown"><code class="language-markdown">interface Ethernet0/0/3    //可以简写 int e0/0/1port link-type trunkport trunk allow vlan 100 200dis this<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/7323b4cb/image-20201213230134776.png" alt="image-20201213230134776" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213230233066.png" alt="image-20201213230233066" style="zoom:50%;"><h4 id="配置LSW2"><a href="#配置LSW2" class="headerlink" title="配置LSW2"></a>配置LSW2</h4><p>1.进入配置模式 <code>system-view</code></p><img src="/posts/7323b4cb/image-20201213225406507.png" alt="image-20201213225406507" style="zoom:50%;"><p>2.划分vlan <code>vlan100</code>  <code>vlan200</code></p><img src="/posts/7323b4cb/image-20201213224707463.png" alt="image-20201213224707463" style="zoom:50%;"><p>3.配置端口 0/0/1</p><pre class="line-numbers language-markdown"><code class="language-markdown">interface Ethernet0/0/1    //可以简写 int e0/0/1port link-type accessport default vlan 200<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="/posts/7323b4cb/image-20201213230523379.png" alt="image-20201213230523379" style="zoom:50%;"><p>4.配置端口 0/0/2</p><pre class="line-numbers language-markdown"><code class="language-markdown">interface Ethernet0/0/2    //可以简写 int e0/0/2port link-type accessport default vlan 100<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="/posts/7323b4cb/image-20201213230713843.png" alt="image-20201213230713843" style="zoom:50%;"><p>5.配置端口 0/0/3</p><pre class="line-numbers language-markdown"><code class="language-markdown">interface Ethernet0/0/3    //可以简写 int e0/0/1port link-type trunkport trunk allow vlan 100 200<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="/posts/7323b4cb/image-20201213230900610.png" alt="image-20201213230900610" style="zoom:50%;"><h3 id="步骤4-验证结果"><a href="#步骤4-验证结果" class="headerlink" title="步骤4:验证结果"></a>步骤4:验证结果</h3><img src="/posts/7323b4cb/image-20201213233109864.png" alt="image-20201213233109864" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213231141311.png" alt="image-20201213231141311" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213231215799.png" alt="image-20201213231215799" style="zoom:50%;"><img src="/posts/7323b4cb/image-20201213233031705.png" alt="image-20201213233031705" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> ip网络实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动机NFA到DFA的转化例题</title>
      <link href="posts/6769be3f/"/>
      <url>posts/6769be3f/</url>
      
        <content type="html"><![CDATA[<p><img src="/posts/6769be3f/m3htO5KMyBDsQYn.png"></p><p><img src="/posts/6769be3f/KJ8ZhVXvTWagedS.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编译原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css</title>
      <link href="posts/78cea6d8/"/>
      <url>posts/78cea6d8/</url>
      
        <content type="html"><![CDATA[<h3 id="css语法规则："><a href="#css语法规则：" class="headerlink" title="css语法规则："></a>css语法规则：</h3><p>CSS的语法规则由两个主要的部分构成：选择器（Selector），以及一条或多条声明（Declaration）: </p><img src="/posts/78cea6d8/image-20201228221415296.png" alt="image-20201228221415296" style="zoom: 33%;"><h3 id="css注释："><a href="#css注释：" class="headerlink" title="css注释："></a>css注释：</h3><pre class="line-numbers language-html"><code class="language-html">CSS注释以 "/*" 开始, 以 "*/" 结束，不会被浏览器解析。HTML注释语句：<span class="token comment" spellcheck="true">&lt;!-- 注释内容--></span>JavaScript注释语句：/*注释内容*/ 和   //注释内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="css样式表分类："><a href="#css样式表分类：" class="headerlink" title="css样式表分类："></a>css样式表分类：</h3><img src="/posts/78cea6d8/image-20201228221633257.png" alt="image-20201228221633257" style="zoom:80%;"><h3 id="css选择器："><a href="#css选择器：" class="headerlink" title="css选择器："></a>css选择器：</h3><img src="/posts/78cea6d8/image-20201228221702347.png" alt="image-20201228221702347" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228221747558.png" alt="image-20201228221747558" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228221827799.png" alt="image-20201228221827799" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228221909199.png" alt="image-20201228221909199" style="zoom:80%;"><h3 id="css常用属性："><a href="#css常用属性：" class="headerlink" title="css常用属性："></a>css常用属性：</h3><img src="/posts/78cea6d8/image-20201228221942918.png" alt="image-20201228221942918" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228221958224.png" alt="image-20201228221958224" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228222015139.png" alt="image-20201228222015139" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228222028414.png" alt="image-20201228222028414" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228222042417.png" alt="image-20201228222042417" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228222052802.png" alt="image-20201228222052802" style="zoom:80%;"><h3 id="盒子模型："><a href="#盒子模型：" class="headerlink" title="盒子模型："></a>盒子模型：</h3><img src="/posts/78cea6d8/image-20201228222114381.png" alt="image-20201228222114381" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228222127335.png" alt="image-20201228222127335" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228222145890.png" alt="image-20201228222145890" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228222157070.png" alt="image-20201228222157070" style="zoom:80%;"><h3 id="块级元素和内联元素："><a href="#块级元素和内联元素：" class="headerlink" title="块级元素和内联元素："></a>块级元素和内联元素：</h3><img src="/posts/78cea6d8/image-20201228222236942.png" alt="image-20201228222236942" style="zoom:80%;"><h3 id="决定定位、相对定位、固定定位："><a href="#决定定位、相对定位、固定定位：" class="headerlink" title="决定定位、相对定位、固定定位："></a>决定定位、相对定位、固定定位：</h3><img src="/posts/78cea6d8/image-20201228222417628.png" alt="image-20201228222417628" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228222436075.png" alt="image-20201228222436075" style="zoom:80%;"><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p><img src="/posts/78cea6d8/image-20201228222542515.png" alt="image-20201228222542515" style="zoom:80%;"><img src="/posts/78cea6d8/image-20201228222608421.png" alt="image-20201228222608421"></p><img src="/posts/78cea6d8/image-20201228222618808.png" alt="image-20201228222618808" style="zoom:80%;">]]></content>
      
      
      <categories>
          
          <category> web知识点复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概述知识</title>
      <link href="posts/211f14ef/"/>
      <url>posts/211f14ef/</url>
      
        <content type="html"><![CDATA[<h1 id="概述知识"><a href="#概述知识" class="headerlink" title="概述知识"></a>概述知识</h1><p>B2B：商家对商家，如阿里巴2</p><p>B2C：商家对客户，如早期的京东、当当</p><p>C2C：个人对个人，如淘宝网、易趣网</p><p>B2B2C：B2B和B2C的结合，如天猫、京东</p><p>O2O：线下的商务机会与互联网结合，如饿了么</p><p>HTML 是超文本标记语言</p><p>HTML文件由两部分组成：1、HTML标记；2、HTML标记设置的内容。</p><p>所有的HTML标记都是由一对尖括号（“&lt;”和“&gt;”）和标记名组成的，并分为开始标记&lt;标记名&gt;和结束标记&lt;/标记名&gt;</p><p>HTML文件的执行：由浏览器直接解释执行</p><h3 id="HTML注释："><a href="#HTML注释：" class="headerlink" title="HTML注释："></a>HTML注释：</h3><!--    -->，HTML注释中的内容不会被浏览器解析，也就不会显示在浏览器中。<h3 id="HTML属性："><a href="#HTML属性：" class="headerlink" title="HTML属性："></a>HTML属性：</h3><p>元素的附加信息，用于描述HTML元素的呈现方式、相关内容。以名称/值对的形式出现，常常出现在开始标签中,多个属性之间用空格分隔。  </p><p> 每个HTML元素都有自己专有的属性，但也有一些<code>公共属性</code>：</p><img src="/posts/211f14ef/image-20201228203906664.png" alt="image-20201228203906664" style="zoom:80%;"><h3 id="TML标签-字体标记"><a href="#TML标签-字体标记" class="headerlink" title="TML标签-字体标记:"></a>TML标签-字体标记:</h3><p><strong>1.标题：</strong> 标题（Heading）是通过 <code>&lt;h1&gt; - &lt;h6&gt;</code> 从大到小的标签进行定义的。</p><p>默认情况下标题字居左对齐，如果要改变对齐方式可以用align属性，分为left,right,center</p><p> 比如：<code>&lt;h5 align=&quot;center&quot;&gt;&lt;/h5&gt;</code></p><p>内容居中对齐 可以用<code> text-align=“center”</code></p><p><strong>2.华丽分隔线：</strong><code>&lt;hr&gt;</code> 标签创建水平线，可以用来分隔页面内容，是单标签，可以采用 size=”5” color=”red”属性定义水平线的粗细及颜色。</p><p><code>     &lt;hr size=&quot;5&quot; color=&quot;red&quot; /&gt;</code></p><p><strong>3.段落：</strong><code> &lt;p&gt;</code> 标签定义段落，用于文章分段。</p><p><strong>4.特殊字符输入：</strong>主要记住空格符的用法</p><p><code>&amp;nbsp</code> 空格</p><p> <code>copy</code>c</p><p>5.<strong>预格式化标记:</strong><code>&lt;pre&gt;&lt;/pre&gt;</code>是指保留<code>&lt;pre&gt;&lt;/pre&gt;</code>之间的文字在源代码中的格式，使其在页面中显示的效果和源代码中的效果几乎完全一致</p><p><strong>6.</strong><code>&lt;meta&gt;</code>标记可以做什么？</p><p>可以设置网页字符集编码、关键字、描述、自动刷新、自动跳转等</p><h3 id="HTML标签-列表标记"><a href="#HTML标签-列表标记" class="headerlink" title="HTML标签-列表标记:"></a>HTML标签-列表标记:</h3><h4 id="列表分类："><a href="#列表分类：" class="headerlink" title="列表分类："></a>列表分类：</h4><h5 id="1-有序列表"><a href="#1-有序列表" class="headerlink" title="1.有序列表"></a>1.有序列表</h5><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="/posts/211f14ef/image-20201228210431647.png" alt="image-20201228210431647" style="zoom:80%;"><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="2-无序列表"><a href="#2-无序列表" class="headerlink" title="2.无序列表"></a>2.无序列表</h5><img src="/posts/211f14ef/image-20201228210525383.png" alt="image-20201228210525383" style="zoom:80%;"><h5 id="3-自定义列表"><a href="#3-自定义列表" class="headerlink" title="3.自定义列表"></a>3.自定义列表</h5><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="HTML标签-图片标记"><a href="#HTML标签-图片标记" class="headerlink" title="HTML标签-图片标记"></a>HTML标签-图片标记</h3><h4 id="网页中引入图片的方式有两种："><a href="#网页中引入图片的方式有两种：" class="headerlink" title="网页中引入图片的方式有两种："></a>网页中引入图片的方式有两种：</h4><p>1.以背景图片的方式引用，需要用到标记属性background-image；</p><p>2.用标记<code>&lt;img /&gt;</code>引用。</p><p><code>&lt;img src=&quot;图片文件路径&quot; /&gt;</code></p><blockquote><p>目前适合在网上浏览的图片格式有jpg、gif、png 3种</p></blockquote><h4 id="图片标记属性："><a href="#图片标记属性：" class="headerlink" title="图片标记属性："></a>图片标记属性：</h4><p>1.<code>src</code></p><p>2.<code>alt</code> 设置文字提示   ⚠️：是当网页中图片加载失败 才显示的提示</p><p>3.<code>title</code> 鼠标移动图片显示内容</p><p>4.border 默认不显示边框</p><p>5.width  height  ⚠️：img标签是内联标签 但是设置宽带高度会生效</p><h3 id="HTML标签-表格呈现数据："><a href="#HTML标签-表格呈现数据：" class="headerlink" title="HTML标签-表格呈现数据："></a>HTML标签-表格呈现数据：</h3><h4 id="1-插入表格"><a href="#1-插入表格" class="headerlink" title="1.插入表格"></a>1.插入表格</h4><ul><li><p><code>&lt;table&gt; &lt;tr&gt; &lt;td&gt;</code></p><p>table嵌套tr，tr嵌套td，table标签用来创建表格，tr表示表格的一行，td表示一个单元格。</p></li><li><p><code>&lt;th&gt; &lt;td&gt;</code></p><th>标签与</th><td>标签用法一样，往往</td><td>存数据，<p>而<th>存数据标题的。默认情况下</th><th>中的内容会粗体、居中显示。</th></p></td></li><li><p><code>&lt;caption&gt;</code></p><p>标签定义表格标题</p></li><li><p>常用属性</p><p>align（对齐方式）、</p><p>bgcolor（背景色）、</p><p>cellpadding（单元格与内容的边距）、</p><p>cellspacing（单元格之间的空白）、</p><p>width（表格的宽度）</p></li><li><p><code>&lt;thead&gt; &lt;tbody&gt; &lt;tfoot&gt;</code></p></li><li><p>跨行、跨列</p><p>跨列合并<code>colspan</code>，跨行合并<code>rowspan</code>，都属于th、td元素的特有属性。</p></li><li><p><code>&lt;form&gt;</code></p><p>表单主要用于采集用户数据，并将数据传送到服务器，用于前后端交互的工具。</p></li></ul><img src="/posts/211f14ef/image-20201228214423253.png" alt="image-20201228214423253" style="zoom:80%;"><ul><li><strong>get和post方法的区别：</strong></li></ul><p>GET方法是将表单数据以HTTP头的形式附加到URL地址后面，因而不安全；</p><p>而POST方法则是以HTTP正文体形式发送，因而相对比较安全。</p><p>GET方法对传送数据的长度有限制，不能超过3000个字符；而POST方法无此限制。</p><p>GET方法只能传送ASCII码的字符，传送中文字符会乱码；</p><p>而POST方法没有字符码的限制，它可以传送包含在ISO10646中的所有字符。</p><p>表单默认的提交方法是GET，</p><p>当数据涉及到保密问题或数据量较大时，必须使用POST方法；</p><p>否则可以使用GET方法</p><ul><li><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">></span></span>与<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">></span></span>标签       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">></span></span>与<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">></span></span>标签的作用是将表单控件进行分组，       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">></span></span>在相关表单控件周围绘制边框，而<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">></span></span>为这一组表单控件定义标题。eg：    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span> <span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">></span></span>用户登录表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>legend</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>            用户名： <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userName<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span>   <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span> <span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><img src="/posts/211f14ef/image-20201228214808260.png" alt="image-20201228214808260" style="zoom:80%;"></li></ul><p>⚠️注意：</p><pre class="line-numbers language-html"><code class="language-html">1.单选按钮：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span>”radio”</span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span>“”</span><span class="token punctuation">></span></span> 时，会创建一个单选按钮，同一组单选按钮的name属性一致，否则选择时不能具有排他性。2.复选框：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span>  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>复选框1 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>，会创建一个复选框，通常也是成组出现，复选框不具有排他性，可以同时选中。属性checked可以预设置该复选框选中。3.多行文本框： <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>suggest<span class="token punctuation">"</span></span>  <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span>  <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span>   <span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>         其中cols表示文本区域内可见的列数，rows表示文本区域内可见的行数。4.button按钮： <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>5.列表菜单：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span>  <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>beijing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shanghai<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>      注：size属性的值，可以决定显示出几个菜单项。            还可以采用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optgroup</span><span class="token punctuation">></span></span>对同一个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span>里面的菜单项进行分组6.上传文件:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>会创建一个上传文件控件，例如上传图片、附件等，当有文件上传时，表单提交数据的方式选择post。      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="HTML标签-超级链接："><a href="#HTML标签-超级链接：" class="headerlink" title="HTML标签-超级链接："></a>HTML标签-超级链接：</h3><pre class="line-numbers language-html"><code class="language-html">(1） 指向同站点的其他页面    eg：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>guide.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新手指南<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>常见问题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>           href的值是链接的目标页面，当href 的值是“#”时，指向的是一个空链接。（2）指向另一个网站    eg：&lt;a href=“http://www.baidu.com">百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            跳转到外部网站的时候，只需要将href的值为该网站的URL地址即可。（3） 命名锚记链接         跳转到本页面的指定内容。             步骤1：创建命名锚记。在需要创建命名锚记的位置，将标签的id属性设置好。             步骤2：链接到命名锚记。将链接的href的值设置为“#id的值”。（4）电子邮件链接         邮件链接的href值以mailto:开始，后面跟上一个收件人的email地址          eg：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mailto:mobileshop@ictuniv.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>联系我们<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>(5）文件下载链接：指向某个需下载的文件的链接。可用于下载的文件类型有.doc、.Rar、.cab、.zip、.exe等基本语法：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span>“File_path”</span><span class="token punctuation">></span></span>下载文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>文件下载示例：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span>“mark_using.doc”</span><span class="token punctuation">></span></span>doc文档下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>data2.rar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>RAR文档下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span>“task.exe”</span><span class="token punctuation">></span></span>exe文件下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/posts/211f14ef/image-20201228215344534.png" alt="image-20201228215344534" style="zoom:80%;"><img src="/posts/211f14ef/image-20201228215357376.png" alt="image-20201228215357376" style="zoom:80%;"><h3 id="HTML标签-嵌入多媒体："><a href="#HTML标签-嵌入多媒体：" class="headerlink" title="HTML标签-嵌入多媒体："></a>HTML标签-嵌入多媒体：</h3><img src="/posts/211f14ef/image-20201228215447397.png" alt="image-20201228215447397" style="zoom:80%;"><img src="/posts/211f14ef/image-20201228215525107.png" alt="image-20201228215525107" style="zoom:80%;"><img src="/posts/211f14ef/image-20201228215543215.png" alt="image-20201228215543215" style="zoom:80%;"><img src="/posts/211f14ef/image-20201228215601055.png" alt="image-20201228215601055" style="zoom:80%;"><img src="/posts/211f14ef/image-20201228215714032.png" alt="image-20201228215714032" style="zoom:80%;"><img src="/posts/211f14ef/image-20201228215754513.png" alt="image-20201228215754513" style="zoom:80%;">]]></content>
      
      
      <categories>
          
          <category> web知识点复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目6-web实战上机-11月26号</title>
      <link href="posts/981e1c/"/>
      <url>posts/981e1c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>实现目的：实现距离2021年元旦时间倒计时效果</p></blockquote><h2 id="1-实现代码"><a href="#1-实现代码" class="headerlink" title="1.实现代码"></a>1.实现代码</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>距离元旦<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">span</span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#FF0000</span><span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">p</span><span class="token punctuation">{</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">div</span><span class="token punctuation">{</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>距离元旦还有：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">function</span> <span class="token function">tow</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> n<span class="token operator">></span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> n<span class="token operator">&lt;</span><span class="token number">10</span> <span class="token operator">?</span> n <span class="token operator">=</span> <span class="token string">"0"</span><span class="token operator">+</span>n <span class="token punctuation">:</span> <span class="token string">""</span> <span class="token operator">+</span> n<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> p <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> oDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//获取日期对象</span>            <span class="token keyword">var</span> oldTime <span class="token operator">=</span> oDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//现在距离1970的时间</span>            <span class="token keyword">var</span> newDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"2021/1/1 00:00:00"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> newTime <span class="token operator">=</span> newDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//2021年元旦距离1970年的时间的毫秒数</span>            <span class="token keyword">var</span> second <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>newTime<span class="token operator">-</span>oldTime<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//未来时间距离现在的毫秒数</span>            <span class="token keyword">var</span> day <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>second<span class="token operator">/</span><span class="token number">86400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            second <span class="token operator">=</span> second <span class="token operator">%</span> <span class="token number">86400</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//余数代表剩下的秒数</span>            <span class="token keyword">var</span> hour <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>second<span class="token operator">/</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//整数代表小时</span>            second<span class="token operator">=</span> second <span class="token operator">%</span> <span class="token number">3600</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//剩下的秒数</span>            <span class="token keyword">var</span> minute <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>second<span class="token operator">/</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            second<span class="token operator">=</span>second<span class="token operator">%</span><span class="token number">60</span><span class="token punctuation">;</span>            p<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"&lt;span>"</span><span class="token operator">+</span><span class="token function">tow</span><span class="token punctuation">(</span>day<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"&lt;/span>"</span><span class="token operator">+</span><span class="token string">"天"</span><span class="token operator">+</span><span class="token string">"&lt;span>"</span><span class="token operator">+</span><span class="token function">tow</span><span class="token punctuation">(</span>hour<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"      &lt;/span>"</span><span class="token operator">+</span><span class="token string">"时"</span><span class="token operator">+</span>                <span class="token string">"&lt;span>"</span><span class="token operator">+</span><span class="token function">tow</span><span class="token punctuation">(</span>minute<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"&lt;/span>"</span><span class="token operator">+</span><span class="token string">"分"</span><span class="token operator">+</span><span class="token string">"&lt;span>"</span><span class="token operator">+</span><span class="token function">tow</span><span class="token punctuation">(</span>second<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"&lt;/span>"</span><span class="token operator">+</span><span class="token string">"秒"</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">// console.log(day);</span>        <span class="token punctuation">}</span>        <span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setInterval</span><span class="token punctuation">(</span>getDate<span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>⚠️注意</p><ol><li><strong>setTimeout()**和</strong>setInterval()**经常被用来处理延时和定时任务。</li><li><strong>setTimeout</strong>() 方法用于在指定的毫秒数后调用函数或计算表达式。</li><li><strong>setInterval</strong>()则可以在每隔指定的毫秒数循环调用函数或表达式，直到clearInterval把它清除。</li><li><strong>setTimeout()**只执行一次，而</strong>setInterval()**可以多次调用。</li><li>在用**Math.foor()**向下取整函数，比如还有25.5天。只能说25天，不能说26天。</li></ol><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><img src="/posts/981e1c/image-20201127192122444.png" alt="image-20201127192122444" style="zoom:50%;"><h2 id="2-js内置对象小练习"><a href="#2-js内置对象小练习" class="headerlink" title="2.js内置对象小练习"></a>2.js内置对象小练习</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">//Array对象</span>        <span class="token keyword">var</span> fruit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">"apple"</span><span class="token punctuation">,</span><span class="token string">"orange"</span><span class="token punctuation">,</span><span class="token string">"pear"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruit<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"banana"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//输出一共有4个元素</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruit<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//输出一共有4个元素</span>        <span class="token keyword">var</span> fruit2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">"苹果"</span><span class="token punctuation">,</span><span class="token string">"橘子"</span><span class="token punctuation">,</span><span class="token string">"梨"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"数组添加到数组"</span> <span class="token operator">+</span> fruit<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>fruit2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//字符串对象</span>        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">"dst sdkjk"</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"字符串长度"</span><span class="token operator">+</span>str<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"字符串首次出现的位置"</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"s"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//有匹配返回下标位置，从0开始</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"字符串首次出现的位置"</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"ssss"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//指定字符串不存在，返回-1</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"j"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"截取字符串之间的字符串"</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"替换旧的字符串"</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">"aabbcc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获取内容"</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//Math对象</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"向上取整"</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2.64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"向上取整"</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">2.34</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"向下取整"</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">2.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"向下取整"</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"取两者之间最小值"</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"取两者之间最小值"</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"0---1之间的随机数"</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"1---10之间的随机数"</span> <span class="token operator">+</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//日期对象</span>        <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//getFullYear() 闰年   (date.getMonth()+1)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"今天是"</span> <span class="token operator">+</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"年"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"月"</span> <span class="token operator">+</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"日"</span>        <span class="token operator">+</span>date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译原理第三章课后作业</title>
      <link href="posts/8da0a44/"/>
      <url>posts/8da0a44/</url>
      
        <content type="html"><![CDATA[<h1 id="编译原理第三章课后作业"><a href="#编译原理第三章课后作业" class="headerlink" title="编译原理第三章课后作业"></a>编译原理第三章课后作业</h1><h2 id="知识点1"><a href="#知识点1" class="headerlink" title="知识点1:"></a>知识点1:</h2><h3 id="掌握求First集合，Follow集合的方法"><a href="#掌握求First集合，Follow集合的方法" class="headerlink" title="掌握求First集合，Follow集合的方法"></a>掌握求First集合，Follow集合的方法</h3><h3 id="求全求稳"><a href="#求全求稳" class="headerlink" title="求全求稳"></a>求全求稳</h3><p><img src="/posts/8da0a44/image-20201123232221756.png" alt="image-20201123232221756"></p><h2 id="课本例题"><a href="#课本例题" class="headerlink" title="课本例题"></a>课本例题</h2><p><img src="/posts/8da0a44/image-20201123232406553.png" alt="image-20201123232406553"></p><h2 id="课后习题"><a href="#课后习题" class="headerlink" title="课后习题"></a>课后习题</h2><h3 id="3-10"><a href="#3-10" class="headerlink" title="3.10"></a>3.10</h3><p><img src="/posts/8da0a44/image-20201123232320652.png" alt="image-20201123232320652"></p><h2 id="踩坑："><a href="#踩坑：" class="headerlink" title="踩坑："></a>踩坑：</h2><p>在求follow集合的时候，一定要注意 能推 e 的那条 ，不然follow的第四种情况会用不上<img src="/posts/8da0a44/image-20201123233016333.png" alt="image-20201123233016333" style="zoom:35%;"></p><img src="/posts/8da0a44/image-20201123233058041.png" alt="image-20201123233058041" style="zoom:25%;"><p>因为<code>E&#39;--&gt; e</code>  ， 所以 <code>E --&gt; TE&#39;</code> 可以转化为<code>E --&gt; Te</code> ，又因为<code>e</code>是空串  ，又可以转化为<code> E--&gt; T</code></p><p>到这步是不是可以用上第四种情况来求解了！</p><h4 id="作业会继续更新…-解答不一定正确，本人字有点丑…"><a href="#作业会继续更新…-解答不一定正确，本人字有点丑…" class="headerlink" title="作业会继续更新…. 解答不一定正确，本人字有点丑…"></a>作业会继续更新…. 解答不一定正确，本人字有点丑…</h4>]]></content>
      
      
      <categories>
          
          <category> 编译原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue结合springboot添加分页支持</title>
      <link href="posts/7f6131b9/"/>
      <url>posts/7f6131b9/</url>
      
        <content type="html"><![CDATA[<h1 id="vue结合springboot添加分页支持"><a href="#vue结合springboot添加分页支持" class="headerlink" title="vue结合springboot添加分页支持"></a>vue结合springboot添加分页支持</h1><h2 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码"></a>前端代码</h2><h3 id="分页组件"><a href="#分页组件" class="headerlink" title="分页组件"></a>分页组件</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-pagination</span>  <span class="token attr-name">@current-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>findPage<span class="token punctuation">"</span></span>  <span class="token attr-name">@size-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>findSize<span class="token punctuation">"</span></span>  <span class="token attr-name">small</span>  <span class="token attr-name">background</span>  <span class="token attr-name">prev-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>上一页<span class="token punctuation">"</span></span>  <span class="token attr-name">next-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>下一页<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">  <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">15</span>px <span class="token number">0</span>px</span><span class="token punctuation">"</span></span>  <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prev, pager, next,jumper,total,sizes<span class="token punctuation">"</span></span>  <span class="token attr-name">:page-size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>size<span class="token punctuation">"</span></span>  <span class="token attr-name">:current-page</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pageNow<span class="token punctuation">"</span></span>  <span class="token attr-name">:page-sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[2,4,6,8,10]<span class="token punctuation">"</span></span>  <span class="token attr-name">:total</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>totals<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-pagination</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h3><pre class="line-numbers language-javascript"><code class="language-javascript">        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                tableData<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                search<span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>                totals<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>                size<span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">,</span>                pageNow<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token punctuation">:</span><span class="token punctuation">{</span>            <span class="token function">findPage</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//处理分页</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>page<span class="token operator">=</span> page<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">findSize</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//处理每页显示记录发生变化的方法</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">=</span>size<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>page<span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//查找所有</span>            <span class="token function">findAll</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">{</span>                page <span class="token operator">=</span> page<span class="token operator">?</span>page<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageNow<span class="token punctuation">;</span>                size <span class="token operator">=</span> size<span class="token operator">?</span>size<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8989/book/findByPage?                                                                   pageNow="</span><span class="token operator">+</span>page<span class="token operator">+</span><span class="token string">"&amp;pageSize="</span><span class="token operator">+</span>size<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>tableData<span class="token operator">=</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>books<span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>totals<span class="token operator">=</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>totals<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>           <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h2><h3 id="dao层"><a href="#dao层" class="headerlink" title="dao层"></a>dao层</h3><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//分页查询</span>     List<span class="token operator">&lt;</span>Book<span class="token operator">></span> <span class="token function">findByPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"start"</span><span class="token punctuation">)</span>Integer start<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"rows"</span><span class="token punctuation">)</span>Integer rows<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//查询总条数</span>     Long <span class="token function">findTotals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="mapper文件"><a href="#mapper文件" class="headerlink" title="mapper文件"></a>mapper文件</h3><pre class="line-numbers language-java"><code class="language-java">    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    分页查询<span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"findByPage"</span> resultType<span class="token operator">=</span><span class="token string">"Book"</span><span class="token operator">></span>          select <span class="token operator">*</span> from book limit #<span class="token punctuation">{</span>start<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>rows<span class="token punctuation">}</span>     <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    查询总条数<span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"findTotals"</span> resultType<span class="token operator">=</span><span class="token string">"Long"</span><span class="token operator">></span>         select <span class="token function">count</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> from book     <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="service层"><a href="#service层" class="headerlink" title="service层"></a>service层</h3><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//分页查询</span>     List<span class="token operator">&lt;</span>Book<span class="token operator">></span> <span class="token function">findByPage</span><span class="token punctuation">(</span>Integer pageNow<span class="token punctuation">,</span> Integer rows<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//查询总条数</span>     Long <span class="token function">findTotals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="serviceImpl层"><a href="#serviceImpl层" class="headerlink" title="serviceImpl层"></a>serviceImpl层</h3><pre class="line-numbers language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Book<span class="token operator">></span> <span class="token function">findByPage</span><span class="token punctuation">(</span>Integer pageNow<span class="token punctuation">,</span> Integer rows<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token punctuation">(</span>pageNow<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>rows<span class="token punctuation">;</span>         <span class="token keyword">return</span> bookDAO<span class="token punctuation">.</span><span class="token function">findByPage</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> Long <span class="token function">findTotals</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">return</span> bookDAO<span class="token punctuation">.</span><span class="token function">findTotals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="controller层"><a href="#controller层" class="headerlink" title="controller层"></a>controller层</h3><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//分页查询</span>     <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"findByPage"</span><span class="token punctuation">)</span>     <span class="token keyword">public</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> <span class="token function">findByPage</span><span class="token punctuation">(</span>Integer pageNow<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">)</span><span class="token punctuation">{</span>         Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> results <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         pageNow <span class="token operator">=</span> pageNow <span class="token operator">==</span> null<span class="token operator">?</span><span class="token number">1</span><span class="token operator">:</span>pageNow<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//避免空指针</span>         pageSize <span class="token operator">=</span> pageSize <span class="token operator">==</span> null<span class="token operator">?</span><span class="token number">4</span><span class="token operator">:</span>pageSize<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//避免空指针</span>         List<span class="token operator">&lt;</span>Book<span class="token operator">></span> books<span class="token operator">=</span>service<span class="token punctuation">.</span><span class="token function">findByPage</span><span class="token punctuation">(</span>pageNow<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>         Long totals <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">findTotals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         results<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"books"</span><span class="token punctuation">,</span>books<span class="token punctuation">)</span><span class="token punctuation">;</span>         results<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"totals"</span><span class="token punctuation">,</span>totals<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> results<span class="token punctuation">;</span>     <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每次只需要把实体类 <code>Book</code> 换成 新的实体类  </p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//后端controller层方法</span>results<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"books"</span><span class="token punctuation">,</span>books<span class="token punctuation">)</span><span class="token punctuation">;</span>results<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"totals"</span><span class="token punctuation">,</span>totals<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//前端代码 findAll 方法</span><span class="token keyword">this</span><span class="token punctuation">.</span>tableData<span class="token operator">=</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>books<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>totals<span class="token operator">=</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>totals<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>⚠️ <code>books</code> <code>totals </code> 要对应正确一致</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端后端分离小项目</title>
      <link href="posts/63719fb9/"/>
      <url>posts/63719fb9/</url>
      
        <content type="html"><![CDATA[<h1 id="第一次独立写前后分离项目总结"><a href="#第一次独立写前后分离项目总结" class="headerlink" title="第一次独立写前后分离项目总结"></a>第一次独立写前后分离项目总结</h1><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><ul><li>前端技术 vue  + axios + router element-ui</li><li>前端开发工具 WebStorm 2019.2</li><li>后端技术 springboot + mybatis + mysql 8.0.20 + jdk 1.8</li><li>后端开发工具 Indea 2019.2</li></ul><h2 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h2><ul><li>图书的的基本增删查改</li><li>数据分页显示功能</li><li>角色权限管理（待实现）</li></ul><h2 id="创建vue-cli-一般步骤"><a href="#创建vue-cli-一般步骤" class="headerlink" title="创建vue-cli 一般步骤"></a>创建vue-cli 一般步骤</h2><pre class="line-numbers language-markdown"><code class="language-markdown">//1.初始化项目  xxxx是项目名vue init webpack xxxx//2.安装element-uinpm i element-ui -S  //3.安装axiosnpm install axios//4.在main.js中添加代码import ElementUI from 'element-ui';import 'element-ui/lib/theme-chalk/index.css';Vue.use(ElementUI);import axios from 'axios'Vue.prototype.$http=axios;//注意 在初始化项目的时候 可以选择默认安装 router import router from './router'//打包前端代码 会生成dict文件npm run build//将static文件 index.html 复制到springboot后端项目的 rescouces 的static目录下//配置文件增加: spring.web.resources.static-locations=classpath:/static/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><ol><li><p>当index.vue 通过 $router.push 跳转到 更新表单数据界面  渲染表表数据怎么传递参数</p></li><li><p>插槽的不熟悉， slot-scope=’”” 通过 scope.$data,acope.row 可以拿到数据 scope.row.xx</p></li><li><p>在插槽中定义的事件方法中，会传index，row 两个参数</p></li><li><p>在进行添加操作的时候，前端一直500报错，后端报主键值为空的问题，是因为post请求数据库传递的数据是json格式，需要在后端控制器的接口对应方法的参数加上@RequestBody</p></li></ol><h2 id="小总结"><a href="#小总结" class="headerlink" title="小总结"></a>小总结</h2><h3 id="Vue中用this-router传递参数与取值："><a href="#Vue中用this-router传递参数与取值：" class="headerlink" title="Vue中用this.$router传递参数与取值："></a>Vue中用this.$router传递参数与取值：</h3><h4 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h4><p>传递参数 – this.$router.push({path: ‘ 路由 ‘, query: {key: value}})</p><p>参数取值 – this.$route.query.key</p><img src="/posts/63719fb9/image-20201122163910589.png" alt="image-20201122163910589" style="zoom:50%;"><img src="/posts/63719fb9/image-20201122163931996.png" alt="image-20201122163931996" style="zoom:50%;"><p>使用这种方式，传递参数会拼接在路由后面，出现在地址栏</p><h4 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h4><p>传递参数 – this.$router.push({name: ‘ 路由的name ‘, params: {key: value}})</p><p>参数取值 – this.$route.params.key</p><img src="/posts/63719fb9/image-20201122163652774.png" alt="image-20201122163652774" style="zoom:50%;"><img src="/posts/63719fb9/image-20201122163826307.png" alt="image-20201122163826307" style="zoom:50%;"><p>使用这种方式，参数不会拼接在路由后面，地址栏上看不到参数</p><p>由于动态路由也是传递params的，所以在 this.$router.push() 方法中 path不能和params一起使用，否则params将无效。需要用name来指定页面。</p><p>及通过路由配置的name属性访问</p><h3 id="router-push-后页面表单的数据渲染"><a href="#router-push-后页面表单的数据渲染" class="headerlink" title="router.push 后页面表单的数据渲染"></a>router.push 后页面表单的数据渲染</h3><pre class="line-numbers language-html"><code class="language-html"> created() {            //渲染数据            this.updateForm.id=this.$route.params.id;            this.updateForm.name=this.$route.params.name;            this.updateForm.author=this.$route.params.author;            console.log(this.$route.params.id);        }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解决跨域问题"><a href="#解决跨域问题" class="headerlink" title="解决跨域问题"></a>解决跨域问题</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@CrossOrigin</span>  <span class="token comment" spellcheck="true">//解决跨域问题</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"book"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BookController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> BookService service<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//添加图书   @RequestBody 主要用来接收前端传递给后端的json字符串中的数据的(请求体中的数据的)；</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"add"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Book book<span class="token punctuation">)</span><span class="token punctuation">{</span>        service<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//查询所有</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"findAll"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Book<span class="token operator">></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> service<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//根据id进行删除</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"delete"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span>String id<span class="token punctuation">)</span><span class="token punctuation">{</span>        service<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//修改图书</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"update"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Book book<span class="token punctuation">)</span><span class="token punctuation">{</span>        service<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>@RequestBody主要用来接收**前端传递给后端**的**json字符串中的数据的**(请求体中的数据的)；</code></p><p><code>@CrossOrigin  //解决跨域问题</code>   前端8080端口访问后端8989端口</p><h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><h4 id="主页"><a href="#主页" class="headerlink" title="主页"></a>主页</h4><img src="/posts/63719fb9/image-20201124101626853.png" alt="image-20201123235211996" style="zoom:50%;"><h4 id="按书名查找"><a href="#按书名查找" class="headerlink" title="按书名查找"></a>按书名查找</h4><img src="/posts/63719fb9/image-20201123235346117.png" alt="image-20201123235346117" style="zoom:50%;"><h4 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h4><img src="/posts/63719fb9/image-20201123235251417.png" alt="image-20201123235251417" style="zoom:50%;"><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><img src="/posts/63719fb9/image-20201122165345757.png" alt="image-20201122165345757" style="zoom:50%;"><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><img src="/posts/63719fb9/image-20201123235435089.png" alt="image-20201123235435089" style="zoom:50%;"><img src="/posts/63719fb9/image-20201123235450601.png" alt="image-20201123235450601" style="zoom:50%;"><h2 id="献上源码"><a href="#献上源码" class="headerlink" title="献上源码"></a>献上源码</h2><p><a href="https://github.com/fejxc/springBoot/tree/master/book-management" target="_blank" rel="noopener">后端源码</a></p><p><a href="https://github.com/fejxc/Vue-CLI/tree/master/book-management-eleui" target="_blank" rel="noopener">前端源码</a></p><h2 id="如何启动："><a href="#如何启动：" class="headerlink" title="如何启动："></a>如何启动：</h2><p>1）克隆项目：<code>git clone https://github.com/fejxc/springBoot/tree/master/book-management</code></p><p>2）将book.sql文件导入数据库 文件在项目的resources目录下</p><p>3）启动项目 默认端口是8989 访问 <code>localhost:8989</code></p><blockquote><p>说明：已经将前端代码打包加到后端，直接运行后端项目，即可。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo在new之后自动打开编辑器</title>
      <link href="posts/28d64edd/"/>
      <url>posts/28d64edd/</url>
      
        <content type="html"><![CDATA[<h2 id="1-在hexo安装目录新建scripts文件夹"><a href="#1-在hexo安装目录新建scripts文件夹" class="headerlink" title="1.在hexo安装目录新建scripts文件夹"></a>1.在hexo安装目录新建scripts文件夹</h2><p><img src="/posts/28d64edd/image-20201120102230623.png" alt="image-20201120102230623"></p><h2 id="2-在scripts文件下新建openNewFile-js文件"><a href="#2-在scripts文件下新建openNewFile-js文件" class="headerlink" title="2.在scripts文件下新建openNewFile.js文件"></a>2.在scripts文件下新建openNewFile.js文件</h2><p><img src="/posts/28d64edd/image-20201120102337656.png" alt="image-20201120102337656"></p><h2 id="3-在openNewFile-js里添加以下内容："><a href="#3-在openNewFile-js里添加以下内容：" class="headerlink" title="3.在openNewFile.js里添加以下内容："></a>3.在openNewFile.js里添加以下内容：</h2><h3 id="3-1mac用户"><a href="#3-1mac用户" class="headerlink" title="3.1mac用户"></a>3.1mac用户</h3><pre class="line-numbers language-JavaScript"><code class="language-JavaScript">var exec = require('child_process').exec;hexo.on('new', function(data){    exec('open -a "/Applications/Typora.app" ' + data.path);      ///Applications/Typora.app 这是替换成你markdown编辑器软件的安装路径});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2win用户"><a href="#3-2win用户" class="headerlink" title="3.2win用户"></a>3.2win用户</h3><pre class="line-numbers language-JavaScript"><code class="language-JavaScript">var spawn = require('child_process').spawn;hexo.on('new', function(data){    spawn('D:/Program Files/Typora/bin/Typora.exe ', [data.path]);  //D:/Program Files/Typora/bin/Typora.exe 你软件的安装的路径})<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-保存退出后，测试"><a href="#4-保存退出后，测试" class="headerlink" title="4.保存退出后，测试"></a>4.保存退出后，测试</h2><pre class="line-numbers language-bash"><code class="language-bash">hexo new <span class="token string">"textName"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>应该就会自动打开你的编辑器啦！</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web期中测试</title>
      <link href="posts/86e990/"/>
      <url>posts/86e990/</url>
      
        <content type="html"><![CDATA[<h3 id="三、完成下图“标签切换”。当鼠标移到到“国内新闻”，下面显示内容为“国内新闻”-模块，鼠标依次移动新闻模块，下面显示内容为对应模块内容。"><a href="#三、完成下图“标签切换”。当鼠标移到到“国内新闻”，下面显示内容为“国内新闻”-模块，鼠标依次移动新闻模块，下面显示内容为对应模块内容。" class="headerlink" title="三、完成下图“标签切换”。当鼠标移到到“国内新闻”，下面显示内容为“国内新闻”    模块，鼠标依次移动新闻模块，下面显示内容为对应模块内容。"></a>三、完成下图“标签切换”。当鼠标移到到“国内新闻”，下面显示内容为“国内新闻”    模块，鼠标依次移动新闻模块，下面显示内容为对应模块内容。</h3><p><strong>要求</strong>：鼠标移到标签时，字体颜色变为红色，新闻内容居中显示。</p><p><img src="/posts/86e990/image-20201119235338266.png" alt="image-20201119235338266"></p><h4 id="vue实现："><a href="#vue实现：" class="headerlink" title="vue实现："></a>vue实现：</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>news<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i in datas<span class="token punctuation">"</span></span> <span class="token attr-name">@mouseover.native</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showContent(i)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{i}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">120</span>px<span class="token punctuation">;</span><span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          {{name}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">"test02"</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">{</span>                datas<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"国际新闻"</span><span class="token punctuation">,</span><span class="token string">"国内新闻"</span><span class="token punctuation">,</span><span class="token string">"江西新闻"</span><span class="token punctuation">,</span><span class="token string">"井冈山大学"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                name<span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token punctuation">:</span><span class="token punctuation">{</span>            <span class="token function">showContent</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>i<span class="token punctuation">;</span>                <span class="token keyword">var</span> t <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"news"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">// t.innerText=i;</span>                t<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">,</span><span class="token string">"margin: 10px; color: #ff4d51"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="html实现："><a href="#html实现：" class="headerlink" title="html实现："></a>html实现：</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">            <span class="token selector">ul</span><span class="token punctuation">{</span>                <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>                <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">li</span><span class="token punctuation">{</span>                <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>                <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>                <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>                <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid black<span class="token punctuation">;</span>                <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">li<span class="token pseudo-class">:hover</span></span><span class="token punctuation">{</span>                <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector"><span class="token id">#news</span></span><span class="token punctuation">{</span>                <span class="token property">clear</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>                <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">356</span>px<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span>                <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid chocolate<span class="token punctuation">;</span>                <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>国际新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>国内新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>江西新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>井冈山大学<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>news<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>newson<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>国际新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>newson<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>国内新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>newson<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>江西新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>newson<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>井冈山大学新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token keyword">var</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> newsbody <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"newson"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>li<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                li<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onmouseenter <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> li<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                            newsbody<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">"block"</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                            newsbody<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">"none"</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//第一个for循环是用来绑定事件的，js的事件不能数组绑定（不能像jquery选中多个元素，绑定对象。只能单个对象绑定）</span>            <span class="token comment" spellcheck="true">//第二个for循环是用来判断当前是哪个对象。进行排他处理（也可以不写）。</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、移动电商首页中，“轮播图”是商家用来展示重要活动及爆款商品广告的重要界面，请完成以下交互效果："><a href="#四、移动电商首页中，“轮播图”是商家用来展示重要活动及爆款商品广告的重要界面，请完成以下交互效果：" class="headerlink" title="四、移动电商首页中，“轮播图”是商家用来展示重要活动及爆款商品广告的重要界面，请完成以下交互效果："></a>四、移动电商首页中，“轮播图”是商家用来展示重要活动及爆款商品广告的重要界面，请完成以下交互效果：</h3><p>（1）引入四张广告图片，默认显示第一张，其他隐藏；</p><p>（2）左右两边运用CSS制作“三角形”，用来切换轮播图；</p><p>（3）鼠标点击“右三角”，广告图会进入下一张，如当前是最后一张，点击时会进入第一张广告图；</p><p>（4）鼠标点击“左三角”，广告图会进入上一张，如当前是第一张，点击时会进入最后一张。</p><p><img src="/posts/86e990/image-20201119235406831.png" alt="image-20201119235406831"></p><h4 id="vue实现：-1"><a href="#vue实现：-1" class="headerlink" title="vue实现："></a>vue实现：</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>block<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demonstration<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-carousel</span> <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>click<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>720px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-carousel-item</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in imgs<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-image</span><span class="token style-attr language-css"><span class="token attr-name">          <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span></span><span class="token punctuation">"</span></span>          <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span>          <span class="token attr-name">fit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-image</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-carousel-item</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-carousel</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> homeImg1 <span class="token keyword">from</span> <span class="token string">"../assets/banner/banner1.jpg"</span><span class="token punctuation">;</span>  <span class="token keyword">import</span> homeImg2 <span class="token keyword">from</span> <span class="token string">"../assets/banner/banner2.jpg"</span><span class="token punctuation">;</span>  <span class="token keyword">import</span> homeImg3 <span class="token keyword">from</span> <span class="token string">"../assets/banner/banner3.jpg"</span><span class="token punctuation">;</span>  <span class="token keyword">import</span> homeImg4 <span class="token keyword">from</span> <span class="token string">"../assets/banner/banner4.jpg"</span><span class="token punctuation">;</span>    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">"test03"</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">{</span>                imgs<span class="token punctuation">:</span><span class="token punctuation">[</span>homeImg1<span class="token punctuation">,</span>homeImg2<span class="token punctuation">,</span>homeImg3<span class="token punctuation">,</span>homeImg4<span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="html实现：-1"><a href="#html实现：-1" class="headerlink" title="html实现："></a>html实现：</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>轮播图<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector"><span class="token id">#content</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">100</span>px auto<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">800</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">450</span>px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#banner</span> li img</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">800</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">450</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#banner</span> li</span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#radus</span></span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">45%</span><span class="token punctuation">;</span><span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#radus</span> li</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#radus</span> li a</span><span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">text-indent</span><span class="token punctuation">:</span>-<span class="token number">9999</span>px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#radus</span> <span class="token class">.on</span></span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#ff0000</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#left</span></span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">70</span>px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,-<span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-right-color</span><span class="token punctuation">:</span><span class="token hexcode">#F00</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#right</span></span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,-<span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-left-color</span><span class="token punctuation">:</span><span class="token hexcode">#F00</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/*三角形制作*/</span>        <span class="token selector"><span class="token id">#border</span></span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*width: 100px;*/</span>            <span class="token comment" spellcheck="true">/*height: 100px;*/</span>            <span class="token comment" spellcheck="true">/*border-top: 100px solid red;*/</span>            <span class="token comment" spellcheck="true">/*border-bottom: 100px solid yellow;*/</span>            <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,-<span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">border-right-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>banner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner/banner1.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner/banner2.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner/banner3.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner/banner4.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>on<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JavaScript:void(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JavaScript:void(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JavaScript:void(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JavaScript:void(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> banner <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"banner"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> bannerLi <span class="token operator">=</span> banner<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> radus <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"radus"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> radusLi <span class="token operator">=</span> radus<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> left <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"left"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span>    right <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"right"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//实现鼠标悬停时切换焦点图</span>        window<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> radusLi<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                radusLi<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>index <span class="token operator">=</span> i<span class="token punctuation">;</span>                radusLi<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onmouseover <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>radusLi<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        radusLi<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">"on"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>bannerLi<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        bannerLi<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    bannerLi<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"block"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//计时事件切换焦点图</span>            window<span class="token punctuation">.</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">function</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>flag <span class="token operator">==</span> radusLi<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span> flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>                radusLi<span class="token punctuation">[</span>flag<span class="token punctuation">]</span><span class="token punctuation">.</span>index <span class="token operator">=</span> flag<span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"radusLi[flag]= "</span><span class="token operator">+</span>radusLi<span class="token punctuation">[</span>flag<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>radusLi<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    radusLi<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                radusLi<span class="token punctuation">[</span>flag<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">"on"</span><span class="token punctuation">;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>bannerLi<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    bannerLi<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                bannerLi<span class="token punctuation">[</span>flag<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"block"</span><span class="token punctuation">;</span>                flag<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//点击向右箭头切换焦点图</span>            right<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>radusLi<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    radusLi<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>bannerLi<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    bannerLi<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">==</span> radusLi<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    radusLi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">"on"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    bannerLi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"block"</span><span class="token punctuation">;</span>                    y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                    radusLi<span class="token punctuation">[</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">"on"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    bannerLi<span class="token punctuation">[</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"block"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                y<span class="token operator">++</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//点击向左箭头切换焦点图</span>            left<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>radusLi<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    radusLi<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>bannerLi<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    bannerLi<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    radusLi<span class="token punctuation">[</span>radusLi<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">"on"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    bannerLi<span class="token punctuation">[</span>radusLi<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"block"</span><span class="token punctuation">;</span>                    y <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                    radusLi<span class="token punctuation">[</span>y<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">"on"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    bannerLi<span class="token punctuation">[</span>y<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"block"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                y<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/fejxc/Vue-CLI/tree/master/web_mid_term_examination" target="_blank" rel="noopener">vue实现源码</a></p><p><a href="https://github.com/fejxc/javaWeb-ICT/tree/master/%E6%9C%9F%E4%B8%AD%E8%80%83%E8%AF%95" target="_blank" rel="noopener">html实现源码</a></p>]]></content>
      
      
      <categories>
          
          <category> web实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiro</title>
      <link href="posts/c0010af8/"/>
      <url>posts/c0010af8/</url>
      
        <content type="html"><![CDATA[<h1 id="Shiro-实战教程"><a href="#Shiro-实战教程" class="headerlink" title="Shiro 实战教程"></a>Shiro 实战教程</h1><p><img src="/posts/c0010af8/image-20200520220106539.png" alt="image-20200520220106539"></p><h2 id="1-权限的管理"><a href="#1-权限的管理" class="headerlink" title="1.权限的管理"></a>1.权限的管理</h2><h3 id="1-1-什么是权限管理"><a href="#1-1-什么是权限管理" class="headerlink" title="1.1 什么是权限管理"></a>1.1 什么是权限管理</h3><p>基本上涉及到用户参与的系统都要进行权限管理，权限管理属于系统安全的范畴，权限管理实现<code>对用户访问系统的控制</code>，按照安全规则或者<a href="http://baike.baidu.com/view/160028.htm" target="_blank" rel="noopener">安全策略</a>控制用户可以访问而且只能访问自己被授权的资源。</p><p>权限管理包括用户<code>身份认证</code>和<code>授权</code>两部分，简称<code>认证授权</code>。对于需要访问控制的资源用户首先经过身份认证，认证通过后用户具有该资源的访问权限方可访问。</p><h3 id="1-2-什么是身份认证"><a href="#1-2-什么是身份认证" class="headerlink" title="1.2 什么是身份认证"></a>1.2 什么是身份认证</h3><p><code>身份认证</code>，就是判断一个用户是否为合法用户的处理过程。最常用的简单身份认证方式是系统通过核对用户输入的用户名和口令，看其是否与系统中存储的该用户的用户名和口令一致，来判断用户身份是否正确。对于采用<a href="http://baike.baidu.com/view/5628.htm" target="_blank" rel="noopener">指纹</a>等系统，则出示指纹；对于硬件Key等刷卡系统，则需要刷卡。</p><h3 id="1-3-什么是授权"><a href="#1-3-什么是授权" class="headerlink" title="1.3 什么是授权"></a>1.3 什么是授权</h3><p><code>授权，即访问控制</code>，控制谁能访问哪些资源。主体进行身份认证后需要分配权限方可访问系统的资源，对于某些资源没有权限是无法访问的</p><hr><h2 id="2-什么是shiro"><a href="#2-什么是shiro" class="headerlink" title="2.什么是shiro"></a>2.什么是shiro</h2><blockquote><p><strong>Apache Shiro™</strong> is a powerful and easy-to-use Java security framework that performs authentication, authorization, cryptography, and session management. With Shiro’s easy-to-understand API, you can quickly and easily secure any application – from the smallest mobile applications to the largest web and enterprise applications.  </p><p>Shiro 是一个功能强大且易于使用的Java安全框架，它执行身份验证、授权、加密和会话管理。使用Shiro易于理解的API，您可以快速轻松地保护任何应用程序—从最小的移动应用程序到最大的web和企业应用程序。</p></blockquote><p><code>Shiro是apache旗下一个开源框架，它将软件系统的安全认证相关的功能抽取出来，实现用户身份认证，权限授权、加密、会话管理等功能，组成了一个通用的安全认证框架。</code></p><hr><h2 id="3-shiro的核心架构"><a href="#3-shiro的核心架构" class="headerlink" title="3.shiro的核心架构"></a>3.shiro的核心架构</h2><p><img src="/posts/c0010af8/image-20200520220413190.png" alt="image-20200520220413190"></p><h3 id="3-1-Subject"><a href="#3-1-Subject" class="headerlink" title="3.1 Subject"></a>3.1 Subject</h3><p><code>Subject即主体</code>，外部应用与subject进行交互，subject记录了当前操作用户，将用户的概念理解为当前操作的主体，可能是一个通过浏览器请求的用户，也可能是一个运行的程序。    Subject在shiro中是一个接口，接口中定义了很多认证授相关的方法，外部程序通过subject进行认证授，而subject是通过SecurityManager安全管理器进行认证授权</p><h3 id="3-2-SecurityManager"><a href="#3-2-SecurityManager" class="headerlink" title="3.2 SecurityManager"></a>3.2 SecurityManager</h3><p><code>SecurityManager即安全管理器</code>，对全部的subject进行安全管理，它是shiro的核心，负责对所有的subject进行安全管理。通过SecurityManager可以完成subject的认证、授权等，实质上SecurityManager是通过Authenticator进行认证，通过Authorizer进行授权，通过SessionManager进行会话管理等。</p><p><code>SecurityManager是一个接口，继承了Authenticator, Authorizer, SessionManager这三个接口。</code></p><h3 id="3-3-Authenticator"><a href="#3-3-Authenticator" class="headerlink" title="3.3 Authenticator"></a>3.3 Authenticator</h3><p><code>Authenticator即认证器</code>，对用户身份进行认证，Authenticator是一个接口，shiro提供ModularRealmAuthenticator实现类，通过ModularRealmAuthenticator基本上可以满足大多数需求，也可以自定义认证器。</p><h3 id="3-4-Authorizer"><a href="#3-4-Authorizer" class="headerlink" title="3.4 Authorizer"></a>3.4 Authorizer</h3><p><code>Authorizer即授权器</code>，用户通过认证器认证通过，在访问功能时需要通过授权器判断用户是否有此功能的操作权限。</p><h3 id="3-5-Realm"><a href="#3-5-Realm" class="headerlink" title="3.5 Realm"></a>3.5 Realm</h3><p><code>Realm即领域</code>，相当于datasource数据源，securityManager进行安全认证需要通过Realm获取用户权限数据，比如：如果用户身份数据在数据库那么realm就需要从数据库获取用户身份信息。</p><ul><li>​ 注意：不要把realm理解成只是从数据源取数据，在realm中还有认证授权校验的相关的代码。</li></ul><h3 id="3-6-SessionManager"><a href="#3-6-SessionManager" class="headerlink" title="3.6 SessionManager"></a>3.6 SessionManager</h3><p><code>sessionManager即会话管理</code>，shiro框架定义了一套会话管理，它不依赖web容器的session，所以shiro可以使用在非web应用上，也可以将分布式应用的会话集中在一点管理，此特性可使它实现单点登录。</p><h3 id="3-7-SessionDAO"><a href="#3-7-SessionDAO" class="headerlink" title="3.7 SessionDAO"></a>3.7 SessionDAO</h3><p><code>SessionDAO即会话dao</code>，是对session会话操作的一套接口，比如要将session存储到数据库，可以通过jdbc将会话存储到数据库。</p><h3 id="3-8-CacheManager"><a href="#3-8-CacheManager" class="headerlink" title="3.8 CacheManager"></a>3.8 CacheManager</h3><p><code>CacheManager即缓存管理</code>，将用户权限数据存储在缓存，这样可以提高性能。</p><h3 id="3-9-Cryptography"><a href="#3-9-Cryptography" class="headerlink" title="3.9 Cryptography"></a>3.9 Cryptography</h3><p>​   <code>Cryptography即密码管理</code>，shiro提供了一套加密/解密的组件，方便开发。比如提供常用的散列、加/解密等功能。</p><hr><h2 id="4-shiro中的认证"><a href="#4-shiro中的认证" class="headerlink" title="4. shiro中的认证"></a>4. shiro中的认证</h2><h3 id="4-1-认证"><a href="#4-1-认证" class="headerlink" title="4.1 认证"></a>4.1 认证</h3><p>身份认证，就是判断一个用户是否为合法用户的处理过程。最常用的简单身份认证方式是系统通过核对用户输入的用户名和口令，看其是否与系统中存储的该用户的用户名和口令一致，来判断用户身份是否正确。</p><h3 id="4-2-shiro中认证的关键对象"><a href="#4-2-shiro中认证的关键对象" class="headerlink" title="4.2 shiro中认证的关键对象"></a>4.2 shiro中认证的关键对象</h3><ul><li><strong>Subject：主体</strong></li></ul><p>访问系统的用户，主体可以是用户、程序等，进行认证的都称为主体； </p><ul><li><strong>Principal：身份信息</strong></li></ul><p>是主体（subject）进行身份认证的标识，标识必须具有<code>唯一性</code>，如用户名、手机号、邮箱地址等，一个主体可以有多个身份，但是必须有一个主身份（Primary Principal）。</p><ul><li><strong>credential：凭证信息</strong></li></ul><p>是只有主体自己知道的安全信息，如密码、证书等。</p><h3 id="4-3-认证流程"><a href="#4-3-认证流程" class="headerlink" title="4.3 认证流程"></a>4.3 认证流程</h3><p><img src="/posts/c0010af8/image-20200521204452288.png" alt="image-20200521204452288"></p><h3 id="4-4-认证的开发"><a href="#4-4-认证的开发" class="headerlink" title="4.4 认证的开发"></a>4.4 认证的开发</h3><h5 id="1-创建项目并引入依赖"><a href="#1-创建项目并引入依赖" class="headerlink" title="1. 创建项目并引入依赖"></a>1. 创建项目并引入依赖</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.shiro<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>shiro-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-引入shiro配置文件并加入如下配置"><a href="#2-引入shiro配置文件并加入如下配置" class="headerlink" title="2. 引入shiro配置文件并加入如下配置"></a>2. 引入shiro配置文件并加入如下配置</h5><pre class="line-numbers language-ini"><code class="language-ini"><span class="token selector">[users]</span><span class="token constant">xiaochen</span><span class="token attr-value"><span class="token punctuation">=</span>123</span><span class="token constant">zhangsan</span><span class="token attr-value"><span class="token punctuation">=</span>456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200521205219719.png" alt="image-20200521205219719"></p><h5 id="3-开发认证代码"><a href="#3-开发认证代码" class="headerlink" title="3.开发认证代码"></a>3.开发认证代码</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestAuthenticator</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建securityManager</span>        DefaultSecurityManager defaultSecurityManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        defaultSecurityManager<span class="token punctuation">.</span><span class="token function">setRealm</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IniRealm</span><span class="token punctuation">(</span><span class="token string">"classpath:shiro.ini"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将安装工具类中设置默认安全管理器</span>        SecurityUtils<span class="token punctuation">.</span><span class="token function">setSecurityManager</span><span class="token punctuation">(</span>defaultSecurityManager<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取主体对象</span>        Subject subject <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建token令牌</span>        UsernamePasswordToken token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordToken</span><span class="token punctuation">(</span><span class="token string">"xiaochen1"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            subject<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用户登录</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录成功~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownAccountException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名错误!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IncorrectCredentialsException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码错误!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>DisabledAccountException（帐号被禁用）</p></li><li><p>LockedAccountException（帐号被锁定）</p></li><li><p>ExcessiveAttemptsException（登录失败次数过多）</p></li><li><p>ExpiredCredentialsException（凭证过期）等</p></li></ul><hr><h3 id="4-5-自定义Realm"><a href="#4-5-自定义Realm" class="headerlink" title="4.5 自定义Realm"></a>4.5 自定义Realm</h3><p>上边的程序使用的是Shiro自带的IniRealm，IniRealm从ini配置文件中读取用户的信息，大部分情况下需要从系统的数据库中读取用户信息，所以需要自定义realm。</p><h5 id="1-shiro提供的Realm"><a href="#1-shiro提供的Realm" class="headerlink" title="1.shiro提供的Realm"></a>1.shiro提供的Realm</h5><p><img src="/posts/c0010af8/image-20200521212728541.png" alt="image-20200521212728541"></p><h5 id="2-根据认证源码认证使用的是SimpleAccountRealm"><a href="#2-根据认证源码认证使用的是SimpleAccountRealm" class="headerlink" title="2.根据认证源码认证使用的是SimpleAccountRealm"></a>2.根据认证源码认证使用的是SimpleAccountRealm</h5><p><img src="/posts/c0010af8/image-20200521213451998.png" alt="image-20200521213451998"></p><p><code>SimpleAccountRealm的部分源码中有两个方法一个是 认证 一个是 授权</code>,</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleAccountRealm</span> <span class="token keyword">extends</span> <span class="token class-name">AuthorizingRealm</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//.......省略</span>    <span class="token keyword">protected</span> AuthenticationInfo <span class="token function">doGetAuthenticationInfo</span><span class="token punctuation">(</span>AuthenticationToken token<span class="token punctuation">)</span> <span class="token keyword">throws</span> AuthenticationException <span class="token punctuation">{</span>        UsernamePasswordToken upToken <span class="token operator">=</span> <span class="token punctuation">(</span>UsernamePasswordToken<span class="token punctuation">)</span> token<span class="token punctuation">;</span>        SimpleAccount account <span class="token operator">=</span> <span class="token function">getUser</span><span class="token punctuation">(</span>upToken<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>account <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">isLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">LockedAccountException</span><span class="token punctuation">(</span><span class="token string">"Account ["</span> <span class="token operator">+</span> account <span class="token operator">+</span> <span class="token string">"] is locked."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">isCredentialsExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                String msg <span class="token operator">=</span> <span class="token string">"The credentials for account ["</span> <span class="token operator">+</span> account <span class="token operator">+</span> <span class="token string">"] are expired"</span><span class="token punctuation">;</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ExpiredCredentialsException</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> account<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> AuthorizationInfo <span class="token function">doGetAuthorizationInfo</span><span class="token punctuation">(</span>PrincipalCollection principals<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String username <span class="token operator">=</span> <span class="token function">getUsername</span><span class="token punctuation">(</span>principals<span class="token punctuation">)</span><span class="token punctuation">;</span>        USERS_LOCK<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            USERS_LOCK<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-自定义realm"><a href="#3-自定义realm" class="headerlink" title="3.自定义realm"></a>3.自定义realm</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 自定义realm */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomerRealm</span> <span class="token keyword">extends</span> <span class="token class-name">AuthorizingRealm</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//认证方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> AuthorizationInfo <span class="token function">doGetAuthorizationInfo</span><span class="token punctuation">(</span>PrincipalCollection principals<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//授权方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> AuthenticationInfo <span class="token function">doGetAuthenticationInfo</span><span class="token punctuation">(</span>AuthenticationToken token<span class="token punctuation">)</span> <span class="token keyword">throws</span> AuthenticationException <span class="token punctuation">{</span>        String principal <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> token<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"xiaochen"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>principal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SimpleAuthenticationInfo</span><span class="token punctuation">(</span>principal<span class="token punctuation">,</span><span class="token string">"123"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-使用自定义Realm认证"><a href="#4-使用自定义Realm认证" class="headerlink" title="4.使用自定义Realm认证"></a>4.使用自定义Realm认证</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestAuthenticatorCusttomerRealm</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建securityManager</span>        DefaultSecurityManager defaultSecurityManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//IniRealm realm = new IniRealm("classpath:shiro.ini");</span>        <span class="token comment" spellcheck="true">//设置为自定义realm获取认证数据</span>        defaultSecurityManager<span class="token punctuation">.</span><span class="token function">setRealm</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CustomerRealm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将安装工具类中设置默认安全管理器</span>        SecurityUtils<span class="token punctuation">.</span><span class="token function">setSecurityManager</span><span class="token punctuation">(</span>defaultSecurityManager<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取主体对象</span>        Subject subject <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建token令牌</span>        UsernamePasswordToken token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordToken</span><span class="token punctuation">(</span><span class="token string">"xiaochen"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            subject<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用户登录</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录成功~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownAccountException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名错误!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IncorrectCredentialsException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码错误!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-6-使用MD5和Salt"><a href="#4-6-使用MD5和Salt" class="headerlink" title="4.6 使用MD5和Salt"></a>4.6 使用MD5和Salt</h3><blockquote><p>实际应用是将盐和散列后的值存在数据库中，自动realm从数据库取出盐和加密后的值由shiro完成密码校验。</p></blockquote><h5 id="1-自定义md5-salt的realm"><a href="#1-自定义md5-salt的realm" class="headerlink" title="1.自定义md5+salt的realm"></a>1.自定义md5+salt的realm</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 自定义md5+salt realm */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomerRealm</span> <span class="token keyword">extends</span> <span class="token class-name">AuthorizingRealm</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//认证方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> AuthorizationInfo <span class="token function">doGetAuthorizationInfo</span><span class="token punctuation">(</span>PrincipalCollection principals<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//授权方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> AuthenticationInfo <span class="token function">doGetAuthenticationInfo</span><span class="token punctuation">(</span>AuthenticationToken token<span class="token punctuation">)</span> <span class="token keyword">throws</span> AuthenticationException <span class="token punctuation">{</span>        String principal <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> token<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"xiaochen"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>principal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            String password <span class="token operator">=</span> <span class="token string">"3c88b338102c1a343bcb88cd3878758e"</span><span class="token punctuation">;</span>            String salt <span class="token operator">=</span> <span class="token string">"Q4F%"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SimpleAuthenticationInfo</span><span class="token punctuation">(</span>principal<span class="token punctuation">,</span>password<span class="token punctuation">,</span>                                                 ByteSource<span class="token punctuation">.</span>Util<span class="token punctuation">.</span><span class="token function">bytes</span><span class="token punctuation">(</span>salt<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-使用md5-salt-认证"><a href="#2-使用md5-salt-认证" class="headerlink" title="2.使用md5 + salt 认证"></a>2.使用md5 + salt 认证</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestAuthenticatorCusttomerRealm</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建securityManager</span>        DefaultSecurityManager defaultSecurityManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//IniRealm realm = new IniRealm("classpath:shiro.ini");</span>        <span class="token comment" spellcheck="true">//设置为自定义realm获取认证数据</span>        CustomerRealm customerRealm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomerRealm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置md5加密</span>        HashedCredentialsMatcher credentialsMatcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashedCredentialsMatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        credentialsMatcher<span class="token punctuation">.</span><span class="token function">setHashAlgorithmName</span><span class="token punctuation">(</span><span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        credentialsMatcher<span class="token punctuation">.</span><span class="token function">setHashIterations</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置散列次数</span>        customerRealm<span class="token punctuation">.</span><span class="token function">setCredentialsMatcher</span><span class="token punctuation">(</span>credentialsMatcher<span class="token punctuation">)</span><span class="token punctuation">;</span>        defaultSecurityManager<span class="token punctuation">.</span><span class="token function">setRealm</span><span class="token punctuation">(</span>customerRealm<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将安装工具类中设置默认安全管理器</span>        SecurityUtils<span class="token punctuation">.</span><span class="token function">setSecurityManager</span><span class="token punctuation">(</span>defaultSecurityManager<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取主体对象</span>        Subject subject <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建token令牌</span>        UsernamePasswordToken token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordToken</span><span class="token punctuation">(</span><span class="token string">"xiaochen"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            subject<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用户登录</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录成功~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownAccountException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名错误!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IncorrectCredentialsException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码错误!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="5-shiro中的授权"><a href="#5-shiro中的授权" class="headerlink" title="5. shiro中的授权"></a>5. shiro中的授权</h2><h3 id="5-1-授权"><a href="#5-1-授权" class="headerlink" title="5.1 授权"></a>5.1 授权</h3><p>授权，即访问控制，控制谁能访问哪些资源。主体进行身份认证后需要分配权限方可访问系统的资源，对于某些资源没有权限是无法访问的。</p><h3 id="5-2-关键对象"><a href="#5-2-关键对象" class="headerlink" title="5.2 关键对象"></a>5.2 关键对象</h3><p><strong>授权可简单理解为who对what(which)进行How操作：</strong></p><p><code>Who，即主体（Subject）</code>，主体需要访问系统中的资源。</p><p><code>What，即资源（Resource)</code>，如系统菜单、页面、按钮、类方法、系统商品信息等。资源包括<code>资源类型</code>和<code>资源实例</code>，比如<code>商品信息为资源类型</code>，类型为t01的商品为<code>资源实例</code>，编号为001的商品信息也属于资源实例。</p><p><code>How，权限/许可（Permission)</code>，规定了主体对资源的操作许可，权限离开资源没有意义，如用户查询权限、用户添加权限、某个类方法的调用权限、编号为001用户的修改权限等，通过权限可知主体对哪些资源都有哪些操作许可。</p><h3 id="5-3-授权流程"><a href="#5-3-授权流程" class="headerlink" title="5.3 授权流程"></a>5.3 授权流程</h3><p><img src="/posts/c0010af8/image-20200521230705964.png" alt="image-20200521230705964"></p><h3 id="5-4-授权方式"><a href="#5-4-授权方式" class="headerlink" title="5.4 授权方式"></a>5.4 授权方式</h3><ul><li><p><strong>基于角色的访问控制</strong></p><ul><li><p>RBAC基于角色的访问控制（Role-Based Access Control）是以角色为中心进行访问控制</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span>subject<span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">//操作什么资源</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><strong>基于资源的访问控制</strong></p><ul><li><p>RBAC基于资源的访问控制（Resource-Based Access Control）是以资源为中心进行访问控制</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span>subject<span class="token punctuation">.</span><span class="token function">isPermission</span><span class="token punctuation">(</span><span class="token string">"user:update:01"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//资源实例</span>  <span class="token comment" spellcheck="true">//对01用户进行修改</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span>subject<span class="token punctuation">.</span><span class="token function">isPermission</span><span class="token punctuation">(</span><span class="token string">"user:update:*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//资源类型</span>  <span class="token comment" spellcheck="true">//对01用户进行修改</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h3 id="5-5-权限字符串"><a href="#5-5-权限字符串" class="headerlink" title="5.5 权限字符串"></a>5.5 权限字符串</h3><p>​       权限字符串的规则是：<strong>资源标识符：操作：资源实例标识符</strong>，意思是对哪个资源的哪个实例具有什么操作，“:”是资源/操作/实例的分割符，权限字符串也可以使用*通配符。</p><p>例子：</p><ul><li>用户创建权限：user:create，或user:create:*</li><li>用户修改实例001的权限：user:update:001</li><li>用户实例001的所有权限：user:*：001</li></ul><h3 id="5-6-shiro中授权编程实现方式"><a href="#5-6-shiro中授权编程实现方式" class="headerlink" title="5.6 shiro中授权编程实现方式"></a>5.6 shiro中授权编程实现方式</h3><ul><li><p><strong>编程式</strong></p><pre class="line-numbers language-java"><code class="language-java">Subject subject <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>subject<span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span>“admin”<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//有权限</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//无权限</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>注解式</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@RequiresRoles</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//有权限</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>标签式</strong></p><pre class="line-numbers language-jsp"><code class="language-jsp">JSP/GSP 标签：在JSP/GSP 页面通过相应的标签完成：<shiro:hasRole name="admin">  <!— 有权限—></shiro:hasRole>注意: Thymeleaf 中使用shiro需要额外集成!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li></li></ul><h3 id="5-7-开发授权"><a href="#5-7-开发授权" class="headerlink" title="5.7 开发授权"></a>5.7 开发授权</h3><h5 id="1-realm的实现"><a href="#1-realm的实现" class="headerlink" title="1.realm的实现"></a>1.realm的实现</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomerRealm</span> <span class="token keyword">extends</span> <span class="token class-name">AuthorizingRealm</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//认证方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> AuthorizationInfo <span class="token function">doGetAuthorizationInfo</span><span class="token punctuation">(</span>PrincipalCollection principals<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String primaryPrincipal <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> principals<span class="token punctuation">.</span><span class="token function">getPrimaryPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"primaryPrincipal = "</span> <span class="token operator">+</span> primaryPrincipal<span class="token punctuation">)</span><span class="token punctuation">;</span>        SimpleAuthorizationInfo simpleAuthorizationInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleAuthorizationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        simpleAuthorizationInfo<span class="token punctuation">.</span><span class="token function">addRole</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        simpleAuthorizationInfo<span class="token punctuation">.</span><span class="token function">addStringPermission</span><span class="token punctuation">(</span><span class="token string">"user:update:*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        simpleAuthorizationInfo<span class="token punctuation">.</span><span class="token function">addStringPermission</span><span class="token punctuation">(</span><span class="token string">"product:*:*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> simpleAuthorizationInfo<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//授权方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> AuthenticationInfo <span class="token function">doGetAuthenticationInfo</span><span class="token punctuation">(</span>AuthenticationToken token<span class="token punctuation">)</span> <span class="token keyword">throws</span> AuthenticationException <span class="token punctuation">{</span>        String principal <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> token<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"xiaochen"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>principal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            String password <span class="token operator">=</span> <span class="token string">"3c88b338102c1a343bcb88cd3878758e"</span><span class="token punctuation">;</span>            String salt <span class="token operator">=</span> <span class="token string">"Q4F%"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SimpleAuthenticationInfo</span><span class="token punctuation">(</span>principal<span class="token punctuation">,</span>password<span class="token punctuation">,</span>                                                 ByteSource<span class="token punctuation">.</span>Util<span class="token punctuation">.</span><span class="token function">bytes</span><span class="token punctuation">(</span>salt<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-授权"><a href="#2-授权" class="headerlink" title="2.授权"></a>2.授权</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestAuthenticatorCusttomerRealm</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建securityManager</span>        DefaultSecurityManager defaultSecurityManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//IniRealm realm = new IniRealm("classpath:shiro.ini");</span>        <span class="token comment" spellcheck="true">//设置为自定义realm获取认证数据</span>        CustomerRealm customerRealm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomerRealm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置md5加密</span>        HashedCredentialsMatcher credentialsMatcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashedCredentialsMatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        credentialsMatcher<span class="token punctuation">.</span><span class="token function">setHashAlgorithmName</span><span class="token punctuation">(</span><span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        credentialsMatcher<span class="token punctuation">.</span><span class="token function">setHashIterations</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置散列次数</span>        customerRealm<span class="token punctuation">.</span><span class="token function">setCredentialsMatcher</span><span class="token punctuation">(</span>credentialsMatcher<span class="token punctuation">)</span><span class="token punctuation">;</span>        defaultSecurityManager<span class="token punctuation">.</span><span class="token function">setRealm</span><span class="token punctuation">(</span>customerRealm<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将安装工具类中设置默认安全管理器</span>        SecurityUtils<span class="token punctuation">.</span><span class="token function">setSecurityManager</span><span class="token punctuation">(</span>defaultSecurityManager<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取主体对象</span>        Subject subject <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建token令牌</span>        UsernamePasswordToken token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordToken</span><span class="token punctuation">(</span><span class="token string">"xiaochen"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            subject<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用户登录</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录成功~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownAccountException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名错误!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IncorrectCredentialsException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码错误!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//认证通过</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>subject<span class="token punctuation">.</span><span class="token function">isAuthenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//基于角色权限管理</span>            <span class="token keyword">boolean</span> admin <span class="token operator">=</span> subject<span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>admin<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">boolean</span> permitted <span class="token operator">=</span> subject<span class="token punctuation">.</span><span class="token function">isPermitted</span><span class="token punctuation">(</span><span class="token string">"product:create:001"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>permitted<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-整合SpringBoot项目实战"><a href="#6-整合SpringBoot项目实战" class="headerlink" title="6.整合SpringBoot项目实战"></a>6.整合SpringBoot项目实战</h2><h3 id="6-0-整合思路"><a href="#6-0-整合思路" class="headerlink" title="6.0 整合思路"></a>6.0 整合思路</h3><p><img src="/posts/c0010af8/image-20200525185630463.png" alt="image-20200525185630463"></p><h3 id="6-1-创建springboot项目"><a href="#6-1-创建springboot项目" class="headerlink" title="6.1 创建springboot项目"></a>6.1 创建springboot项目</h3><p><img src="/posts/c0010af8/image-20200523100842032.png" alt="image-20200523100842032"></p><h3 id="6-2-引入shiro依赖"><a href="#6-2-引入shiro依赖" class="headerlink" title="6.2 引入shiro依赖"></a>6.2 引入shiro依赖</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.shiro<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>shiro-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-3-配置shiro环境"><a href="#6-3-配置shiro环境" class="headerlink" title="6.3 配置shiro环境"></a>6.3 配置shiro环境</h3><h5 id="0-创建配置类"><a href="#0-创建配置类" class="headerlink" title="0.创建配置类"></a>0.创建配置类</h5><p><img src="/posts/c0010af8/image-20200523101256446.png" alt="image-20200523101256446"></p><h5 id="1-配置shiroFilterFactoryBean"><a href="#1-配置shiroFilterFactoryBean" class="headerlink" title="1.配置shiroFilterFactoryBean"></a>1.配置shiroFilterFactoryBean</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> ShiroFilterFactoryBean <span class="token function">getShiroFilterFactoryBean</span><span class="token punctuation">(</span>SecurityManager securityManager<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//创建shiro的filter</span>  ShiroFilterFactoryBean shiroFilterFactoryBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ShiroFilterFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//注入安全管理器</span>  shiroFilterFactoryBean<span class="token punctuation">.</span><span class="token function">setSecurityManager</span><span class="token punctuation">(</span>securityManager<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> shiroFilterFactoryBean<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-配置WebSecurityManager"><a href="#2-配置WebSecurityManager" class="headerlink" title="2.配置WebSecurityManager"></a>2.配置WebSecurityManager</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> DefaultWebSecurityManager <span class="token function">getSecurityManager</span><span class="token punctuation">(</span>Realm realm<span class="token punctuation">)</span><span class="token punctuation">{</span>  DefaultWebSecurityManager defaultWebSecurityManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultWebSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  defaultWebSecurityManager<span class="token punctuation">.</span><span class="token function">setRealm</span><span class="token punctuation">(</span>realm<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> defaultWebSecurityManager<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-创建自定义realm"><a href="#3-创建自定义realm" class="headerlink" title="3.创建自定义realm"></a>3.创建自定义realm</h5><p><img src="/posts/c0010af8/image-20200523101402213.png" alt="image-20200523101402213"></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomerRealm</span> <span class="token keyword">extends</span> <span class="token class-name">AuthorizingRealm</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//处理授权</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> AuthorizationInfo <span class="token function">doGetAuthorizationInfo</span><span class="token punctuation">(</span>PrincipalCollection principals<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//处理认证</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> AuthenticationInfo <span class="token function">doGetAuthenticationInfo</span><span class="token punctuation">(</span>AuthenticationToken token<span class="token punctuation">)</span> <span class="token keyword">throws</span>                                                                                                                                             AuthenticationException <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-配置自定义realm"><a href="#4-配置自定义realm" class="headerlink" title="4.配置自定义realm"></a>4.配置自定义realm</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//创建自定义realm</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> Realm <span class="token function">getRealm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CustomerRealm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="5-编写控制器跳转至index-html"><a href="#5-编写控制器跳转至index-html" class="headerlink" title="5.编写控制器跳转至index.html"></a>5.编写控制器跳转至index.html</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"index"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"跳转至主页"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200523101733157.png" alt="image-20200523101733157"></p><p><img src="/posts/c0010af8/image-20200523101857528.png" alt="image-20200523101857528"></p><h5 id="6-启动springboot应用访问index"><a href="#6-启动springboot应用访问index" class="headerlink" title="6.启动springboot应用访问index"></a>6.启动springboot应用访问index</h5><p><img src="/posts/c0010af8/image-20200523101955121.png" alt="image-20200523101955121"></p><ul><li>注意:<ul><li><strong>默认在配置好shiro环境后默认环境中没有对项目中任何资源进行权限控制,所有现在项目中所有资源都可以通过路径访问</strong></li></ul></li></ul><h5 id="7-加入权限控制"><a href="#7-加入权限控制" class="headerlink" title="7.加入权限控制"></a>7.加入权限控制</h5><ul><li><p>修改ShiroFilterFactoryBean配置</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//注入安全管理器</span>shiroFilterFactoryBean<span class="token punctuation">.</span><span class="token function">setSecurityManager</span><span class="token punctuation">(</span>securityManager<span class="token punctuation">)</span><span class="token punctuation">;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">></span> map <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">,</span><span class="token string">"authc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//配置认证和授权规则</span>shiroFilterFactoryBean<span class="token punctuation">.</span><span class="token function">setFilterChainDefinitionMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200523102303320.png" alt="image-20200523102303320"></p><ul><li><strong>/**</strong> 代表拦截项目中一切资源  <strong>authc</strong> 代表shiro中的一个filter的别名,详细内容看文档的shirofilter列表</li></ul></li></ul><h5 id="8-重启项目访问查看"><a href="#8-重启项目访问查看" class="headerlink" title="8.重启项目访问查看"></a>8.重启项目访问查看</h5><p><img src="/posts/c0010af8/image-20200523102831750.png" alt="image-20200523102831750"></p><h3 id="6-4-常见过滤器"><a href="#6-4-常见过滤器" class="headerlink" title="6.4 常见过滤器"></a>6.4 常见过滤器</h3><ul><li>注意: <strong>shiro提供和多个默认的过滤器，我们可以用这些过滤器来配置控制指定url的权限：</strong></li></ul><table><thead><tr><th>配置缩写</th><th>对应的过滤器</th><th>功能</th></tr></thead><tbody><tr><td>anon</td><td>AnonymousFilter</td><td>指定url可以匿名访问</td></tr><tr><td>authc</td><td>FormAuthenticationFilter</td><td>指定url需要form表单登录，默认会从请求中获取<code>username</code>、<code>password</code>,<code>rememberMe</code>等参数并尝试登录，如果登录不了就会跳转到loginUrl配置的路径。我们也可以用这个过滤器做默认的登录逻辑，但是一般都是我们自己在控制器写登录逻辑的，自己写的话出错返回的信息都可以定制嘛。</td></tr><tr><td>authcBasic</td><td>BasicHttpAuthenticationFilter</td><td>指定url需要basic登录</td></tr><tr><td>logout</td><td>LogoutFilter</td><td>登出过滤器，配置指定url就可以实现退出功能，非常方便</td></tr><tr><td>noSessionCreation</td><td>NoSessionCreationFilter</td><td>禁止创建会话</td></tr><tr><td>perms</td><td>PermissionsAuthorizationFilter</td><td>需要指定权限才能访问</td></tr><tr><td>port</td><td>PortFilter</td><td>需要指定端口才能访问</td></tr><tr><td>rest</td><td>HttpMethodPermissionFilter</td><td>将http请求方法转化成相应的动词来构造一个权限字符串，这个感觉意义不大，有兴趣自己看源码的注释</td></tr><tr><td>roles</td><td>RolesAuthorizationFilter</td><td>需要指定角色才能访问</td></tr><tr><td>ssl</td><td>SslFilter</td><td>需要https请求才能访问</td></tr><tr><td>user</td><td>UserFilter</td><td>需要已登录或“记住我”的用户才能访问</td></tr></tbody></table><h3 id="6-5-认证实现"><a href="#6-5-认证实现" class="headerlink" title="6.5 认证实现"></a>6.5 认证实现</h3><h5 id="1-在login-jsp中开发认证界面"><a href="#1-在login-jsp中开发认证界面" class="headerlink" title="1. 在login.jsp中开发认证界面"></a>1. 在login.jsp中开发认证界面</h5><p><img src="/posts/c0010af8/image-20200526082345776.png" alt="image-20200526082345776"></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageContext.request.contextPath}/user/login<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>  密码  : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>登录<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-开发controller"><a href="#2-开发controller" class="headerlink" title="2. 开发controller"></a>2. 开发controller</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/**    * 用来处理身份认证    * @param username    * @param password    * @return    */</span>  <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"login"</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> String <span class="token function">login</span><span class="token punctuation">(</span>String username<span class="token punctuation">,</span>String password<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//获取主体对象</span>    Subject subject <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>      subject<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UsernamePasswordToken</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span>  <span class="token string">"redirect:/index.jsp"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownAccountException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名错误!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IncorrectCredentialsException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码错误!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token string">"redirect:/login.jsp"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>在认证过程中使用subject.login进行认证</strong></li></ul><h5 id="3-开发realm中返回静态数据-未连接数据库"><a href="#3-开发realm中返回静态数据-未连接数据库" class="headerlink" title="3.开发realm中返回静态数据(未连接数据库)"></a>3.开发realm中返回静态数据(未连接数据库)</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> AuthenticationInfo <span class="token function">doGetAuthenticationInfo</span><span class="token punctuation">(</span>AuthenticationToken token<span class="token punctuation">)</span> <span class="token keyword">throws</span> AuthenticationException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=========================="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String principal <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> token<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"xiaochen"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>principal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SimpleAuthenticationInfo</span><span class="token punctuation">(</span>principal<span class="token punctuation">,</span><span class="token string">"123"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-启动项目以realm中定义静态数据进行认证"><a href="#4-启动项目以realm中定义静态数据进行认证" class="headerlink" title="4.启动项目以realm中定义静态数据进行认证"></a>4.启动项目以realm中定义静态数据进行认证</h5><p><img src="/posts/c0010af8/image-20200526082550343.png" alt="image-20200526082550343"></p><p><img src="/posts/c0010af8/image-20200526082639318.png" alt="image-20200526082639318"></p><p><img src="/posts/c0010af8/image-20200526082620621.png" alt="image-20200526082620621"></p><ul><li><strong>认证功能没有md5和随机盐的认证就实现啦</strong></li></ul><h3 id="6-6-退出认证"><a href="#6-6-退出认证" class="headerlink" title="6.6 退出认证"></a>6.6 退出认证</h3><h5 id="1-开发页面退出连接"><a href="#1-开发页面退出连接" class="headerlink" title="1.开发页面退出连接"></a>1.开发页面退出连接</h5><p><img src="/posts/c0010af8/image-20200526082851800.png" alt="image-20200526082851800"></p><h5 id="2-开发controller-1"><a href="#2-开发controller-1" class="headerlink" title="2.开发controller"></a>2.开发controller</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/**    * 退出登录    *    */</span>  <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"logout"</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> String <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Subject subject <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    subject<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//退出用户</span>    <span class="token keyword">return</span> <span class="token string">"redirect:/login.jsp"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-修改退出连接访问退出路径"><a href="#3-修改退出连接访问退出路径" class="headerlink" title="3.修改退出连接访问退出路径"></a>3.修改退出连接访问退出路径</h5><p><img src="/posts/c0010af8/image-20200526083056062.png" alt="image-20200526083056062"></p><h5 id="4-退出之后访问受限资源立即返回认证界面"><a href="#4-退出之后访问受限资源立即返回认证界面" class="headerlink" title="4.退出之后访问受限资源立即返回认证界面"></a>4.退出之后访问受限资源立即返回认证界面</h5><p><img src="/posts/c0010af8/image-20200526083148253.png" alt="image-20200526083148253"></p><h3 id="6-7-MD5、Salt的认证实现"><a href="#6-7-MD5、Salt的认证实现" class="headerlink" title="6.7 MD5、Salt的认证实现"></a>6.7 MD5、Salt的认证实现</h3><h4 id="1-开发数据库注册"><a href="#1-开发数据库注册" class="headerlink" title="1.开发数据库注册"></a>1.开发数据库注册</h4><h5 id="0-开发注册界面"><a href="#0-开发注册界面" class="headerlink" title="0.开发注册界面"></a>0.开发注册界面</h5><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>用户注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageContext.request.contextPath}/user/register<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>  密码  : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>立即注册<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200526200230982.png" alt="image-20200526200230982"></p><h5 id="1-创建数据表结构"><a href="#1-创建数据表结构" class="headerlink" title="1.创建数据表结构"></a>1.创建数据表结构</h5><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">SET</span> NAMES utf8mb4<span class="token punctuation">;</span><span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token comment" spellcheck="true">-- Table structure for t_user</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>t_user<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>t_user<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>username<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>password<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>salt<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200526200425569.png" alt="image-20200526200425569"></p><h5 id="2-项目引入依赖"><a href="#2-项目引入依赖" class="headerlink" title="2.项目引入依赖"></a>2.项目引入依赖</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--mybatis相关依赖--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--mysql--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.38<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--druid--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>druid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.19<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-配置application-properties配置文件"><a href="#3-配置application-properties配置文件" class="headerlink" title="3.配置application.properties配置文件"></a>3.配置application.properties配置文件</h5><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">8888</span><span class="token attr-name">server.servlet.context-path</span><span class="token punctuation">=</span><span class="token attr-value">/shiro</span><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">shiro</span><span class="token attr-name">spring.mvc.view.prefix</span><span class="token punctuation">=</span><span class="token attr-value">/</span><span class="token attr-name">spring.mvc.view.suffix</span><span class="token punctuation">=</span><span class="token attr-value">.jsp</span><span class="token comment" spellcheck="true">#新增配置</span><span class="token attr-name">spring.datasource.type</span><span class="token punctuation">=</span><span class="token attr-value">com.alibaba.druid.pool.DruidDataSource</span><span class="token attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/shiro?characterEncoding=UTF-8</span><span class="token attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">mybatis.type-aliases-package</span><span class="token punctuation">=</span><span class="token attr-value">com.baizhi.springboot_jsp_shiro.entity</span><span class="token attr-name">mybatis.mapper-locations</span><span class="token punctuation">=</span><span class="token attr-value">classpath:com/baizhi/mapper/*.xml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200526200558712.png" alt="image-20200526200558712"></p><h5 id="4-创建entity"><a href="#4-创建entity" class="headerlink" title="4.创建entity"></a>4.创建entity</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String  id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span>    <span class="token keyword">private</span> String password<span class="token punctuation">;</span>    <span class="token keyword">private</span> String salt<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="5-创建DAO接口"><a href="#5-创建DAO接口" class="headerlink" title="5.创建DAO接口"></a>5.创建DAO接口</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDAO</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="6-开发mapper配置文件"><a href="#6-开发mapper配置文件" class="headerlink" title="6.开发mapper配置文件"></a>6.开发mapper配置文件</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>save<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>User<span class="token punctuation">"</span></span> <span class="token attr-name">useGeneratedKeys</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">keyProperty</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  insert into t_user values(#{id},#{username},#{password},#{salt})<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="7-开发service接口"><a href="#7-开发service接口" class="headerlink" title="7.开发service接口"></a>7.开发service接口</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//注册用户方法</span>    <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="8-创建salt工具类"><a href="#8-创建salt工具类" class="headerlink" title="8.创建salt工具类"></a>8.创建salt工具类</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SaltUtils</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 生成salt的静态方法     * @param n     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getSalt</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> <span class="token string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz01234567890!@#$%^&amp;*()"</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        StringBuilder sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">char</span> aChar <span class="token operator">=</span> chars<span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>chars<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>aChar<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="9-开发service实现类"><a href="#9-开发service实现类" class="headerlink" title="9.开发service实现类"></a>9.开发service实现类</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Transactional</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserDAO userDAO<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//处理业务调用dao</span>        <span class="token comment" spellcheck="true">//1.生成随机盐</span>        String salt <span class="token operator">=</span> SaltUtils<span class="token punctuation">.</span><span class="token function">getSalt</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.将随机盐保存到数据</span>        user<span class="token punctuation">.</span><span class="token function">setSalt</span><span class="token punctuation">(</span>salt<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3.明文密码进行md5 + salt + hash散列</span>        Md5Hash md5Hash <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Md5Hash</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>salt<span class="token punctuation">,</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>md5Hash<span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        userDAO<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="10-开发Controller"><a href="#10-开发Controller" class="headerlink" title="10.开发Controller"></a>10.开发Controller</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 用户注册     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"register"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">register</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            userService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"redirect:/login.jsp"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"redirect:/register.jsp"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="11-启动项目进行注册"><a href="#11-启动项目进行注册" class="headerlink" title="11.启动项目进行注册"></a>11.启动项目进行注册</h5><p><img src="/posts/c0010af8/image-20200526200946730.png" alt="image-20200526200946730"></p><hr><h4 id="2-开发数据库认证"><a href="#2-开发数据库认证" class="headerlink" title="2.开发数据库认证"></a>2.开发数据库认证</h4><h5 id="0-开发DAO"><a href="#0-开发DAO" class="headerlink" title="0.开发DAO"></a>0.开发DAO</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDAO</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根据身份信息认证的方法</span>    User <span class="token function">findByUserName</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="1-开发mapper配置文件"><a href="#1-开发mapper配置文件" class="headerlink" title="1.开发mapper配置文件"></a>1.开发mapper配置文件</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>findByUserName<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>String<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  select id,username,password,salt from t_user  where username = #{username}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-开发Service接口"><a href="#2-开发Service接口" class="headerlink" title="2.开发Service接口"></a>2.开发Service接口</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//注册用户方法</span>    <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//根据用户名查询业务的方法</span>    User <span class="token function">findByUserName</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-开发Service实现类"><a href="#3-开发Service实现类" class="headerlink" title="3.开发Service实现类"></a>3.开发Service实现类</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Transactional</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserDAO userDAO<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> User <span class="token function">findByUserName</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userDAO<span class="token punctuation">.</span><span class="token function">findByUserName</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-开发在工厂中获取bean对象的工具类"><a href="#4-开发在工厂中获取bean对象的工具类" class="headerlink" title="4.开发在工厂中获取bean对象的工具类"></a>4.开发在工厂中获取bean对象的工具类</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApplicationContextUtils</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationContextAware</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> ApplicationContext context<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setApplicationContext</span><span class="token punctuation">(</span>ApplicationContext applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> BeansException <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> applicationContext<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//根据bean名字获取工厂中指定bean 对象</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Object <span class="token function">getBean</span><span class="token punctuation">(</span>String beanName<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="5-修改自定义realm"><a href="#5-修改自定义realm" class="headerlink" title="5.修改自定义realm"></a>5.修改自定义realm</h5><pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> AuthenticationInfo <span class="token function">doGetAuthenticationInfo</span><span class="token punctuation">(</span>AuthenticationToken token<span class="token punctuation">)</span> <span class="token keyword">throws</span> AuthenticationException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=========================="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根据身份信息</span>        String principal <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> token<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//在工厂中获取service对象</span>        UserService userService <span class="token operator">=</span> <span class="token punctuation">(</span>UserService<span class="token punctuation">)</span> ApplicationContextUtils<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//根据身份信息查询</span>        User user <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">findByUserName</span><span class="token punctuation">(</span>principal<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ObjectUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//返回数据库信息</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SimpleAuthenticationInfo</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                ByteSource<span class="token punctuation">.</span>Util<span class="token punctuation">.</span><span class="token function">bytes</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getSalt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="6-修改ShiroConfig中realm使用凭证匹配器以及hash散列"><a href="#6-修改ShiroConfig中realm使用凭证匹配器以及hash散列" class="headerlink" title="6.修改ShiroConfig中realm使用凭证匹配器以及hash散列"></a>6.修改ShiroConfig中realm使用凭证匹配器以及hash散列</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> Realm <span class="token function">getRealm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  CustomerRealm customerRealm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomerRealm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//设置hashed凭证匹配器</span>  HashedCredentialsMatcher credentialsMatcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashedCredentialsMatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//设置md5加密</span>  credentialsMatcher<span class="token punctuation">.</span><span class="token function">setHashAlgorithmName</span><span class="token punctuation">(</span><span class="token string">"md5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//设置散列次数</span>  credentialsMatcher<span class="token punctuation">.</span><span class="token function">setHashIterations</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  customerRealm<span class="token punctuation">.</span><span class="token function">setCredentialsMatcher</span><span class="token punctuation">(</span>credentialsMatcher<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> customerRealm<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200526204958726.png" alt="image-20200526204958726"></p><h3 id="6-8-授权实现"><a href="#6-8-授权实现" class="headerlink" title="6.8 授权实现"></a>6.8 授权实现</h3><h5 id="0-页面资源授权"><a href="#0-页面资源授权" class="headerlink" title="0.页面资源授权"></a>0.页面资源授权</h5><pre class="line-numbers language-jsp"><code class="language-jsp"><%@taglib prefix="shiro" uri="http://shiro.apache.org/tags" %><shiro:hasAnyRoles name="user,admin">        <li><a href="">用户管理</a>            <ul>                <shiro:hasPermission name="user:add:*">                <li><a href="">添加</a></li>                </shiro:hasPermission>                <shiro:hasPermission name="user:delete:*">                    <li><a href="">删除</a></li>                </shiro:hasPermission>                <shiro:hasPermission name="user:update:*">                    <li><a href="">修改</a></li>                </shiro:hasPermission>                <shiro:hasPermission name="user:find:*">                    <li><a href="">查询</a></li>                </shiro:hasPermission>            </ul>        </li>        </shiro:hasAnyRoles>        <shiro:hasRole name="admin">            <li><a href="">商品管理</a></li>            <li><a href="">订单管理</a></li>            <li><a href="">物流管理</a></li>        </shiro:hasRole><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="1-代码方式授权"><a href="#1-代码方式授权" class="headerlink" title="1.代码方式授权"></a>1.代码方式授权</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"save"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"进入方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//获取主体对象</span>  Subject subject <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//代码方式</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>subject<span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"保存订单!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"无权访问!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//基于权限字符串</span>  <span class="token comment" spellcheck="true">//....</span>  <span class="token keyword">return</span> <span class="token string">"redirect:/index.jsp"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200527203343928.png" alt="image-20200527203343928"></p><h5 id="2-方法调用授权"><a href="#2-方法调用授权" class="headerlink" title="2.方法调用授权"></a>2.方法调用授权</h5><ul><li>@RequiresRoles               用来基于角色进行授权</li><li>@RequiresPermissions    用来基于权限进行授权</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@RequiresRoles</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"admin"</span><span class="token punctuation">,</span><span class="token string">"user"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//用来判断角色  同时具有 admin user</span><span class="token annotation punctuation">@RequiresPermissions</span><span class="token punctuation">(</span><span class="token string">"user:update:01"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//用来判断权限字符串</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"save"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"进入方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token string">"redirect:/index.jsp"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200527203415114.png" alt="image-20200527203415114"></p><hr><h5 id="3-授权数据持久化"><a href="#3-授权数据持久化" class="headerlink" title="3.授权数据持久化"></a>3.授权数据持久化</h5><p><img src="/posts/c0010af8/image-20200527204839080.png" alt="image-20200527204839080"></p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">SET</span> NAMES utf8mb4<span class="token punctuation">;</span><span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token comment" spellcheck="true">-- Table structure for t_pers</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>t_pers<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>t_pers<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>url<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token comment" spellcheck="true">-- Table structure for t_role</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>t_role<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>t_role<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token comment" spellcheck="true">-- Table structure for t_role_perms</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>t_role_perms<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>t_role_perms<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>roleid<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>permsid<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token comment" spellcheck="true">-- Table structure for t_user</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>t_user<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>t_user<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>username<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>password<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>salt<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token comment" spellcheck="true">-- Table structure for t_user_role</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>t_user_role<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>t_user_role<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>userid<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>roleid<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h5 id="4-创建dao方法"><a href="#4-创建dao方法" class="headerlink" title="4.创建dao方法"></a>4.创建dao方法</h5><pre class="line-numbers language-java"><code class="language-java"> <span class="token comment" spellcheck="true">//根据用户名查询所有角色</span>User <span class="token function">findRolesByUserName</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//根据角色id查询权限集合</span>List<span class="token operator">&lt;</span>Perms<span class="token operator">></span> <span class="token function">findPermsByRoleId</span><span class="token punctuation">(</span>String id<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="5-mapper实现"><a href="#5-mapper实现" class="headerlink" title="5.mapper实现"></a>5.mapper实现</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>uid<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token comment" spellcheck="true">&lt;!--角色信息--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>roles<span class="token punctuation">"</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span> <span class="token attr-name">ofType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Role<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rname<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collection</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>findRolesByUserName<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>String<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userMap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  SELECT u.id uid,u.username,r.id,r.NAME rname  FROM t_user u  LEFT JOIN t_user_role ur  ON u.id=ur.userid  LEFT JOIN t_role r  ON ur.roleid=r.id  WHERE u.username=#{username}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>findPermsByRoleId<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>String<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Perms<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  SELECT p.id,p.NAME,p.url,r.NAME  FROM t_role r  LEFT JOIN t_role_perms rp  ON r.id=rp.roleid  LEFT JOIN t_perms p ON rp.permsid=p.id  WHERE r.id=#{id}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="6-Service接口"><a href="#6-Service接口" class="headerlink" title="6.Service接口"></a>6.Service接口</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据用户名查询所有角色</span>User <span class="token function">findRolesByUserName</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//根据角色id查询权限集合</span>List<span class="token operator">&lt;</span>Perms<span class="token operator">></span> <span class="token function">findPermsByRoleId</span><span class="token punctuation">(</span>String id<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="7-Service实现"><a href="#7-Service实现" class="headerlink" title="7.Service实现"></a>7.Service实现</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>Perms<span class="token operator">></span> <span class="token function">findPermsByRoleId</span><span class="token punctuation">(</span>String id<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> userDAO<span class="token punctuation">.</span><span class="token function">findPermsByRoleId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> User <span class="token function">findRolesByUserName</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> userDAO<span class="token punctuation">.</span><span class="token function">findRolesByUserName</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="8-修改自定义realm"><a href="#8-修改自定义realm" class="headerlink" title="8.修改自定义realm"></a>8.修改自定义realm</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomerRealm</span> <span class="token keyword">extends</span> <span class="token class-name">AuthorizingRealm</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> AuthorizationInfo <span class="token function">doGetAuthorizationInfo</span><span class="token punctuation">(</span>PrincipalCollection principals<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取身份信息</span>        String primaryPrincipal <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> principals<span class="token punctuation">.</span><span class="token function">getPrimaryPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"调用授权验证: "</span><span class="token operator">+</span>primaryPrincipal<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根据主身份信息获取角色 和 权限信息</span>        UserService userService <span class="token operator">=</span> <span class="token punctuation">(</span>UserService<span class="token punctuation">)</span> ApplicationContextUtils<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        User user <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">findRolesByUserName</span><span class="token punctuation">(</span>primaryPrincipal<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//授权角色信息</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>CollectionUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            SimpleAuthorizationInfo simpleAuthorizationInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleAuthorizationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            user<span class="token punctuation">.</span><span class="token function">getRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>role<span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>                simpleAuthorizationInfo<span class="token punctuation">.</span><span class="token function">addRole</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//权限信息</span>                List<span class="token operator">&lt;</span>Perms<span class="token operator">></span> perms <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">findPermsByRoleId</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>CollectionUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>perms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    perms<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>perm<span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>                        simpleAuthorizationInfo<span class="token punctuation">.</span><span class="token function">addStringPermission</span><span class="token punctuation">(</span>perm<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> simpleAuthorizationInfo<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200527213821611.png" alt="image-20200527213821611"></p><h5 id="9-启动测试"><a href="#9-启动测试" class="headerlink" title="9.启动测试"></a>9.启动测试</h5><hr><h3 id="6-9-使用CacheManager"><a href="#6-9-使用CacheManager" class="headerlink" title="6.9 使用CacheManager"></a>6.9 使用CacheManager</h3><h4 id="1-Cache-作用"><a href="#1-Cache-作用" class="headerlink" title="1.Cache 作用"></a>1.Cache 作用</h4><ul><li>Cache 缓存: <strong>计算机内存中一段数据</strong>  </li><li>作用: <strong>用来减轻DB的访问压力,从而提高系统的查询效率</strong></li><li>流程: </li></ul><p><img src="/posts/c0010af8/image-20200530090656417.png" alt="image-20200530090656417"></p><h4 id="2-使用shiro中默认EhCache实现缓存"><a href="#2-使用shiro中默认EhCache实现缓存" class="headerlink" title="2.使用shiro中默认EhCache实现缓存"></a>2.使用shiro中默认EhCache实现缓存</h4><h5 id="1-引入依赖"><a href="#1-引入依赖" class="headerlink" title="1.引入依赖"></a>1.引入依赖</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--引入shiro和ehcache--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.shiro<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>shiro-ehcache<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-开启缓存"><a href="#2-开启缓存" class="headerlink" title="2.开启缓存"></a>2.开启缓存</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//3.创建自定义realm</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Realm <span class="token function">getRealm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        CustomerRealm customerRealm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomerRealm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//修改凭证校验匹配器</span>        HashedCredentialsMatcher credentialsMatcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashedCredentialsMatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置加密算法为md5</span>        credentialsMatcher<span class="token punctuation">.</span><span class="token function">setHashAlgorithmName</span><span class="token punctuation">(</span><span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置散列次数</span>        credentialsMatcher<span class="token punctuation">.</span><span class="token function">setHashIterations</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        customerRealm<span class="token punctuation">.</span><span class="token function">setCredentialsMatcher</span><span class="token punctuation">(</span>credentialsMatcher<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//开启缓存管理器</span>        customerRealm<span class="token punctuation">.</span><span class="token function">setCachingEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        customerRealm<span class="token punctuation">.</span><span class="token function">setAuthorizationCachingEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        customerRealm<span class="token punctuation">.</span><span class="token function">setAuthorizationCachingEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        customerRealm<span class="token punctuation">.</span><span class="token function">setCacheManager</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EhCacheManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> customerRealm<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200529173859939.png" alt="image-20200529173859939"></p><h5 id="3-启动刷新页面进行测试"><a href="#3-启动刷新页面进行测试" class="headerlink" title="3.启动刷新页面进行测试"></a>3.启动刷新页面进行测试</h5><ul><li>注意:如果控制台没有任何sql展示说明缓存已经开启</li></ul><h4 id="3-shiro中使用Redis作为缓存实现"><a href="#3-shiro中使用Redis作为缓存实现" class="headerlink" title="3.shiro中使用Redis作为缓存实现"></a>3.shiro中使用Redis作为缓存实现</h4><h5 id="1-引入redis依赖"><a href="#1-引入redis依赖" class="headerlink" title="1.引入redis依赖"></a>1.引入redis依赖</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--redis整合springboot--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-配置redis连接"><a href="#2-配置redis连接" class="headerlink" title="2.配置redis连接"></a>2.配置redis连接</h5><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">spring.redis.port</span><span class="token punctuation">=</span><span class="token attr-value">6379</span><span class="token attr-name">spring.redis.host</span><span class="token punctuation">=</span><span class="token attr-value">localhost</span><span class="token attr-name">spring.redis.database</span><span class="token punctuation">=</span><span class="token attr-value">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200530084616799.png" alt="image-20200530084616799"></p><h5 id="3-启动redis服务"><a href="#3-启动redis服务" class="headerlink" title="3.启动redis服务"></a>3.启动redis服务</h5><pre class="line-numbers language-powershell"><code class="language-powershell">➜  bin <span class="token function">ls</span>dump<span class="token punctuation">.</span>rdb        redis<span class="token operator">-</span>check<span class="token operator">-</span>aof redis<span class="token operator">-</span><span class="token function">cli</span>       redis<span class="token operator">-</span>server    redis<span class="token punctuation">.</span>confredis<span class="token operator">-</span>benchmark redis<span class="token operator">-</span>check<span class="token operator">-</span>rdb redis<span class="token operator">-</span>sentinel  redis<span class="token operator">-</span>trib<span class="token punctuation">.</span>rb➜  bin <span class="token punctuation">.</span><span class="token operator">/</span>redis<span class="token operator">-</span>server redis<span class="token punctuation">.</span>conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200530081954871.png" alt="image-20200530081954871"></p><h5 id="4-开发RedisCacheManager"><a href="#4-开发RedisCacheManager" class="headerlink" title="4.开发RedisCacheManager"></a>4.开发RedisCacheManager</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisCacheManager</span> <span class="token keyword">implements</span> <span class="token class-name">CacheManager</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token operator">&lt;</span>K<span class="token punctuation">,</span> V<span class="token operator">></span> Cache<span class="token operator">&lt;</span>K<span class="token punctuation">,</span> V<span class="token operator">></span> <span class="token function">getCache</span><span class="token punctuation">(</span>String cacheName<span class="token punctuation">)</span> <span class="token keyword">throws</span> CacheException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"缓存名称: "</span><span class="token operator">+</span>cacheName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RedisCache</span><span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token punctuation">(</span>cacheName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="5-开RedisCache实现"><a href="#5-开RedisCache实现" class="headerlink" title="5.开RedisCache实现"></a>5.开RedisCache实现</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisCache</span><span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">Cache</span><span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String cacheName<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">RedisCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">RedisCache</span><span class="token punctuation">(</span>String cacheName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cacheName <span class="token operator">=</span> cacheName<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> V <span class="token function">get</span><span class="token punctuation">(</span>K k<span class="token punctuation">)</span> <span class="token keyword">throws</span> CacheException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取缓存:"</span><span class="token operator">+</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>V<span class="token punctuation">)</span> <span class="token function">getRedisTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cacheName<span class="token punctuation">,</span>k<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> V <span class="token function">put</span><span class="token punctuation">(</span>K k<span class="token punctuation">,</span> V v<span class="token punctuation">)</span> <span class="token keyword">throws</span> CacheException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"设置缓存key: "</span><span class="token operator">+</span>k<span class="token operator">+</span><span class="token string">" value:"</span><span class="token operator">+</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getRedisTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cacheName<span class="token punctuation">,</span>k<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> V <span class="token function">remove</span><span class="token punctuation">(</span>K k<span class="token punctuation">)</span> <span class="token keyword">throws</span> CacheException <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>V<span class="token punctuation">)</span> <span class="token function">getRedisTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cacheName<span class="token punctuation">,</span>k<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> v <span class="token function">remove</span><span class="token punctuation">(</span>k k<span class="token punctuation">)</span> <span class="token keyword">throws</span> CacheException <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token function">getRedisTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cacheName<span class="token punctuation">,</span>k<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> CacheException <span class="token punctuation">{</span>        <span class="token function">getRedisTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cacheName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">getRedisTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cacheName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Set<span class="token operator">&lt;</span>k<span class="token operator">></span> <span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">getRedisTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cacheName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Collection<span class="token operator">&lt;</span>v<span class="token operator">></span> <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">getRedisTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cacheName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> RedisTemplate <span class="token function">getRedisTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        RedisTemplate redisTemplate <span class="token operator">=</span> <span class="token punctuation">(</span>RedisTemplate<span class="token punctuation">)</span> ApplicationContextUtils<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"redisTemplate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">setKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">setHashKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> redisTemplate<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//封装获取redisTemplate</span>    <span class="token keyword">private</span> RedisTemplate <span class="token function">getRedisTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        RedisTemplate redisTemplate <span class="token operator">=</span> <span class="token punctuation">(</span>RedisTemplate<span class="token punctuation">)</span> ApplicationContextUtils<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"redisTemplate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">setKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">setHashKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> redisTemplate<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="6-启动项目测试发现报错"><a href="#6-启动项目测试发现报错" class="headerlink" title="6.启动项目测试发现报错"></a>6.启动项目测试发现报错</h5><p><img src="/posts/c0010af8/image-20200530100850618.png" alt="image-20200530100850618"></p><p><img src="/posts/c0010af8/image-20200530100948598.png" alt="image-20200530100948598"></p><ul><li><p>错误解释: <strong>由于shiro中提供的simpleByteSource实现没有实现序列化,所有在认证时出现错误信息</strong></p></li><li><p>解决方案: <strong>需要自动salt实现序列化</strong></p><ul><li><p>自定义salt实现序列化</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//自定义salt实现  实现序列化接口</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyByteSource</span> <span class="token keyword">extends</span> <span class="token class-name">SimpleByteSource</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token function">MyByteSource</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在realm中使用自定义salt</p><pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> AuthenticationInfo <span class="token function">doGetAuthenticationInfo</span><span class="token punctuation">(</span>AuthenticationToken token<span class="token punctuation">)</span> <span class="token keyword">throws</span> AuthenticationException <span class="token punctuation">{</span>  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=========================="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//根据身份信息</span>  String principal <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> token<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//在工厂中获取service对象</span>  UserService userService <span class="token operator">=</span> <span class="token punctuation">(</span>UserService<span class="token punctuation">)</span> ApplicationContextUtils<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  User user <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">findByUserName</span><span class="token punctuation">(</span>principal<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ObjectUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SimpleAuthenticationInfo</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                       <span class="token keyword">new</span> <span class="token class-name">MyByteSource</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getSalt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> null<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200530101301543.png" alt="image-20200530101301543"></p></li></ul></li></ul><h5 id="7-再次启动测试-发现可以成功放入redis缓存"><a href="#7-再次启动测试-发现可以成功放入redis缓存" class="headerlink" title="7.再次启动测试,发现可以成功放入redis缓存"></a>7.再次启动测试,发现可以成功放入redis缓存</h5><p><img src="/posts/c0010af8/image-20200530101617692.png" alt="image-20200530101617692"></p><hr><h4 id="4-加入验证码验证"><a href="#4-加入验证码验证" class="headerlink" title="4. 加入验证码验证"></a>4. 加入验证码验证</h4><h5 id="0-开发页面加入验证码"><a href="#0-开发页面加入验证码" class="headerlink" title="0.开发页面加入验证码"></a>0.开发页面加入验证码</h5><ul><li><p>开发控制器</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"getImage"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getImage</span><span class="token punctuation">(</span>HttpSession session<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//生成验证码</span>  String code <span class="token operator">=</span> VerifyCodeUtils<span class="token punctuation">.</span><span class="token function">generateVerifyCode</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//验证码放入session</span>  session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">,</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//验证码存入图片</span>  ServletOutputStream os <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"image/png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  VerifyCodeUtils<span class="token punctuation">.</span><span class="token function">outputImage</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span>os<span class="token punctuation">,</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>放行验证码</p><p><img src="/posts/c0010af8/image-20200530141757606.png" alt="image-20200530141757606"></p></li><li><p>开发页面</p><p><img src="/posts/c0010af8/image-20200530141828004.png" alt="image-20200530141828004"></p></li><li><p>修改认证流程</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"login"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">login</span><span class="token punctuation">(</span>String username<span class="token punctuation">,</span> String password<span class="token punctuation">,</span>String code<span class="token punctuation">,</span>HttpSession session<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//比较验证码</span>        String codes <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>codes<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//获取主体对象</span>                Subject subject <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    subject<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UsernamePasswordToken</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token string">"redirect:/index.jsp"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"验证码错误!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownAccountException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名错误!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IncorrectCredentialsException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码错误!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token string">"redirect:/login.jsp"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>修改salt不能序列化的问题</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//自定义salt实现  实现序列化接口</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyByteSource</span> <span class="token keyword">implements</span> <span class="token class-name">ByteSource</span><span class="token punctuation">,</span>Serializable <span class="token punctuation">{</span>    <span class="token keyword">private</span>  <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token punctuation">;</span>    <span class="token keyword">private</span> String cachedHex<span class="token punctuation">;</span>    <span class="token keyword">private</span> String cachedBase64<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//加入无参数构造方法实现序列化和反序列化</span>    <span class="token keyword">public</span> <span class="token function">MyByteSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">MyByteSource</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>bytes <span class="token operator">=</span> bytes<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">MyByteSource</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>bytes <span class="token operator">=</span> CodecSupport<span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>chars<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">MyByteSource</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>bytes <span class="token operator">=</span> CodecSupport<span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">MyByteSource</span><span class="token punctuation">(</span>ByteSource source<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>bytes <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">MyByteSource</span><span class="token punctuation">(</span>File file<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>bytes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyByteSource<span class="token punctuation">.</span>BytesHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">MyByteSource</span><span class="token punctuation">(</span>InputStream stream<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>bytes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyByteSource<span class="token punctuation">.</span>BytesHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isCompatible</span><span class="token punctuation">(</span>Object o<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> o <span class="token keyword">instanceof</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">||</span> o <span class="token keyword">instanceof</span> <span class="token class-name">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">||</span> o <span class="token keyword">instanceof</span> <span class="token class-name">String</span> <span class="token operator">||</span> o <span class="token keyword">instanceof</span> <span class="token class-name">ByteSource</span> <span class="token operator">||</span> o <span class="token keyword">instanceof</span> <span class="token class-name">File</span> <span class="token operator">||</span> o <span class="token keyword">instanceof</span> <span class="token class-name">InputStream</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bytes<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bytes <span class="token operator">==</span> null <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bytes<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cachedHex <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>cachedHex <span class="token operator">=</span> Hex<span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cachedHex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">toBase64</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cachedBase64 <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>cachedBase64 <span class="token operator">=</span> Base64<span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cachedBase64<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toBase64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bytes <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bytes<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">?</span> Arrays<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bytes<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span>Object o<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">ByteSource</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ByteSource bs <span class="token operator">=</span> <span class="token punctuation">(</span>ByteSource<span class="token punctuation">)</span>o<span class="token punctuation">;</span>            <span class="token keyword">return</span> Arrays<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bs<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">BytesHelper</span> <span class="token keyword">extends</span> <span class="token class-name">CodecSupport</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token function">BytesHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getBytes</span><span class="token punctuation">(</span>File file<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getBytes</span><span class="token punctuation">(</span>InputStream stream<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr></li></ul><h2 id="7-Shiro整合springboot之thymeleaf权限控制"><a href="#7-Shiro整合springboot之thymeleaf权限控制" class="headerlink" title="7.Shiro整合springboot之thymeleaf权限控制"></a>7.Shiro整合springboot之thymeleaf权限控制</h2><h3 id="1-引入扩展依赖"><a href="#1-引入扩展依赖" class="headerlink" title="1.引入扩展依赖"></a>1.引入扩展依赖</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.github.theborakompanioni<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>thymeleaf-extras-shiro<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-页面中引入命名空间"><a href="#2-页面中引入命名空间" class="headerlink" title="2.页面中引入命名空间"></a>2.页面中引入命名空间</h3><ul><li>xmlns:shiro=”<a href="http://www.pollix.at/thymeleaf/shiro&quot;" target="_blank" rel="noopener">http://www.pollix.at/thymeleaf/shiro&quot;</a></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">xmlns:</span>shiro</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.pollix.at/thymeleaf/shiro<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>......<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-常见权限控制标签使用"><a href="#3-常见权限控制标签使用" class="headerlink" title="3.常见权限控制标签使用"></a>3.常见权限控制标签使用</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 验证当前用户是否为“访客”，即未认证（包含未记住）的用户。 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">shiro:</span>guest</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Please <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 认证通过或已记住的用户。 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">shiro:</span>user</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    Welcome back John! Not John? Click <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> to login.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 已认证通过的用户。不包含已记住的用户，这是与user标签的区别所在。 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">shiro:</span>authenticated</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    Hello, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">shiro:</span>principal</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>, how are you today?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">shiro:</span>authenticated</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>updateAccount.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Update your contact information<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 输出当前用户信息，通常为登录帐号信息。 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Hello, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">shiro:</span>principal</span><span class="token punctuation">/></span></span>, how are you today?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 未认证通过用户，与authenticated标签相对应。与guest标签的区别是，该标签包含已记住用户。 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">shiro:</span>notAuthenticated</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    Please <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> in order to update your credit card information.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 验证当前用户是否属于该角色。 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">shiro:</span>hasRole</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>admin<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>admin.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Administer the system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 拥有该角色 --></span><span class="token comment" spellcheck="true">&lt;!-- 与hasRole标签逻辑相反，当用户不属于该角色时验证通过。 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">shiro:</span>lacksRole</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>developer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 没有该角色 --></span>    Sorry, you are not allowed to developer the system.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 验证当前用户是否属于以下所有角色。 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">shiro:</span>hasAllRoles</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>developer, 2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 角色与判断 --></span>    You are a developer and a admin.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 验证当前用户是否属于以下任意一个角色。  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">shiro:</span>hasAnyRoles</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>admin, vip, developer,1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 角色或判断 --></span>    You are a admin, vip, or developer.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--验证当前用户是否拥有指定权限。  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">shiro:</span>hasPermission</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userInfo:add<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>createUser.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>添加用户<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 拥有权限 --></span><span class="token comment" spellcheck="true">&lt;!-- 与hasPermission标签逻辑相反，当前用户没有制定权限时，验证通过。 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">shiro:</span>lacksPermission</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userInfo:del<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 没有权限 --></span>    Sorry, you are not allowed to delete user accounts.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 验证当前用户是否拥有以下所有角色。 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">shiro:</span>hasAllPermissions</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userInfo:view, userInfo:add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 权限与判断 --></span>    You can see or add users.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 验证当前用户是否拥有以下任意一个权限。  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">shiro:</span>hasAnyPermissions</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userInfo:view, userInfo:del<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 权限或判断 --></span>    You can see or delete users.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">shiro:</span>hasPermission</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pp<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>createUser.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Create a new User<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-加入shiro的方言配置"><a href="#4-加入shiro的方言配置" class="headerlink" title="4.加入shiro的方言配置"></a>4.加入shiro的方言配置</h3><ul><li>页面标签不起作用一定要记住加入方言处理</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"shiroDialect"</span><span class="token punctuation">)</span><span class="token keyword">public</span> ShiroDialect <span class="token function">shiroDialect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ShiroDialect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/posts/c0010af8/image-20200601210335151.png" alt="image-20200601210335151"></p>]]></content>
      
      
      <categories>
          
          <category> Shiro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【web】css中的相对定位和绝对定位</title>
      <link href="posts/24ea67b0/"/>
      <url>posts/24ea67b0/</url>
      
        <content type="html"><![CDATA[<h1 id="区别相对定位和绝对定位"><a href="#区别相对定位和绝对定位" class="headerlink" title="区别相对定位和绝对定位"></a>区别相对定位和绝对定位</h1><h2 id="1-相对定位"><a href="#1-相对定位" class="headerlink" title="1.相对定位"></a>1.相对定位</h2><h3 id="1-1定义："><a href="#1-1定义：" class="headerlink" title="1.1定义："></a>1.1定义：</h3><h3 id="相对定位就是相对于自己原来的位置进行偏移"><a href="#相对定位就是相对于自己原来的位置进行偏移" class="headerlink" title="相对定位就是相对于自己原来的位置进行偏移"></a><code>相对定位就是相对于自己原来的位置进行偏移</code></h3><h3 id="1-2案例："><a href="#1-2案例：" class="headerlink" title="1.2案例："></a>1.2案例：</h3><h5 id="1-没有加position时候"><a href="#1-没有加position时候" class="headerlink" title="1)没有加position时候"></a>1)没有加position时候</h5><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>相对定位和绝对定位<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector"><span class="token class">.p1</span></span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#2aabd2</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.p2</span></span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#f0ad4e</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.p3</span></span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#3c763d</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.p4</span></span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#0000FF</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-效果："><a href="#2-效果：" class="headerlink" title="2)效果："></a>2)效果：</h5><img src="https://gitee.com/fejxc/upic-file/raw/master/Users/sunyun/blog_pic /cQUqYu.png" style="zoom:50%;"><h5 id="3-给p1增加相对定位："><a href="#3-给p1增加相对定位：" class="headerlink" title="3)给p1增加相对定位："></a>3)给p1增加相对定位：</h5><pre class="line-numbers language-css"><code class="language-css"> <span class="token selector"><span class="token class">.p1</span></span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#2aabd2</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*    相对定位*/</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-效果："><a href="#4-效果：" class="headerlink" title="4)效果："></a>4)效果：</h5><img src="https://gitee.com/fejxc/upic-file/raw/master/Users/sunyun/blog_pic /N7hJYm.png" style="zoom:50%;"><p><code>说明：1号蓝色方块相对自己的位置进行了偏移，灰色方框是1号之前的位置，他的改变，不会影响其他元素的位置变化，重叠部分，则会覆盖2号方块。</code></p><h2 id="2-绝对定位"><a href="#2-绝对定位" class="headerlink" title="2.绝对定位"></a>2.绝对定位</h2><h3 id="2-1定义："><a href="#2-1定义：" class="headerlink" title="2.1定义："></a>2.1定义：</h3><h3 id="相对于父元素进行偏移，找离自己最近的position-relative-相对定位元素作为参照，如果没有找到的，就以整个浏览器为参照位置。"><a href="#相对于父元素进行偏移，找离自己最近的position-relative-相对定位元素作为参照，如果没有找到的，就以整个浏览器为参照位置。" class="headerlink" title="相对于父元素进行偏移，找离自己最近的position: relative 相对定位元素作为参照，如果没有找到的，就以整个浏览器为参照位置。"></a><code>相对于父元素进行偏移，找离自己最近的position: relative 相对定位元素作为参照，如果没有找到的，就以整个浏览器为参照位置。</code></h3><h3 id="2-2代码："><a href="#2-2代码：" class="headerlink" title="2.2代码："></a>2.2代码：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>绝对定位<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector"><span class="token class">.p1</span></span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#2aabd2</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.p2</span></span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#f0ad4e</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.p3</span></span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#3c763d</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.p4</span></span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#0000FF</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>            <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.d1</span></span><span class="token punctuation">{</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">600</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#8a6d3b</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.d2</span></span><span class="token punctuation">{</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">160</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">550</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.d3</span></span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">130</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">400</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#f0f0f0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>d1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>d2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>d3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3效果："><a href="#2-3效果：" class="headerlink" title="2.3效果："></a>2.3效果：</h3><img src="https://gitee.com/fejxc/upic-file/raw/master/Users/sunyun/blog_pic /Yw9rjd.png" style="zoom:50%;"><p><code>说明：决定定位的效果，会影起其他元素的移动，自动补齐位置。</code></p>]]></content>
      
      
      <categories>
          
          <category> web知识点复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目5-web实战上机-11月12号</title>
      <link href="posts/ca84f4bc/"/>
      <url>posts/ca84f4bc/</url>
      
        <content type="html"><![CDATA[<h1 id="项目5-web实战上机-11月5号"><a href="#项目5-web实战上机-11月5号" class="headerlink" title="项目5-web实战上机-11月5号"></a>项目5-web实战上机-11月5号</h1><blockquote><p>实验目的：实现轮播图效果</p></blockquote><h2 id="1-实现代码："><a href="#1-实现代码：" class="headerlink" title="1.实现代码："></a>1.实现代码：</h2><p>html部分：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--    轮播图效果--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>categoryAndBanner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>category<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!--            分类导航--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>banner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>slider-content<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>full_screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> block</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner/banner1.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner/banner2.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner/banner3.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner/banner4.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner/banner5.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>slider-nav<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>slider-nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>on<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--    轮播图end--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>css部分：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*轮播图*/</span><span class="token selector"><span class="token class">.categoryAndBanner</span></span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.banner</span>,<span class="token class">.full_screen</span></span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">481</span>px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*图片在中间显示*/</span><span class="token selector"><span class="token class">.full_screen</span> li</span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1920</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">960</span>px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*图片翻页小圆点*/</span><span class="token selector"><span class="token class">.banner</span> <span class="token class">.slider-nav</span></span><span class="token punctuation">{</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*background: rgba(255,255,255,0.2);*/</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1190</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">7</span>px <span class="token number">8</span>px<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">595</span>px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*图片翻页小圆点样式设置*/</span><span class="token selector"><span class="token class">.banner</span> <span class="token class">.slider-nav</span> li</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**/</span>    <span class="token property">vertical-align</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>    <span class="token property">word-spacing</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*让1，2，3，4，5 在同一行 内联块状 */</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">4</span>px<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*    圆形*/</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*黑色 透明度0.25*/</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.banner</span> <span class="token class">.slider-nav</span> a</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*text-indent 使a中的文字不显示*/</span>    <span class="token property">text-indent</span><span class="token punctuation">:</span> -<span class="token number">99999</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*鼠标悬停在小圆点上，li上有class 为 on 的属性 背景为红色*/</span><span class="token selector"><span class="token class">.banner</span> <span class="token class">.slider-nav</span> li<span class="token class">.on</span></span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#FF0000</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>js部分:</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">/*轮播图*/</span><span class="token punctuation">.</span>categoryAndBanner<span class="token punctuation">{</span>    position<span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>    margin<span class="token operator">-</span>top<span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    margin<span class="token operator">-</span>bottom<span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>banner<span class="token punctuation">,</span><span class="token punctuation">.</span>full_screen<span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span> 481px<span class="token punctuation">;</span>    position<span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    z<span class="token operator">-</span>index<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*图片在中间显示*/</span><span class="token punctuation">.</span>full_screen li<span class="token punctuation">{</span>    width<span class="token punctuation">:</span> 1920px<span class="token punctuation">;</span>    height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    position<span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    z<span class="token operator">-</span>index<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    top<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    left<span class="token punctuation">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    margin<span class="token operator">-</span>left<span class="token punctuation">:</span> <span class="token operator">-</span>960px<span class="token punctuation">;</span>    display<span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*图片翻页小圆点*/</span><span class="token punctuation">.</span>banner <span class="token punctuation">.</span>slider<span class="token operator">-</span>nav<span class="token punctuation">{</span>    font<span class="token operator">-</span>size<span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    list<span class="token operator">-</span>style<span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*background: rgba(255,255,255,0.2);*/</span>    text<span class="token operator">-</span>align<span class="token punctuation">:</span> center<span class="token punctuation">;</span>    display<span class="token punctuation">:</span> block<span class="token punctuation">;</span>    width<span class="token punctuation">:</span> 1190px<span class="token punctuation">;</span>    height<span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>    padding<span class="token punctuation">:</span> 7px 8px<span class="token punctuation">;</span>    margin<span class="token operator">-</span>left<span class="token punctuation">:</span> <span class="token operator">-</span>595px<span class="token punctuation">;</span>    position<span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    left<span class="token punctuation">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    bottom<span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    z<span class="token operator">-</span>index<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*图片翻页小圆点样式设置*/</span><span class="token punctuation">.</span>banner <span class="token punctuation">.</span>slider<span class="token operator">-</span>nav li<span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**/</span>    vertical<span class="token operator">-</span>align<span class="token punctuation">:</span> top<span class="token punctuation">;</span>    letter<span class="token operator">-</span>spacing<span class="token punctuation">:</span> normal<span class="token punctuation">;</span>    word<span class="token operator">-</span>spacing<span class="token punctuation">:</span> normal<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*让1，2，3，4，5 在同一行 内联块状 */</span>    display<span class="token punctuation">:</span> inline<span class="token operator">-</span>block<span class="token punctuation">;</span>    list<span class="token operator">-</span>style<span class="token punctuation">:</span> none<span class="token punctuation">;</span>    margin<span class="token operator">-</span>left<span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>    overflow<span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    bottom<span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    z<span class="token operator">-</span>index<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*    圆形*/</span>    width<span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>    height<span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>    border<span class="token operator">-</span>radius<span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*黑色 透明度0.25*/</span>    background<span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>banner <span class="token punctuation">.</span>slider<span class="token operator">-</span>nav a<span class="token punctuation">{</span>    display<span class="token punctuation">:</span> block<span class="token punctuation">;</span>    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*text-indent 使a中的文字不显示*/</span>    text<span class="token operator">-</span>indent<span class="token punctuation">:</span> <span class="token operator">-</span>99999px<span class="token punctuation">;</span>    padding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*鼠标悬停在小圆点上，li上有class 为 on 的属性 背景为红色*/</span><span class="token punctuation">.</span>banner <span class="token punctuation">.</span>slider<span class="token operator">-</span>nav li<span class="token punctuation">.</span>on<span class="token punctuation">{</span>    background<span class="token punctuation">:</span> #FF0000<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-实现效果："><a href="#2-实现效果：" class="headerlink" title="2.实现效果："></a>2.实现效果：</h2><p>![](<a href="https://gitee.com/fejxc/upic-file/raw/master/Users/sunyun/blog_pic" target="_blank" rel="noopener">https://gitee.com/fejxc/upic-file/raw/master/Users/sunyun/blog_pic</a> /YvcD0O.png)</p><h2 id="3-完整代码"><a href="#3-完整代码" class="headerlink" title="3.完整代码"></a>3.完整代码</h2><p><a href="https://github.com/fejxc/javaWeb-ICT" target="_blank" rel="noopener">github</a></p><p><a href="https://gitee.com/fejxc/java-web-class" target="_blank" rel="noopener">gitee</a></p>]]></content>
      
      
      <categories>
          
          <category> web实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目4-web实战上机-11月5号</title>
      <link href="posts/ef64d270/"/>
      <url>posts/ef64d270/</url>
      
        <content type="html"><![CDATA[<h1 id="项目4-web实战上机-11月5号"><a href="#项目4-web实战上机-11月5号" class="headerlink" title="项目4-web实战上机-11月5号"></a>项目4-web实战上机-11月5号</h1><h2 id="1-js的数据类型"><a href="#1-js的数据类型" class="headerlink" title="1.js的数据类型"></a>1.js的数据类型</h2><h3 id="1-1基本数据类型"><a href="#1-1基本数据类型" class="headerlink" title="1.1基本数据类型"></a>1.1基本数据类型</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> num<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">"heoll"</span><span class="token punctuation">;</span><span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//逻辑类型 布尔</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-2特殊类型"><a href="#1-2特殊类型" class="headerlink" title="1.2特殊类型"></a>1.2特殊类型</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> emp <span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//空</span><span class="token keyword">var</span> ind <span class="token operator">=</span> undefined<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//没定义</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-3复杂类型"><a href="#1-3复杂类型" class="headerlink" title="1.3复杂类型"></a>1.3复杂类型</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">testOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// alert("hhhhh");</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"testOne"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">,</span><span class="token string">"3"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数组类型</span><span class="token comment" spellcheck="true">//数据库的类型是Json</span><span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"username"</span><span class="token punctuation">:</span><span class="token string">"花花"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token string">"sex"</span><span class="token punctuation">:</span><span class="token string">"男"</span><span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//json</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>username<span class="token punctuation">:</span><span class="token string">"李四"</span><span class="token punctuation">,</span>age<span class="token punctuation">:</span><span class="token number">22</span><span class="token punctuation">,</span>sex<span class="token punctuation">:</span><span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//对象</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-4注释语句"><a href="#1-4注释语句" class="headerlink" title="1.4注释语句"></a>1.4注释语句</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//html: &lt;!-- --></span><span class="token comment" spellcheck="true">//css: </span><span class="token comment" spellcheck="true">/*  */</span><span class="token comment" spellcheck="true">//js: </span><span class="token comment" spellcheck="true">/*   */</span>  或者  <span class="token comment" spellcheck="true">//</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-5数据类型的转化"><a href="#1-5数据类型的转化" class="headerlink" title="1.5数据类型的转化"></a>1.5数据类型的转化</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//自动转换，语句中存在加号'+'，运算符，会把对应的num类型转换成字符串</span><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token string">"15"</span> <span class="token operator">+</span> <span class="token number">5</span> <span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 输出155 ，自动拼接</span><span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token string">"15"</span> <span class="token operator">-</span><span class="token number">5</span> <span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// (* / +)除+号以外</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//10</span><span class="token comment" spellcheck="true">//强制转换</span><span class="token keyword">var</span> z <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"15"</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token number">5</span> <span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//15强制转换成number类型</span><span class="token keyword">var</span> z1 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">"15"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">5</span> <span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//parseInt parseFloat  eval</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>z1<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-小案例-利用浏览器处理web界面"><a href="#2-小案例-利用浏览器处理web界面" class="headerlink" title="2.小案例-利用浏览器处理web界面"></a>2.小案例-利用浏览器处理web界面</h2><h3 id="2-1代码"><a href="#2-1代码" class="headerlink" title="2.1代码"></a>2.1代码</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Title<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"imgs/open.jpg"</span> id<span class="token operator">=</span><span class="token string">"ph"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>button onclick<span class="token operator">=</span><span class="token string">"openLogo()"</span><span class="token operator">></span>开机<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>button onclick<span class="token operator">=</span><span class="token string">"closeLogo()"</span><span class="token operator">></span>关机<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> <span class="token function">openLogo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> ph <span class="token operator">=</span> window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"ph"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//默认省略windoes对象</span>        <span class="token comment" spellcheck="true">// var btn = document.getElementsByTagName("button");</span>        <span class="token comment" spellcheck="true">// btn[0];</span>        ph<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span><span class="token string">"imgs/open.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">closeLogo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> ph <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"ph"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// var btn = document.getElementsByTagName("button");</span>        <span class="token comment" spellcheck="true">// btn[0];</span>        ph<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span><span class="token string">"imgs/close.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2效果演示"><a href="#2-2效果演示" class="headerlink" title="2.2效果演示"></a>2.2效果演示</h3><p><img src="https://i.loli.net/2020/11/05/IH8dcGrFhjquVnT.png" alt="开机" style="zoom:50%;"><img src="https://i.loli.net/2020/11/05/QlTUnu8LJRO5yeA.png" alt="关机" style="zoom:50%;"></p><h2 id="3-给导航菜单添加下拉菜单"><a href="#3-给导航菜单添加下拉菜单" class="headerlink" title="3.给导航菜单添加下拉菜单"></a>3.给导航菜单添加下拉菜单</h2><h3 id="3-1html核心代码"><a href="#3-1html核心代码" class="headerlink" title="3.1html核心代码"></a>3.1html核心代码</h3><pre class="line-numbers language-html"><code class="language-html">             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-4 col-md-offset-3<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>siteNav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nav nav-pills                                 navbar-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>presentation<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navTitle<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>menu<span class="token punctuation">"</span></span> <span class="token attr-name">onmouseover</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fun1()<span class="token punctuation">"</span></span>                                     <span class="token attr-name">onmouseout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fun2()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>我的MobileShop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>downUp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>siteNavPanel<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>menuContent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>待付款订单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>待发货<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>已发货<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>presentation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>购物车<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>presentation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>收藏夹<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>presentation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>商品分类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2css核心代码"><a href="#3-2css核心代码" class="headerlink" title="3.2css核心代码"></a>3.2css核心代码</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> menu <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"menu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> menuContent <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"menuContent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">fun1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//鼠标移入的时候显示二级菜单</span>    menuContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"block"</span><span class="token punctuation">;</span>    menu<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">"navTitle current"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">fun2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//鼠标移出去隐藏下拉菜单</span>    menuContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>    menu<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">"navTitle"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3js核心代码"><a href="#3-3js核心代码" class="headerlink" title="3.3js核心代码"></a>3.3js核心代码</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> menu <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"menu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> menuContent <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"menuContent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">fun1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//鼠标移入的时候显示二级菜单</span>    menuContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"block"</span><span class="token punctuation">;</span>    menu<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">"navTitle current"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">fun2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//鼠标移出去隐藏下拉菜单</span>    menuContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>    menu<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">"navTitle"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-4实现效果"><a href="#3-4实现效果" class="headerlink" title="3.4实现效果"></a>3.4实现效果</h3><p><img src="https://i.loli.net/2020/11/05/p7hKNJzVTL9UoyS.png" alt="悬停效果"></p><p><img src="https://i.loli.net/2020/11/05/Doz3EkL8AP6uYNr.png" alt="鼠标离开效果"></p>]]></content>
      
      
      <categories>
          
          <category> web实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译原理第二次上机</title>
      <link href="posts/28b5d3f0/"/>
      <url>posts/28b5d3f0/</url>
      
        <content type="html"><![CDATA[<h1 id="编译原理第二次上机-词法分析器"><a href="#编译原理第二次上机-词法分析器" class="headerlink" title="编译原理第二次上机-词法分析器"></a>编译原理第二次上机-词法分析器</h1><h2 id="1-环境："><a href="#1-环境：" class="headerlink" title="1.环境："></a>1.环境：</h2><h3 id="MAC-11-0-JDK1-8-Idea2019-2"><a href="#MAC-11-0-JDK1-8-Idea2019-2" class="headerlink" title="MAC 11.0 JDK1.8 Idea2019.2"></a><code>MAC 11.0 JDK1.8 Idea2019.2</code></h3><h2 id="2-代码实现-Java"><a href="#2-代码实现-Java" class="headerlink" title="2.代码实现(Java)"></a>2.代码实现(Java)</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashSet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//保留字表</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Set<span class="token operator">&lt;</span>String<span class="token operator">></span> ReserveWord <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//界符表</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Set<span class="token operator">&lt;</span>Character<span class="token operator">></span> JiefuTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//标识符表</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Set<span class="token operator">&lt;</span>String<span class="token operator">></span> IDentifierTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//常数表</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Set<span class="token operator">&lt;</span>String<span class="token operator">></span> DigitBTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//保留字32个</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token string">"auto"</span><span class="token punctuation">,</span> <span class="token string">"break"</span><span class="token punctuation">,</span> <span class="token string">"case"</span><span class="token punctuation">,</span> <span class="token string">"char"</span><span class="token punctuation">,</span> <span class="token string">"const"</span><span class="token punctuation">,</span> <span class="token string">"continue"</span><span class="token punctuation">,</span>                <span class="token string">"default"</span><span class="token punctuation">,</span> <span class="token string">"do"</span><span class="token punctuation">,</span> <span class="token string">"double"</span><span class="token punctuation">,</span> <span class="token string">"else"</span><span class="token punctuation">,</span> <span class="token string">"enum"</span><span class="token punctuation">,</span> <span class="token string">"extern"</span><span class="token punctuation">,</span>                <span class="token string">"float"</span><span class="token punctuation">,</span> <span class="token string">"for"</span><span class="token punctuation">,</span> <span class="token string">"goto"</span><span class="token punctuation">,</span> <span class="token string">"if"</span><span class="token punctuation">,</span> <span class="token string">"int"</span><span class="token punctuation">,</span> <span class="token string">"long"</span><span class="token punctuation">,</span>                <span class="token string">"register"</span><span class="token punctuation">,</span> <span class="token string">"return"</span><span class="token punctuation">,</span> <span class="token string">"short"</span><span class="token punctuation">,</span> <span class="token string">"signed"</span><span class="token punctuation">,</span> <span class="token string">"sizeof"</span><span class="token punctuation">,</span> <span class="token string">"static"</span><span class="token punctuation">,</span>                <span class="token string">"struct"</span><span class="token punctuation">,</span> <span class="token string">"switch"</span><span class="token punctuation">,</span> <span class="token string">"typedef"</span><span class="token punctuation">,</span> <span class="token string">"union"</span><span class="token punctuation">,</span> <span class="token string">"unsigned"</span><span class="token punctuation">,</span> <span class="token string">"void"</span><span class="token punctuation">,</span>                <span class="token string">"volatile"</span><span class="token punctuation">,</span> <span class="token string">"while"</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//界符表12个</span>        Character<span class="token punctuation">[</span><span class="token punctuation">]</span> Jiefu <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">';'</span><span class="token punctuation">,</span> <span class="token string">'('</span><span class="token punctuation">,</span> <span class="token string">')'</span><span class="token punctuation">,</span> <span class="token string">'^'</span><span class="token punctuation">,</span> <span class="token string">','</span><span class="token punctuation">,</span> <span class="token string">'#'</span><span class="token punctuation">,</span> <span class="token string">'%'</span><span class="token punctuation">,</span> <span class="token string">'['</span><span class="token punctuation">,</span> <span class="token string">']'</span><span class="token punctuation">,</span> <span class="token string">'{'</span><span class="token punctuation">,</span> <span class="token string">'}'</span><span class="token punctuation">,</span> <span class="token string">'.'</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//java.until.Arrays提供了asList()方法将数组转换成List对象，但该List是不可变的</span>        ReserveWord<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>strs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        JiefuTable<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>Jiefu<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//并运算</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//判断是否是：字母</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">Isletter</span><span class="token punctuation">(</span><span class="token keyword">char</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">(</span>x <span class="token operator">>=</span> <span class="token string">'a'</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">&lt;=</span> <span class="token string">'z'</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>x <span class="token operator">>=</span> <span class="token string">'A'</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//判断是否是：数字</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">IsDigit</span><span class="token punctuation">(</span><span class="token keyword">char</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">>=</span> <span class="token string">'0'</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">&lt;=</span> <span class="token string">'9'</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//判断是否是：界符</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">IsJiefu</span><span class="token punctuation">(</span><span class="token keyword">char</span> x<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> JiefuTable<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//判断是否是 算数运算符：加减乘</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">IsSuanshuyunsuanfu</span><span class="token punctuation">(</span><span class="token keyword">char</span> x<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> x <span class="token operator">==</span> <span class="token string">'+'</span> <span class="token operator">||</span> x <span class="token operator">==</span> <span class="token string">'-'</span> <span class="token operator">||</span> x <span class="token operator">==</span> <span class="token string">'*'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//判断是否是 关系运算符：等于（赋值），大于小于（大于等于，小于等于，大于小于）</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">IsGuanxiyunsuanfu</span><span class="token punctuation">(</span><span class="token keyword">char</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">==</span> <span class="token string">'='</span> <span class="token operator">||</span> x <span class="token operator">==</span> <span class="token string">'&lt;'</span> <span class="token operator">||</span> x <span class="token operator">==</span> <span class="token string">'>'</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">read_write_File</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        FileReader reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token string">"in.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BufferedReader bReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span><span class="token punctuation">;</span>        FileWriter writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span><span class="token string">"out.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BufferedWriter bWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span>writer<span class="token punctuation">)</span><span class="token punctuation">;</span>        String content<span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//readLine一行一行的读取</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>content <span class="token operator">=</span> bReader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;</span> content<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">' '</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    count<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//判断是字母或者'_'开头</span>                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">Isletter</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'_'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    String str <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    str <span class="token operator">+=</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;</span> content<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">Isletter</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">IsDigit</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        str <span class="token operator">+=</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token comment" spellcheck="true">//判断是不是保留字</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>ReserveWord<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">{</span>                        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;\t"</span><span class="token operator">+</span>str<span class="token operator">+</span><span class="token string">"\t,\t"</span><span class="token operator">+</span><span class="token string">"0(保留字)"</span><span class="token operator">+</span><span class="token string">"\t>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        bWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"("</span> <span class="token operator">+</span> <span class="token string">"0"</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">")"</span> <span class="token operator">+</span> <span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">continue</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token comment" spellcheck="true">//判断是不是标识符</span>                    IDentifierTable<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;\t"</span><span class="token operator">+</span>str<span class="token operator">+</span><span class="token string">"\t,\t"</span><span class="token operator">+</span><span class="token string">"1(标识符)"</span><span class="token operator">+</span><span class="token string">"\t>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    bWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"("</span> <span class="token operator">+</span> <span class="token string">"1"</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">")"</span> <span class="token operator">+</span> <span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//判断是不是算数运算符</span>                <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">IsSuanshuyunsuanfu</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    String str <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    str <span class="token operator">+=</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;\t"</span><span class="token operator">+</span>str<span class="token operator">+</span><span class="token string">"\t,\t"</span><span class="token operator">+</span><span class="token string">"2(算数运算符)"</span><span class="token operator">+</span><span class="token string">"\t>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    bWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"("</span> <span class="token operator">+</span> <span class="token string">"2"</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">")"</span> <span class="token operator">+</span> <span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//判断是不是数字</span>                <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">IsDigit</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    String str <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    str <span class="token operator">+=</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">while</span><span class="token punctuation">(</span>count <span class="token operator">&lt;</span> content<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">IsDigit</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        str <span class="token operator">+=</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    DigitBTable<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;\t"</span><span class="token operator">+</span>str<span class="token operator">+</span><span class="token string">"\t,\t"</span><span class="token operator">+</span><span class="token string">"3(数字)"</span><span class="token operator">+</span><span class="token string">"\t>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    bWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"("</span> <span class="token operator">+</span> <span class="token string">"3"</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">")"</span> <span class="token operator">+</span> <span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//判断是不是分界符</span>                <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">IsJiefu</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    String str <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    str <span class="token operator">+=</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;\t"</span><span class="token operator">+</span>str<span class="token operator">+</span><span class="token string">"\t,\t"</span><span class="token operator">+</span><span class="token string">"4(界符)"</span><span class="token operator">+</span><span class="token string">"\t>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    bWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"("</span> <span class="token operator">+</span> <span class="token string">"4"</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">")"</span> <span class="token operator">+</span> <span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    count<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//判断是不是关系运算</span>                <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">IsGuanxiyunsuanfu</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    String str <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'&lt;'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        str <span class="token operator">+=</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>                        count<span class="token operator">++</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'>'</span> <span class="token operator">||</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'='</span><span class="token punctuation">)</span>                        <span class="token punctuation">{</span>                            str <span class="token operator">+=</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>                            count<span class="token operator">++</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">else</span> <span class="token punctuation">{</span>                        str <span class="token operator">+=</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>                        count<span class="token operator">++</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'='</span><span class="token punctuation">)</span>                        <span class="token punctuation">{</span>                            str <span class="token operator">+=</span> content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;\t"</span><span class="token operator">+</span>str<span class="token operator">+</span><span class="token string">"\t,\t"</span><span class="token operator">+</span><span class="token string">"5(关系运算符)"</span><span class="token operator">+</span><span class="token string">"\t>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    bWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"("</span> <span class="token operator">+</span> <span class="token string">"5"</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">")"</span> <span class="token operator">+</span> <span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//关闭文件</span>        reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bReader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        <span class="token function">read_write_File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-运行示意图"><a href="#3-运行示意图" class="headerlink" title="3.运行示意图"></a>3.运行示意图</h2><p><img src="https://i.loli.net/2020/11/02/Yg9NLKv7FOb4kaH.png"></p><h2 id="4-源码在Gitee和Github上自取"><a href="#4-源码在Gitee和Github上自取" class="headerlink" title="4.源码在Gitee和Github上自取"></a>4.源码在Gitee和Github上自取</h2><p><a href="https://github.com/fejxc/Compilation-principle" target="_blank" rel="noopener">Github</a></p><p><a href="https://gitee.com/fejxc/Compilation-principle" target="_blank" rel="noopener">Gitee</a></p>]]></content>
      
      
      <categories>
          
          <category> 编译原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大三 </tag>
            
            <tag> 上机实验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破解Web校园网</title>
      <link href="posts/ff05c21a/"/>
      <url>posts/ff05c21a/</url>
      
        <content type="html"><![CDATA[<h1 id="破解Web校园网"><a href="#破解Web校园网" class="headerlink" title="破解Web校园网"></a>破解Web校园网</h1><blockquote><p>putty用来登陆路由器后台 下方百度云链接打开可以下载</p><p>WinSCP可以上传脚本到路由器   下方百度云链接打开可以下载</p><p>百度云资源里的OpenWrt固件是适用于K2的 （官方版本，英文界面）</p></blockquote><p><a href="https://pan.baidu.com/s/15C-GkWNPfrpeziyup_IbnQ" target="_blank" rel="noopener">百度云链接:</a> 密码:<code> h38h</code></p><p><a href="https://www.bilibili.com/video/BV1ea411c7te/" target="_blank" rel="noopener">b站视频教程</a></p><iframe src="//player.bilibili.com/player.html?bvid=BV1ea411c7te&cid=252581465&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><h2 id="1-准备一个已经刷好不死鸟的路由器"><a href="#1-准备一个已经刷好不死鸟的路由器" class="headerlink" title="1.准备一个已经刷好不死鸟的路由器"></a>1.准备一个已经刷好不死鸟的路由器</h2><p>K2 ，K2P ，小米， 新三路由等等 都可以</p><h2 id="2-去OpenWrt官网下载对应自己路由版本的固件"><a href="#2-去OpenWrt官网下载对应自己路由版本的固件" class="headerlink" title="2.去OpenWrt官网下载对应自己路由版本的固件"></a>2.去OpenWrt官网下载对应自己路由版本的固件</h2><h2 id="3-将固件刷好"><a href="#3-将固件刷好" class="headerlink" title="3.将固件刷好"></a>3.将固件刷好</h2><p><code>前面3个步骤不会的，可以自行度娘</code></p><h2 id="4-通过SSH登陆路由器"><a href="#4-通过SSH登陆路由器" class="headerlink" title="4.通过SSH登陆路由器"></a>4.通过SSH登陆路由器</h2><p>1.<code>ssh root@192.168.1.1 </code>  登陆路由器后台</p><p>2.<code>opkg update</code>  更新软件包</p><p>3.<code>opkg install privoxy </code>  安装privoxy代理软件</p><p>4.<code>opkg install luci-app-privoxy </code> 安装这个后，路由里才会有Service(服务) 显示privoxy 插件</p><p>5.<code>opkg install curl</code>  安装curl，为脚本自动认证做准备</p><h2 id="5-在路由器里添加自动认证脚本"><a href="#5-在路由器里添加自动认证脚本" class="headerlink" title="5.在路由器里添加自动认证脚本"></a>5.在路由器里添加自动认证脚本</h2><p>1.<code>cd /etc</code></p><p>2.<code>vim web.sh</code>    不会vim操作的，该步骤可以通过WinSCP软件代替实现 </p><p>内容：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span>studentid<span class="token operator">=</span><span class="token string">''</span> <span class="token comment" spellcheck="true"># 用户名</span>password<span class="token operator">=</span><span class="token string">''</span>      <span class="token comment" spellcheck="true"># 密码</span>IP<span class="token operator">=</span><span class="token punctuation">$(</span>ubus call network.interface.wan status <span class="token operator">|</span> <span class="token function">grep</span> \<span class="token string">"address\" | grep -oE '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')function login() {    #IP="</span>10.73.11.167<span class="token string">"    echo "</span>DDDDD<span class="token operator">=</span><span class="token variable">${studentid}</span><span class="token operator">&amp;</span>upass<span class="token operator">=</span><span class="token variable">${password}</span><span class="token operator">&amp;</span>R1<span class="token operator">=</span>0<span class="token operator">&amp;</span>R2<span class="token operator">=</span><span class="token operator">&amp;</span>R6<span class="token operator">=</span>0<span class="token operator">&amp;</span>para<span class="token operator">=</span>00<span class="token operator">&amp;</span>0MKKey<span class="token operator">=</span>123456<span class="token operator">&amp;</span>buttonClicked<span class="token operator">=</span><span class="token operator">&amp;</span>redirect_url<span class="token operator">=</span><span class="token operator">&amp;</span>err_flag<span class="token operator">=</span><span class="token operator">&amp;</span>username<span class="token operator">=</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token operator">&amp;</span>user<span class="token operator">=</span><span class="token operator">&amp;</span>cmd<span class="token operator">=</span><span class="token operator">&amp;</span>Login<span class="token operator">=</span><span class="token operator">&amp;</span>R7<span class="token operator">=</span>0<span class="token string">"    statusfull=$(curl 'http://192.168.167.46/a70.htm' \        -X POST \        -H "</span>Cookie: program<span class="token operator">=</span>ip<span class="token punctuation">;</span> vlan<span class="token operator">=</span>0<span class="token punctuation">;</span> md5_login2<span class="token operator">=</span><span class="token variable">${studentid}</span>%7C<span class="token variable">${password}</span><span class="token punctuation">;</span> ip<span class="token operator">=</span><span class="token variable">${IP}</span><span class="token string">" \        --data-raw "</span>DDDDD<span class="token operator">=</span><span class="token variable">${studentid}</span><span class="token operator">&amp;</span>upass<span class="token operator">=</span><span class="token variable">${password}</span><span class="token operator">&amp;</span>R1<span class="token operator">=</span>0<span class="token operator">&amp;</span>R2<span class="token operator">=</span><span class="token operator">&amp;</span>R6<span class="token operator">=</span>0<span class="token operator">&amp;</span>para<span class="token operator">=</span>00<span class="token operator">&amp;</span>0MKKey<span class="token operator">=</span>123456<span class="token operator">&amp;</span>buttonClicked<span class="token operator">=</span><span class="token operator">&amp;</span>redirect_url<span class="token operator">=</span><span class="token operator">&amp;</span>err_flag<span class="token operator">=</span><span class="token operator">&amp;</span>username<span class="token operator">=</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token operator">&amp;</span>user<span class="token operator">=</span><span class="token operator">&amp;</span>cmd<span class="token operator">=</span><span class="token operator">&amp;</span>Login<span class="token operator">=</span><span class="token operator">&amp;</span>R7<span class="token operator">=</span>0<span class="token string">")    echo "</span><span class="token variable">${statusfull}</span><span class="token string">"    status=$(echo "</span><span class="token variable">${statusfull}</span><span class="token string">" | grep -a -oE '&lt;!--Dr.COMWebLoginID_[0-9]\.htm-->')    echo <span class="token variable">${status}</span>    if [ <span class="token variable">$status</span> == '&lt;!--Dr.COMWebLoginID_2.htm-->' ]; then        errormsg=$(echo "</span><span class="token variable">${statusfull}</span><span class="token string">" | grep 'msga' | grep -oE "</span>msga<span class="token operator">=</span><span class="token string">'.*'</span><span class="token string">")        logger -t "</span>校园网认证<span class="token string">" "</span>Login Failed:<span class="token variable">${errormsg}</span><span class="token string">"        echo "</span>Log Failed:<span class="token variable">${errormsg}</span><span class="token string">"        sleep 1        login    else        lasturl=$(echo "</span><span class="token variable">${statusfull}</span><span class="token string">" | grep 'UL' | grep -oE "</span>UL<span class="token operator">=</span><span class="token string">'.*'</span><span class="token string">")        logger -t "</span>校园网认证<span class="token string">" "</span>Login Success:<span class="token variable">${lasturl}</span><span class="token string">"    fi}function checkstatus() {    status=$(curl 'http://192.168.167.46/' \        -H "</span>Cookie: program<span class="token operator">=</span>ip<span class="token punctuation">;</span> vlan<span class="token operator">=</span>0<span class="token punctuation">;</span> md5_login2<span class="token operator">=</span><span class="token variable">${studentid}</span>%7C<span class="token variable">${password}</span><span class="token punctuation">;</span> ip<span class="token operator">=</span><span class="token variable">${IP}</span>" <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">'Dr.COMWebLoginID'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 3成功2失败</span><span class="token keyword">function</span> oneloop<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    checkstatus    <span class="token keyword">echo</span> <span class="token variable">${status}</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$status</span> <span class="token operator">==</span> <span class="token string">'&lt;!--Dr.COMWebLoginID_1.htm-->'</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token keyword">echo</span> <span class="token string">'Normal'</span>        logger <span class="token string">'Normal'</span>        <span class="token function">sleep</span> 1    <span class="token keyword">else</span>        logger -t <span class="token string">"校园网认证"</span> <span class="token string">"Disconnected"</span>        <span class="token function">sleep</span> 13 <span class="token comment" spellcheck="true"># 虽然报错是3s，但是实际上应该是13s，猜测是检测10s+冷却3s</span>        logger -t <span class="token string">"校园网认证"</span> <span class="token string">"Try to Connect"</span>        login        <span class="token keyword">echo</span> <span class="token string">'Logged'</span>    <span class="token keyword">fi</span><span class="token punctuation">}</span><span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span>    oneloop<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.<code> chmod 777 web.sh</code>    修改文件权限 这里我直接给了最高</p><p>4.<code>cd /etc</code></p><p>5.<code>vim rc.local</code>  设置配置路由器启动后，自动执行自己添加的脚本</p><p>增加代码</p><pre class="line-numbers language-bash"><code class="language-bash">/etc/web.sh <span class="token operator">></span>dev/null 2<span class="token operator">&amp;</span>1 <span class="token operator">&amp;</span><span class="token keyword">exit</span> 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5-配置Privoxy"><a href="#5-配置Privoxy" class="headerlink" title="5.配置Privoxy"></a>5.配置Privoxy</h2><p><img src="https://i.loli.net/2020/11/01/HGXAbyCjIaL98Od.jpg"></p><p><img src="https://i.loli.net/2020/11/01/ThWBtALZxCgSJQK.jpg"></p><p><img src="https://i.loli.net/2020/11/01/cWzRK1QosuIfMd9.jpg"></p><p>打开<code>http://config.privoxy.org/edit-actions-list?f=0</code></p><p>在Action 那一列中，hide-user-agent 改选为 Enable（绿色） </p><h2 id="6-配置防火墙规则"><a href="#6-配置防火墙规则" class="headerlink" title="6.配置防火墙规则"></a>6.配置防火墙规则</h2><pre class="line-numbers language-bash"><code class="language-bash">iptables -t nat -N ntp_force_localiptables -t nat -I PREROUTING -p udp --dport 123 -j ntp_force_localiptables -t nat -A ntp_force_local -d 0.0.0.0/8 -j RETURNiptables -t nat -A ntp_force_local -d 127.0.0.0/8 -j RETURNiptables -t nat -A ntp_force_local -d 192.168.0.0/16 -j RETURNiptables -t nat -A ntp_force_local -s 192.168.0.0/16 -j DNAT --to-destination 192.168.1.1iptables -t nat -N http_ua_dropiptables -t nat -I PREROUTING -p tcp --dport 80 -j http_ua_dropiptables -t nat -A http_ua_drop -d 0.0.0.0/8 -j RETURNiptables -t nat -A http_ua_drop -d 127.0.0.0/8 -j RETURNiptables -t nat -A http_ua_drop -d 192.168.0.0/16 -j RETURNiptables -t nat -I http_ua_drop -m mac --mac-source **:**:**:**:**:** -j RETURN iptables -t nat -A http_ua_drop -p tcp -j REDIRECT --to-port 8118 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>iptables -t nat -I http_ua_drop -m mac --mac-source **:**:**:**:**:** -j RETURN </code></p><p>这条规则的意思是让该mac地址设备流量不走代理</p><h2 id="7-同步时间"><a href="#7-同步时间" class="headerlink" title="7.同步时间"></a>7.同步时间</h2><p><img src="https://i.loli.net/2020/11/01/aPuvhVdHBc67nQE.jpg"></p><p>参考来自<a href="https://www.cnblogs.com/cloudbird/archive/2019/02/20/10406936.html" target="_blank" rel="noopener">https://www.cnblogs.com/cloudbird/archive/2019/02/20/10406936.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 校园网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github pages的Custom domain配置</title>
      <link href="posts/3d825c55/"/>
      <url>posts/3d825c55/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo发布后，github-pages的Custom-domain配置项被清空"><a href="#hexo发布后，github-pages的Custom-domain配置项被清空" class="headerlink" title="hexo发布后，github pages的Custom domain配置项被清空"></a>hexo发布后，github pages的Custom domain配置项被清空</h1><pre><code>hexo cleanhexo ghexo d</code></pre><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p><code>命令执行，每次发布可以成功，但是发布成功之后github pages的Custom domain配置项就被清空了，要手动进入setting上重新设置好然后save</code></p><h3 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h3><p><code>在source目录下 新建 CNAME文件 不指定类型</code></p><p><code>在CNAME里写你的域名地址</code></p>]]></content>
      
      
      <categories>
          
          <category> Bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github与gitee代码同步push教程</title>
      <link href="posts/3297a20a/"/>
      <url>posts/3297a20a/</url>
      
        <content type="html"><![CDATA[<h1 id="github与gitee代码同步push教程"><a href="#github与gitee代码同步push教程" class="headerlink" title="github与gitee代码同步push教程"></a>github与gitee代码同步push教程</h1><h2 id="步骤1："><a href="#步骤1：" class="headerlink" title="步骤1："></a>步骤1：</h2><pre><code>在gitee在已经有仓库复制该仓库的 https://gitee.com/*******.git 的https地址</code></pre><h2 id="步骤2"><a href="#步骤2" class="headerlink" title="步骤2:"></a>步骤2:</h2><p><img src="https://i.loli.net/2020/10/29/AUy38BqXa6MwRLb.png"></p><p>选择<code>Import repository</code></p><h2 id="步骤3"><a href="#步骤3" class="headerlink" title="步骤3:"></a>步骤3:</h2><p><img src="https://i.loli.net/2020/10/29/GXzfPomnd5WZ4bK.png"></p><p>``URL 输入刚刚gitee上的 <a href="https://gitee.com/*******.git%60" target="_blank" rel="noopener">https://gitee.com/*******.git`</a></p><p><code>fejxc/写你在github上的仓库名</code></p><p><code>然后点击 Begin import 即可</code></p><h2 id="步骤4"><a href="#步骤4" class="headerlink" title="步骤4:"></a>步骤4:</h2><p>1.先将gitee项目的代码克隆到本地电脑</p><p>2.然后修改config文件   文件在 <code>.git/concig</code></p><p>3.修改如下</p><pre><code>[core]    repositoryformatversion = 0    filemode = true    bare = false    logallrefupdates = true    ignorecase = true    precomposeunicode = true[remote &quot;origin&quot;]    # github    url = git@github.com:*****.git  #add code    # gitee    url = https://gitee.com/*****.git    fetch = +refs/heads/*:refs/remotes/origin/*[branch &quot;master&quot;]  #add code    remote = origin    merge = refs/heads/master</code></pre><h2 id="步骤5"><a href="#步骤5" class="headerlink" title="步骤5:"></a>步骤5:</h2><p>验证代码：</p><pre><code>git add .git commit -m &quot;init&quot;git push</code></pre><h2 id="成功图示："><a href="#成功图示：" class="headerlink" title="成功图示："></a>成功图示：</h2><p><img src="https://i.loli.net/2020/10/29/ewKI8izumR6JkhV.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openWrt卸载已经安装的ipk安装包教程</title>
      <link href="posts/6b7e8dff/"/>
      <url>posts/6b7e8dff/</url>
      
        <content type="html"><![CDATA[<h1 id="openWrt卸载已经安装的ipk安装包教程"><a href="#openWrt卸载已经安装的ipk安装包教程" class="headerlink" title="openWrt卸载已经安装的ipk安装包教程"></a>openWrt卸载已经安装的ipk安装包教程</h1><h2 id="1-环境"><a href="#1-环境" class="headerlink" title="1.环境"></a>1.环境</h2><p> 系统：OpenWrt 18.06.4</p><p>内核版本：4.14.131</p><h2 id="2-安装ipk"><a href="#2-安装ipk" class="headerlink" title="2.安装ipk"></a>2.安装ipk</h2><p><code>cd /ipk的文件路径</code></p><p><code>opkg install ***.ipk</code></p><h2 id="3-卸载ipk"><a href="#3-卸载ipk" class="headerlink" title="3.卸载ipk"></a>3.卸载ipk</h2><p><code>opkg list_installed</code>  查看已经安装的ipk</p><p><img src="https://i.loli.net/2020/10/28/M36mUtJCkWwxuSc.png"></p><p><code>opkg remove ***.ipk</code></p><p><img src="https://i.loli.net/2020/10/28/ROX9uAfQLcNTVSC.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE使用axios数据请求时报错 TypeError Cannot set property &#39;xxxx&#39; of undefined 的解决办法</title>
      <link href="posts/bc255aa6/"/>
      <url>posts/bc255aa6/</url>
      
        <content type="html"><![CDATA[<h1 id="vue中使用bootstrap的两种方法"><a href="#vue中使用bootstrap的两种方法" class="headerlink" title="vue中使用bootstrap的两种方法"></a>vue中使用bootstrap的两种方法</h1><h1 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h1><p>在index.html页面中引入即可</p><h1 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h1><p>npm i bootstrap –save下载以后<br> 在src/main.js中导入即可：<br> <code>import &#39;bootstrap/dist/css/bootstrap.min.css&#39;</code></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue入门</title>
      <link href="posts/df7b5028/"/>
      <url>posts/df7b5028/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Vue入门"><a href="#1-Vue入门" class="headerlink" title="1.Vue入门"></a>1.Vue入门</h2><h3 id="1-1下载Vuejs"><a href="#1-1下载Vuejs" class="headerlink" title="1.1下载Vuejs"></a>1.1下载Vuejs</h3><p>[<a href="https://cn.vuejs.org]">https://cn.vuejs.org]</a></p><h3 id="1-2Vue入门"><a href="#1-2Vue入门" class="headerlink" title="1.2Vue入门"></a>1.2Vue入门</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Title<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>        <span class="token punctuation">{</span><span class="token punctuation">{</span>  msg  <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>pwd<span class="token punctuation">}</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>span<span class="token operator">></span>            <span class="token punctuation">{</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span>            <span class="token operator">&lt;</span>h1<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>            <span class="token operator">&lt;</span>h2<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>pwd<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"../static/vue.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//用来给vue实例定义一个范围</span>            data<span class="token punctuation">:</span><span class="token punctuation">{</span>                msg<span class="token punctuation">:</span> <span class="token string">"欢迎学习vue！"</span><span class="token punctuation">,</span>                name<span class="token punctuation">:</span><span class="token string">"sunyun"</span><span class="token punctuation">,</span>                pwd<span class="token punctuation">:</span><span class="token string">"11111"</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//给vue定义一些相关数据</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span> <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>h3<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>        <span class="token operator">&lt;</span>h3<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>        <span class="token operator">&lt;</span>h3<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>age<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>        <span class="token operator">&lt;</span>h3<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>lists<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>lists<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>        <span class="token operator">&lt;</span>h3<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>users<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>age<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"../static/vue.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//用来给vue实例定义一个范围</span>            data<span class="token punctuation">:</span><span class="token punctuation">{</span>                msg<span class="token punctuation">:</span> <span class="token string">"欢迎学习vue！"</span><span class="token punctuation">,</span>                user<span class="token punctuation">:</span><span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token string">"sunyun"</span><span class="token punctuation">,</span>msg<span class="token punctuation">:</span><span class="token string">"handsomeBoy!"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                age<span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">,</span>                lists<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"jiangxi"</span><span class="token punctuation">,</span><span class="token string">"shangrao"</span><span class="token punctuation">,</span><span class="token string">"yushan"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                users<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token string">"sy"</span><span class="token punctuation">,</span>age<span class="token punctuation">:</span><span class="token string">"20"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>naem<span class="token punctuation">:</span><span class="token string">"hauhau"</span><span class="token punctuation">,</span>age<span class="token punctuation">:</span><span class="token string">"21"</span><span class="token punctuation">}</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//给vue定义一些相关数据</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>h3<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>msg<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"../static/vue.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//用来给vue实例定义一个范围</span>            data<span class="token punctuation">:</span><span class="token punctuation">{</span>                msg<span class="token punctuation">:</span> <span class="token string">"vue"</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//给vue定义一些相关数据</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span>总结</span><span class="token code keyword">    1.vue实例对象中的el属性： 代表Vue的作用范围  日后Vue的用作范围都可以用Vue语法</span><span class="token code keyword">    2.Vue实例中的data属性： 用来给Vue实例绑定一些相关的数据，绑定的数据可以通过{{变量名}}在Vue作用范围内去取出来</span><span class="token code keyword">    3.在使用{{}}取值可以书写表达式以及逻辑运算，调用相关的方法</span><span class="token code keyword">    4.el属性可以书写任意的css选择器，在Vue开发时候推荐使用id选择器</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-v-text和v-html"><a href="#2-v-text和v-html" class="headerlink" title="2. v-text和v-html"></a>2. v-text和v-html</h2><h3 id="2-1-v-text"><a href="#2-1-v-text" class="headerlink" title="2.1 v-text"></a>2.1 v-text</h3><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span>总结</span>1.使用v-text取值会覆盖标签中原有的数据，使用{{}}则不会覆盖2.使用v-text可以避免在网络环境差的情况下出现插值闪烁<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-2-v-html"><a href="#2-2-v-html" class="headerlink" title="2.2 v-html"></a>2.2 v-html</h3><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac下mysql突然启动不了的解决办法</title>
      <link href="posts/9189da84/"/>
      <url>posts/9189da84/</url>
      
        <content type="html"><![CDATA[<h1 id="mac下mysql突然启动不了的解决办法"><a href="#mac下mysql突然启动不了的解决办法" class="headerlink" title="mac下mysql突然启动不了的解决办法"></a>mac下mysql突然启动不了的解决办法</h1><h2 id="1-输入："><a href="#1-输入：" class="headerlink" title="1.输入："></a>1.输入：</h2><h3 id="sudo-chown-R-mysql-usr-local-mysql-data"><a href="#sudo-chown-R-mysql-usr-local-mysql-data" class="headerlink" title="sudo chown -R mysql /usr/local/mysql/data"></a><code>sudo chown -R mysql /usr/local/mysql/data</code></h3><h2 id="2-原因是某种情况下导致”-usr-local-MySQL-data”的拥有者发生了改变，所以只需要将其拥有者修改为“mysql“就可以了。"><a href="#2-原因是某种情况下导致”-usr-local-MySQL-data”的拥有者发生了改变，所以只需要将其拥有者修改为“mysql“就可以了。" class="headerlink" title="2.原因是某种情况下导致”/usr/local/MySQL/data”的拥有者发生了改变，所以只需要将其拥有者修改为“mysql“就可以了。"></a>2.原因是某种情况下导致”/usr/local/MySQL/data”的拥有者发生了改变，所以只需要将其拥有者修改为“mysql“就可以了。</h2>]]></content>
      
      
      <categories>
          
          <category> Bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑记录 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE使用axios数据请求时报错 TypeError Cannot set property &#39;xxxx&#39; of undefined 的解决办法</title>
      <link href="posts/bc255aa6/"/>
      <url>posts/bc255aa6/</url>
      
        <content type="html"><![CDATA[<h1 id="VUE使用axios数据请求时报错-TypeError-Cannot-set-property-‘xxxx’-of-undefined-的解决办法"><a href="#VUE使用axios数据请求时报错-TypeError-Cannot-set-property-‘xxxx’-of-undefined-的解决办法" class="headerlink" title="VUE使用axios数据请求时报错 TypeError: Cannot set property ‘xxxx’ of undefined 的解决办法"></a>VUE使用axios数据请求时报错 TypeError: Cannot set property ‘xxxx’ of undefined 的解决办法</h1><h2 id="1-报错图示"><a href="#1-报错图示" class="headerlink" title="1.报错图示"></a>1.报错图示</h2><p><img src="https://i.loli.net/2020/10/27/oVzENYtSadu98Z7.png"></p><h2 id="2-正常的在data中定义了users"><a href="#2-正常的在data中定义了users" class="headerlink" title="2.正常的在data中定义了users"></a>2.正常的在data中定义了users</h2><pre class="line-numbers language-vue"><code class="language-vue"><script>    export default {        name: "User",        data(){            return{                 users:[]            }        },        methods:{},        components:{},        created() {            this.$http.get("http://rap2api.taobao.org/app/mock/269320/findAll?page=1&rows=4").then(function (respose) {                console.log(respose.data);                this.users = respose.data.results;            })        },    }</script><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-报错分析"><a href="#3-报错分析" class="headerlink" title="3.报错分析"></a>3.报错分析</h2><p>在函数里面进行赋值<br><code>this.users = respose.data.results;</code><br>这时候你运行时会发现，数据可以请求到，但是会报错TypeError: Cannot set property ‘users’ of undefined</p><p>主要原因是：</p><p>在 then的内部不能使用Vue的实例化的this, 因为在内部 this 没有被绑定。</p><h2 id="4-解决方案"><a href="#4-解决方案" class="headerlink" title="4.解决方案"></a>4.解决方案</h2><h3 id="1、在请求axios外面定义一下-let-this-this"><a href="#1、在请求axios外面定义一下-let-this-this" class="headerlink" title="1、在请求axios外面定义一下 let _this=this"></a>1、在请求axios外面定义一下<code> let _this=this</code></h3><pre class="line-numbers language-vue"><code class="language-vue">created() {            let _this=this;            this.$http.get("http://rap2api.taobao.org/app/mock/269320/findAll?page=1&rows=4").then(function (respose) {                console.log(respose.data);                _this.users = respose.data.results;            })        },<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、用ES6箭头函数，箭头方法可以和父方法共享变量"><a href="#2、用ES6箭头函数，箭头方法可以和父方法共享变量" class="headerlink" title="2、用ES6箭头函数，箭头方法可以和父方法共享变量"></a>2、用ES6箭头函数，箭头方法可以和父方法共享变量</h3><pre class="line-numbers language-vue"><code class="language-vue">created() {            this.$http.get("http://rap2api.taobao.org/app/mock/269320/findAll?page=1&rows=4").then( (respose) =>{                console.log(respose.data);                this.users = respose.data.results;            })        },<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-效果"><a href="#5-效果" class="headerlink" title="5.效果"></a>5.效果</h2><p><img src="https://i.loli.net/2020/10/27/vzlqMfJcrm8WjTF.png"></p>]]></content>
      
      
      <categories>
          
          <category> Bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 踩坑记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue CLI脚手架</title>
      <link href="posts/3b9361d9/"/>
      <url>posts/3b9361d9/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Vue-CLI脚手架"><a href="#1-Vue-CLI脚手架" class="headerlink" title="1.Vue CLI脚手架"></a>1.Vue CLI脚手架</h2><h3 id="1-1什么是CLI"><a href="#1-1什么是CLI" class="headerlink" title="1.1什么是CLI"></a>1.1什么是CLI</h3><p>​        命令行界面<strong>（英语：</strong>command-line interface<strong>，<a href="https://baike.baidu.com/item/%E7%BC%A9%E5%86%99/1948062" target="_blank" rel="noopener">缩写</a>：</strong>CLI<strong>）是在<a href="https://baike.baidu.com/item/%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2/3352324" target="_blank" rel="noopener">图形用户界面</a>得到普及之前使用最为广泛的<a href="https://baike.baidu.com/item/%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2/6582461" target="_blank" rel="noopener">用户界面</a>，它通常不支持<a href="https://baike.baidu.com/item/%E9%BC%A0%E6%A0%87/122323" target="_blank" rel="noopener">鼠标</a>，用户通过键盘输入指令，计算机接收到指令后，予以执行。也有人称之为</strong>字符用户界面**（<a href="https://baike.baidu.com/item/CUI/7671744" target="_blank" rel="noopener">CUI</a>）。</p><h3 id="1-2什么是Vue-CLI"><a href="#1-2什么是Vue-CLI" class="headerlink" title="1.2什么是Vue CLI"></a>1.2什么是Vue CLI</h3><p>​        Vue CLI 是一个基于 Vue.js 进行快速开发的完整系统。使用Vue脚手架之后开发之后的页面是一个完整的系统。</p><h3 id="1-3VueCLI优势"><a href="#1-3VueCLI优势" class="headerlink" title="1.3VueCLI优势"></a>1.3VueCLI优势</h3><ul><li><p>通过 <code>@vue/cli</code> 实现的交互式的项目脚手架。</p></li><li><p>通过 <code>@vue/cli</code> + <code>@vue/cli-service-global</code> 实现的零配置原型开发。vuejs vuerouter axios(一条命令)</p></li><li><p>一个运行时依赖 (</p><pre><code>@vue/cli-service</code></pre><p>)，该依赖：</p><ul><li>可升级；</li><li>基于 webpack 构建，并带有合理的默认配置；<code>webpack项目打包的方式，编译好的项目源码，部署到服务器上直接使用。</code></li><li>可以通过项目内的配置文件进行配置； 修改配置文件，达到自己想要的环境。</li><li>可以通过插件进行扩展。 vue v-charts ……</li></ul></li><li><p>一个丰富的官方插件集合，集成了前端生态中最好的工具。 Nodejs(tomcat) Vue VueRouter webpack yarn</p></li><li><p>一套完全图形化的创建和管理 Vue.js 项目的用户界面。</p></li></ul><h3 id="1-4Vue-CLI安装"><a href="#1-4Vue-CLI安装" class="headerlink" title="1.4Vue CLI安装"></a>1.4Vue CLI安装</h3><h4 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h4><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 1.下载nodejs</span><span class="token code keyword">    http://nodejs.cn/download/</span><span class="token code keyword">    windows .msi(exe)  .zip（压缩包）直接解压路径</span><span class="token code keyword">    mac .pkg(安装包)自动配置  .tar.gz（压缩包)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/10/27/lQuBxM9ntbTaGzP.png"></p><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 2.nodejs环境配置</span><span class="token code keyword">    windows系统：</span><span class="token code keyword">        1.计算机属性---》 高级属性 ----》 环境变量 添加如下配置：</span><span class="token code keyword">            NODE_HOME = nodejs安装目录</span><span class="token code keyword">            PATH = xxxx;%NODE_HOME%/bin</span><span class="token code keyword">    mac系统：</span><span class="token code keyword">        pkg 自动配置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/10/27/7zgK4GMbOTFHlJq.png" alt="mac下pkg安装"></p><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 3.检查安装</span><span class="token code keyword">    node -v</span><span class="token title important"><span class="token punctuation">#</span> 4.npm的介绍</span><span class="token code keyword">    node package mangager nodejs包的管理工具  前端主流技术都可以用npm 进行同意管理</span><span class="token code keyword">    maven 管理java后端依赖  远程仓库  阿里云镜像</span><span class="token code keyword">    npm 管理前端系统依赖    远程仓库(中心仓库，在国外) 淘宝镜像</span><span class="token title important"><span class="token punctuation">#</span> 5.配置淘宝镜像</span><span class="token code keyword">    npm config set registry https://registry.npm.taobao.org</span><span class="token title important"><span class="token punctuation">#</span> 6配置后可通过下面方式来验证是否成功</span><span class="token code keyword">    npm config get registry</span><span class="token code keyword">    或 npm info express</span><span class="token title important"><span class="token punctuation">#</span> 7.配置npm下载依赖的位置  (不推荐配置 配置后mac输入vue会报错)</span><span class="token code keyword">    查看默认位置：npm config ls  </span><span class="token code keyword">    npm config set cache /Users/sunyun/Documents/nodereps/...</span><span class="token code keyword">    npm config set prefix /Users/sunyun/Documents/nodereps/...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/10/27/CKLpm31hOYTUXM7.png"></p><h4 id="2-安装脚手架"><a href="#2-安装脚手架" class="headerlink" title="2.安装脚手架"></a>2.安装脚手架</h4><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 0.删除旧的版本的脚手架</span><span class="token code keyword">    npm uninstall -g @vue/cli  //3版本</span><span class="token code keyword">    num uninstall -g vue-cli //2版本</span><span class="token title important"><span class="token punctuation">#</span> 1.Vue CLI的安装</span><span class="token code keyword">    https://github.com/vuejs/vue-cli/tree/v2#vue-cli--</span><span class="token title important"><span class="token punctuation">#</span> 2.安装Vue CLI</span><span class="token code keyword">    npm install -g vue-cli  //2版本的脚手架</span><span class="token title important"><span class="token punctuation">#</span> 3. mac 提示Vue not found</span>exoprt PATH="$PATH:/Users/sunyun/Documents/nodereps/npm<span class="token italic"><span class="token punctuation">_</span>global/bin/vue"Last login: Tue Oct 27 13:15:56 on ttys000sunyun@MacBook-Pro ~ % npm install -g vue-clinpm WARN deprecated vue-cli@2.9.6: This package has been deprecated in favour of @vue/clinpm WARN deprecated coffee-script@1.12.7: CoffeeScript on NPM has moved to "coffeescript" (no hyphen)npm WARN deprecated har-validator@5.1.5: this/Users/sunyun/Documents/nodereps/npm<span class="token punctuation">_</span></span>global/bin/vue -> /Users/sunyun/Documents/nodereps/npm<span class="token italic"><span class="token punctuation">_</span>global/lib/node<span class="token punctuation">_</span></span>modules/vue-cli/bin/vue/Users/sunyun/Documents/nodereps/npm<span class="token italic"><span class="token punctuation">_</span>global/bin/vue-init -> /Users/sunyun/Documents/nodereps/npm<span class="token punctuation">_</span></span>global/lib/node<span class="token italic"><span class="token punctuation">_</span>modules/vue-cli/bin/vue-init/Users/sunyun/Documents/nodereps/npm<span class="token punctuation">_</span></span>global/bin/vue-list -> /Users/sunyun/Documents/nodereps/npm<span class="token italic"><span class="token punctuation">_</span>global/lib/node<span class="token punctuation">_</span></span>modules/vue-cli/bin/vue-list<span class="token list punctuation">+</span> vue-cli@2.9.6updated 1 package in 6.825ssunyun@MacBook-Pro ~ % <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-第一个Vue-CLI脚手架项目"><a href="#3-第一个Vue-CLI脚手架项目" class="headerlink" title="3.第一个Vue CLI脚手架项目"></a>3.第一个Vue CLI脚手架项目</h4><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 1.创建vue脚手架的第一个项目</span><span class="token code keyword">    vue init webpack hello(项目名)</span><span class="token title important"><span class="token punctuation">#</span> 2.创建第一个项目</span><span class="token code keyword">    sunyun@MacBook-Pro Vue_CLI % vue init webpack hello</span>? Project name hello? Project description A Vue.js project? Author 风儿继续吹 &lt;1031364436@qq.com>? Vue build standalone? Install vue-router? Yes? Use ESLint to lint your code? No? Set up unit tests No? Setup e2e tests with Nightwatch? No? Should we run <span class="token code keyword">`npm install`</span> for you after the project has been created? (recommended) npm   vue-cli · Generated "hello"<span class="token title important"><span class="token punctuation">#</span> Project initialization finished!</span><span class="token title important"><span class="token punctuation">#</span> ========================</span>To get started:  cd hello  npm run devDocumentation can be found at https://vuejs-templates.github.io/webpacksunyun@MacBook-Pro Vue_CLI % <span class="token title important"><span class="token punctuation">#</span> 3.如何运行</span><span class="token code keyword">     cd 到项目名 package.json 同级目录下 (根目录)</span><span class="token code keyword">     npm start</span><span class="token code keyword">     Your application is running here: http://localhost:8080     </span><span class="token title important"><span class="token punctuation">#</span> 4.vue cli 中项目的开发方式</span><span class="token code keyword">     注意⚠️：一切皆组件，一个组件 js代码 html代码 css样式</span><span class="token code keyword">    1. VueCli开发方式是在项目中开发一个一个组件的对应一个业务功能模块，日后可以将多个组件组合一起形成一个前端系        统</span><span class="token code keyword">    2.日后在使用不饿cli开发时候，不再书写html，编写的是一个组件，日后打包成vue时，cli会将vue编译成运行的html</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/10/27/XQJvBfLFRThwSrC.png" alt="运行成功界面"></p><p><img src="https://i.loli.net/2020/10/27/YZ9rn3gXTh4tuM8.png" alt="vue cli项目文件结构"></p><h3 id="1-5vue-CLI的第一个入门案例"><a href="#1-5vue-CLI的第一个入门案例" class="headerlink" title="1.5vue CLI的第一个入门案例"></a>1.5vue CLI的第一个入门案例</h3><p><a href="https://gitee.com/fejxc/vue-cli" target="_blank" rel="noopener">源码在码云Gitee上</a></p><h2 id="2-在脚手架中安装axios"><a href="#2-在脚手架中安装axios" class="headerlink" title="2.在脚手架中安装axios"></a>2.在脚手架中安装axios</h2><h3 id="2-1安装axios"><a href="#2-1安装axios" class="headerlink" title="2.1安装axios"></a>2.1安装axios</h3><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 1.安装axios</span><span class="token code keyword">    npm install axios --save-dev</span><span class="token title important"><span class="token punctuation">#</span> 2.配置main.js中引入axios</span><span class="token code keyword">    import axios from 'axios'</span><span class="token code keyword">    Vue.prototype.$http=axios; //修改内部的$http为axios</span><span class="token code keyword">    注意：$http 是vue内部的异步，没有axios好</span><span class="token title important"><span class="token punctuation">#</span> 3.使用axios</span><span class="token code keyword">    在需要发异步请求的地方： this.$http.get("url").then((res))=>{})</span><span class="token code keyword">    this.$http.post("url").then((res))=>{})</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-Vue-CLI脚手架项目的打包和部署"><a href="#3-Vue-CLI脚手架项目的打包和部署" class="headerlink" title="3.Vue CLI脚手架项目的打包和部署"></a>3.Vue CLI脚手架项目的打包和部署</h2><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 1.在项目的根目录，就是有package.json文件的同级目录，执行如下命令</span><span class="token code keyword">    npm run build</span><span class="token code keyword">    b</span><span class="token code keyword">    注意：vue cli 打包的项目必须在服务器上运行，不能直接双击运行</span><span class="token title important"><span class="token punctuation">#</span> 2.大包之后变化</span><span class="token code keyword">    在打包后，项目中出现dist目录，就是vue cli 的部署目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令清单</title>
      <link href="posts/4e9d4f4b/"/>
      <url>posts/4e9d4f4b/</url>
      
        <content type="html"><![CDATA[<h3 id="git常用命令清单"><a href="#git常用命令清单" class="headerlink" title="git常用命令清单"></a>git常用命令清单</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> init<span class="token function">git</span> status/**红色 文件修改 还没添加到版本库绿色 文件已经添加到版本库 还没有提交*/<span class="token function">git</span> config --global user.name <span class="token string">""</span><span class="token function">git</span> config --global user.email <span class="token string">""</span><span class="token function">git</span> add xxx<span class="token function">git</span> commit -m <span class="token string">""</span><span class="token function">git</span> log<span class="token function">git</span> log --pretty<span class="token operator">=</span>oneline<span class="token function">git</span> reflog //显示所有历史版本记录<span class="token function">git</span> reset --hard 版本id //回退版本<span class="token function">git</span> checkout -- 文件 //撤回工作区的修改<span class="token function">git</span> reset HEAD 文件 //撤回暂存区的修改，要先reset 然后 checkout<span class="token function">git</span> checkout --文件//版本库的删除<span class="token function">rm</span> 文件 目录<span class="token function">git</span> <span class="token function">rm</span> 文件 目录<span class="token function">git</span> commit -m <span class="token string">""</span>//取消删除<span class="token function">git</span> checkout -- 文件名//创建分支<span class="token function">git</span> checkout -b 分支名//切换分支<span class="token function">git</span> checkout 分支名//合并分支（先切换到主分支）<span class="token function">git</span> merge 要合并的分支名//远程仓库操作<span class="token function">git</span> clone url<span class="token function">git</span> remote add origin url  //将对本地git添加远程仓库<span class="token function">git</span> remote remove origin //删除原有的仓库地址<span class="token function">git</span> push -u origin 分支名 //本地分支推送到远程仓库<span class="token function">git</span> push -f origin 分支名  //-u更新 -f强制更新<span class="token function">git</span> push -d origin 分支名<span class="token function">git</span> pull origin 分支名    ssh-keygen -t rsa -C <span class="token string">"gitee/github用户名"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用命令</title>
      <link href="posts/caff8000/"/>
      <url>posts/caff8000/</url>
      
        <content type="html"><![CDATA[<h1 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h1><h2 id="1-创建版本库"><a href="#1-创建版本库" class="headerlink" title="1-创建版本库"></a>1-创建版本库</h2><p>什么是版本库呢？版本库又名仓库，英文名<strong>repository</strong>，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p><p>所以，创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：</p><p><img src="https://i.loli.net/2020/10/15/Y9wro58utA4ET7c.png"></p><pre><code>$ mkdir learngit$ cd learngit$ pwd/Users/michael/learngit</code></pre><p><code>pwd</code>命令用于显示当前目录。在我的Mac上，这个仓库位于<code>/Users/michael/learngit</code>。</p><p> 如果你使用Windows系统，为了避免遇到各种莫名其妙的问题，请确保目录名（包括父目录）不包含中文。</p><p>第二步，通过<code>git init</code>命令把这个目录变成Git可以管理的仓库：</p><pre><code>$ git initInitialized empty Git repository in /Users/michael/learngit/.git/</code></pre><p>瞬间Git就把仓库建好了，而且告诉你是一个空的仓库（empty Git repository），细心的读者可以发现当前目录下多了一个<code>.git</code>的目录，这个目录是Git来跟踪管理版本库的，没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。</p><p>如果你没有看到<code>.git</code>目录，那是因为这个目录默认是隐藏的，用<code>ls -ah</code>命令就可以看见。</p><p>言归正传，现在我们编写一个<code>readme.txt</code>文件，内容如下：</p><pre><code>Git is a version control system.Git is free software.</code></pre><p>一定要放到<code>learngit</code>目录下（子目录也行），因为这是一个Git仓库，放到其他地方Git再厉害也找不到这个文件。</p><p>和把大象放到冰箱需要3步相比，把一个文件放到Git仓库只需要两步。</p><p>第一步，用命令<code>git add</code>告诉Git，把文件添加到仓库：</p><pre><code>$ git add readme.txt</code></pre><p>执行上面的命令，没有任何显示，这就对了，Unix的哲学是“没有消息就是好消息”，说明添加成功。</p><p>第二步，用命令<code>git commit</code>告诉Git，把文件提交到仓库：</p><pre><code>$ git commit -m &quot;wrote a readme file&quot;[master (root-commit) eaadf4e] wrote a readme file 1 file changed, 2 insertions(+) create mode 100644 readme.txt</code></pre><p>简单解释一下<code>git commit</code>命令，<code>-m</code>后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。</p><p>嫌麻烦不想输入<code>-m &quot;xxx&quot;</code>行不行？确实有办法可以这么干，但是强烈不建议你这么干，因为输入说明对自己对别人阅读都很重要。实在不想输入说明的童鞋请自行Google，我不告诉你这个参数。</p><p><code>git commit</code>命令执行成功后会告诉你，<code>1 file changed</code>：1个文件被改动（我们新添加的readme.txt文件）；<code>2 insertions</code>：插入了两行内容（readme.txt有两行内容）。</p><p>为什么Git添加文件需要<code>add</code>，<code>commit</code>一共两步呢？因为<code>commit</code>可以一次提交很多文件，所以你可以多次<code>add</code>不同的文件，比如：</p><pre><code>$ git add file1.txt$ git add file2.txt file3.txt$ git commit -m &quot;add 3 files.&quot;</code></pre><h3 id="疑难解答"><a href="#疑难解答" class="headerlink" title="疑难解答"></a>疑难解答</h3><p>Q：输入<code>git add readme.txt</code>，得到错误：<code>fatal: not a git repository (or any of the parent directories)</code>。</p><p>A：Git命令必须在Git仓库目录内执行（<code>git init</code>除外），在仓库目录外执行是没有意义的。</p><p>Q：输入<code>git add readme.txt</code>，得到错误<code>fatal: pathspec &#39;readme.txt&#39; did not match any files</code>。</p><p>A：添加某个文件时，该文件必须在当前目录下存在，用<code>ls</code>或者<code>dir</code>命令查看当前目录的文件，看看文件是否存在，或者是否写错了文件名。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>现在总结一下今天学的两点内容：</p><p>初始化一个Git仓库，使用<code>git init</code>命令。</p><p>添加文件到Git仓库，分两步：</p><ol><li>使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；</li><li>使用命令<code>git commit -m &lt;message&gt;</code>，完成。</li></ol><h2 id="2-版本回退"><a href="#2-版本回退" class="headerlink" title="2-版本回退"></a>2-版本回退</h2><p>现在，你已经学会了修改文件，然后把修改提交到Git版本库，现在，再练习一次，修改readme.txt文件如下：</p><pre><code>Git is a distributed version control system.Git is free software distributed under the GPL.</code></pre><p>然后尝试提交：</p><pre><code>$ git add readme.txt$ git commit -m &quot;append GPL&quot;[master 1094adb] append GPL 1 file changed, 1 insertion(+), 1 deletion(-)</code></pre><p>像这样，你不断对文件进行修改，然后不断提交修改到版本库里，就好比玩RPG游戏时，每通过一关就会自动把游戏状态存盘，如果某一关没过去，你还可以选择读取前一关的状态。有些时候，在打Boss之前，你会手动存盘，以便万一打Boss失败了，可以从最近的地方重新开始。Git也是一样，每当你觉得文件修改到一定程度的时候，就可以“保存一个快照”，这个快照在Git中被称为<code>commit</code>。一旦你把文件改乱了，或者误删了文件，还可以从最近的一个<code>commit</code>恢复，然后继续工作，而不是把几个月的工作成果全部丢失。</p><p>现在，我们回顾一下<code>readme.txt</code>文件一共有几个版本被提交到Git仓库里了：</p><p>版本1：wrote a readme file</p><pre><code>Git is a version control system.Git is free software.</code></pre><p>版本2：add distributed</p><pre><code>Git is a distributed version control system.Git is free software.</code></pre><p>版本3：append GPL</p><pre><code>Git is a distributed version control system.Git is free software distributed under the GPL.</code></pre><p>当然了，在实际工作中，我们脑子里怎么可能记得一个几千行的文件每次都改了什么内容，不然要版本控制系统干什么。版本控制系统肯定有某个命令可以告诉我们历史记录，在Git中，我们用<code>git log</code>命令查看：</p><pre><code>$ git logcommit 1094adb7b9b3807259d8cb349e7df1d4d6477073 (HEAD -&gt; master)Author: Michael Liao &lt;askxuefeng@gmail.com&gt;Date:   Fri May 18 21:06:15 2018 +0800    append GPLcommit e475afc93c209a690c39c13a46716e8fa000c366Author: Michael Liao &lt;askxuefeng@gmail.com&gt;Date:   Fri May 18 21:03:36 2018 +0800    add distributedcommit eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0Author: Michael Liao &lt;askxuefeng@gmail.com&gt;Date:   Fri May 18 20:59:18 2018 +0800    wrote a readme file</code></pre><p><code>git log</code>命令显示从最近到最远的提交日志，我们可以看到3次提交，最近的一次是<code>append GPL</code>，上一次是<code>add distributed</code>，最早的一次是<code>wrote a readme file</code>。</p><p>如果嫌输出信息太多，看得眼花缭乱的，可以试试加上<code>--pretty=oneline</code>参数：</p><pre><code>$ git log --pretty=oneline1094adb7b9b3807259d8cb349e7df1d4d6477073 (HEAD -&gt; master) append GPLe475afc93c209a690c39c13a46716e8fa000c366 add distributedeaadf4e385e865d25c48e7ca9c8395c3f7dfaef0 wrote a readme file</code></pre><p>需要友情提示的是，你看到的一大串类似<code>1094adb...</code>的是<code>commit id</code>（版本号），和SVN不一样，Git的<code>commit id</code>不是1，2，3……递增的数字，而是一个SHA1计算出来的一个非常大的数字，用十六进制表示，而且你看到的<code>commit id</code>和我的肯定不一样，以你自己的为准。为什么<code>commit id</code>需要用这么一大串数字表示呢？因为Git是分布式的版本控制系统，后面我们还要研究多人在同一个版本库里工作，如果大家都用1，2，3……作为版本号，那肯定就冲突了。</p><p>好了，现在我们启动时光穿梭机，准备把<code>readme.txt</code>回退到上一个版本，也就是<code>add distributed</code>的那个版本，怎么做呢？</p><p>首先，Git必须知道当前版本是哪个版本，在Git中，用<code>HEAD</code>表示当前版本，也就是最新的提交<code>1094adb...</code>（注意我的提交ID和你的肯定不一样），上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code>。</p><p>现在，我们要把当前版本<code>append GPL</code>回退到上一个版本<code>add distributed</code>，就可以使用<code>git reset</code>命令：</p><pre><code>$ git reset --hard HEAD^HEAD is now at e475afc add distributed</code></pre><p><code>--hard</code>参数有啥意义？这个后面再讲，现在你先放心使用。</p><p>看看<code>readme.txt</code>的内容是不是版本<code>add distributed</code>：</p><pre><code>$ cat readme.txtGit is a distributed version control system.Git is free software.</code></pre><p>果然被还原了。</p><p>还可以继续回退到上一个版本<code>wrote a readme file</code>，不过且慢，然我们用<code>git log</code>再看看现在版本库的状态：</p><pre><code>$ git logcommit e475afc93c209a690c39c13a46716e8fa000c366 (HEAD -&gt; master)Author: Michael Liao &lt;askxuefeng@gmail.com&gt;Date:   Fri May 18 21:03:36 2018 +0800    add distributedcommit eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0Author: Michael Liao &lt;askxuefeng@gmail.com&gt;Date:   Fri May 18 20:59:18 2018 +0800    wrote a readme file</code></pre><p>最新的那个版本<code>append GPL</code>已经看不到了！好比你从21世纪坐时光穿梭机来到了19世纪，想再回去已经回不去了，肿么办？</p><p>办法其实还是有的，只要上面的命令行窗口还没有被关掉，你就可以顺着往上找啊找啊，找到那个<code>append GPL</code>的<code>commit id</code>是<code>1094adb...</code>，于是就可以指定回到未来的某个版本：</p><pre><code>$ git reset --hard 1094aHEAD is now at 83b0afe append GPL</code></pre><p>版本号没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位，因为Git可能会找到多个版本号，就无法确定是哪一个了。</p><p>再小心翼翼地看看<code>readme.txt</code>的内容：</p><pre><code>$ cat readme.txtGit is a distributed version control system.Git is free software distributed under the GPL.</code></pre><p>果然，我胡汉三又回来了。</p><p>Git的版本回退速度非常快，因为Git在内部有个指向当前版本的<code>HEAD</code>指针，当你回退版本的时候，Git仅仅是把HEAD从指向<code>append GPL</code>：</p><pre class="line-numbers language-ascii"><code class="language-ascii">┌────┐│HEAD│└────┘   │   └──> ○ append GPL        │        ○ add distributed        │        ○ wrote a readme file<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改为指向<code>add distributed</code>：</p><pre class="line-numbers language-ascii"><code class="language-ascii">┌────┐│HEAD│└────┘   │   │    ○ append GPL   │    │   └──> ○ add distributed        │        ○ wrote a readme file<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后顺便把工作区的文件更新了。所以你让<code>HEAD</code>指向哪个版本号，你就把当前版本定位在哪。</p><p>现在，你回退到了某个版本，关掉了电脑，第二天早上就后悔了，想恢复到新版本怎么办？找不到新版本的<code>commit id</code>怎么办？</p><p>在Git中，总是有后悔药可以吃的。当你用<code>$ git reset --hard HEAD^</code>回退到<code>add distributed</code>版本时，再想恢复到<code>append GPL</code>，就必须找到<code>append GPL</code>的commit id。Git提供了一个命令<code>git reflog</code>用来记录你的每一次命令：</p><pre><code>$ git refloge475afc HEAD@{1}: reset: moving to HEAD^1094adb (HEAD -&gt; master) HEAD@{2}: commit: append GPLe475afc HEAD@{3}: commit: add distributedeaadf4e HEAD@{4}: commit (initial): wrote a readme file</code></pre><p>终于舒了口气，从输出可知，<code>append GPL</code>的commit id是<code>1094adb</code>，现在，你又可以乘坐时光机回到未来了。</p><h2 id="3-工作区和暂存区"><a href="#3-工作区和暂存区" class="headerlink" title="3-工作区和暂存区"></a>3-工作区和暂存区</h2><p>Git和其他版本控制系统如SVN的一个不同之处就是有暂存区的概念。</p><p>先来看名词解释。</p><h4 id="工作区（Working-Directory）"><a href="#工作区（Working-Directory）" class="headerlink" title="工作区（Working Directory）"></a>工作区（Working Directory）</h4><p>就是你在电脑里能看到的目录</p><h4 id="版本库（Repository）"><a href="#版本库（Repository）" class="headerlink" title="版本库（Repository）"></a>版本库（Repository）</h4><p>工作区有一个隐藏目录<code>.git</code>，这个不算工作区，而是Git的版本库。</p><p>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支<code>master</code>，以及指向<code>master</code>的一个指针叫<code>HEAD</code>。</p><p><img src="https://i.loli.net/2020/10/15/Mp18lNecJQsKHjI.jpg" alt="git-repo"></p><p>分支和<code>HEAD</code>的概念我们以后再讲。</p><p>前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：</p><p>第一步是用<code>git add</code>把文件添加进去，实际上就是把文件修改添加到暂存区；</p><p>第二步是用<code>git commit</code>提交更改，实际上就是把暂存区的所有内容提交到当前分支。</p><p>因为我们创建Git版本库时，Git自动为我们创建了唯一一个<code>master</code>分支，所以，现在，<code>git commit</code>就是往<code>master</code>分支上提交更改。</p><p>你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</p><p>俗话说，实践出真知。现在，我们再练习一遍，先对<code>readme.txt</code>做个修改，比如加上一行内容：</p><pre><code>Git is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.</code></pre><p>然后，在工作区新增一个<code>LICENSE</code>文本文件（内容随便写）。</p><p>先用<code>git status</code>查看一下状态：</p><pre><code>$ git statusOn branch masterChanges not staged for commit:  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)    modified:   readme.txtUntracked files:  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)    LICENSEno changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</code></pre><p>Git非常清楚地告诉我们，<code>readme.txt</code>被修改了，而<code>LICENSE</code>还从来没有被添加过，所以它的状态是<code>Untracked</code>。</p><p>现在，使用两次命令<code>git add</code>，把<code>readme.txt</code>和<code>LICENSE</code>都添加后，用<code>git status</code>再查看一下：</p><pre><code>$ git statusOn branch masterChanges to be committed:  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)    new file:   LICENSE    modified:   readme.txt</code></pre><p>现在，暂存区的状态就变成这样了：</p><p><img src="https://i.loli.net/2020/10/15/AecFl4BPhCZYSNX.jpg" alt="git-stage"></p><p>所以，<code>git add</code>命令实际上就是把要提交的所有修改放到暂存区（Stage），然后，执行<code>git commit</code>就可以一次性把暂存区的所有修改提交到分支。</p><pre><code>$ git commit -m &quot;understand how stage works&quot;[master e43a48b] understand how stage works 2 files changed, 2 insertions(+) create mode 100644 LICENSE</code></pre><p>一旦提交后，如果你又没有对工作区做任何修改，那么工作区就是“干净”的：</p><pre><code>$ git statusOn branch masternothing to commit, working tree clean</code></pre><p>现在版本库变成了这样，暂存区就没有任何内容了：</p><p><img src="https://i.loli.net/2020/10/15/K3kMFmlgZtir2cV.jpg" alt="git-stage-after-commit"></p><h2 id="4-管理和修改"><a href="#4-管理和修改" class="headerlink" title="4-管理和修改"></a>4-管理和修改</h2><p>现在，假定你已经完全掌握了暂存区的概念。下面，我们要讨论的就是，为什么Git比其他版本控制系统设计得优秀，因为Git跟踪并管理的是修改，而非文件。</p><p>你会问，什么是修改？比如你新增了一行，这就是一个修改，删除了一行，也是一个修改，更改了某些字符，也是一个修改，删了一些又加了一些，也是一个修改，甚至创建一个新文件，也算一个修改。</p><p>为什么说Git管理的是修改，而不是文件呢？我们还是做实验。第一步，对readme.txt做一个修改，比如加一行内容：</p><pre><code>$ cat readme.txtGit is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.Git tracks changes.</code></pre><p>然后，添加：</p><pre><code>$ git add readme.txt$ git status# On branch master# Changes to be committed:#   (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)##       modified:   readme.txt#</code></pre><p>然后，再修改readme.txt：</p><pre><code>$ cat readme.txt Git is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.Git tracks changes of files.</code></pre><p>提交：</p><pre><code>$ git commit -m &quot;git tracks changes&quot;[master 519219b] git tracks changes 1 file changed, 1 insertion(+)</code></pre><p>提交后，再看看状态：</p><pre><code>$ git statusOn branch masterChanges not staged for commit:  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)    modified:   readme.txtno changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</code></pre><p>咦，怎么第二次的修改没有被提交？</p><p>别激动，我们回顾一下操作过程：</p><p>第一次修改 -&gt; <code>git add</code> -&gt; 第二次修改 -&gt; <code>git commit</code></p><p>你看，我们前面讲了，Git管理的是修改，当你用<code>git add</code>命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在工作区的第二次修改并没有放入暂存区，所以，<code>git commit</code>只负责把暂存区的修改提交了，也就是第一次的修改被提交了，第二次的修改不会被提交。</p><p>提交后，用<code>git diff HEAD -- readme.txt</code>命令可以查看工作区和版本库里面最新版本的区别：</p><pre><code>$ git diff HEAD -- readme.txt diff --git a/readme.txt b/readme.txtindex 76d770f..a9c5755 100644--- a/readme.txt+++ b/readme.txt@@ -1,4 +1,4 @@ Git is a distributed version control system. Git is free software distributed under the GPL. Git has a mutable index called stage.-Git tracks changes.+Git tracks changes of files.</code></pre><p>可见，第二次修改确实没有被提交。</p><p>那怎么提交第二次修改呢？你可以继续<code>git add</code>再<code>git commit</code>，也可以别着急提交第一次修改，先<code>git add</code>第二次修改，再<code>git commit</code>，就相当于把两次修改合并后一块提交了：</p><p>第一次修改 -&gt; <code>git add</code> -&gt; 第二次修改 -&gt; <code>git add</code> -&gt; <code>git commit</code></p><p>好，现在，把第二次修改提交了，然后开始小结。</p><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><p>现在，你又理解了Git是如何跟踪修改的，每次修改，如果不用<code>git add</code>到暂存区，那就不会加入到<code>commit</code>中。</p><h2 id="5-撤销修改"><a href="#5-撤销修改" class="headerlink" title="5-撤销修改"></a>5-撤销修改</h2><p>自然，你是不会犯错的。不过现在是凌晨两点，你正在赶一份工作报告，你在<code>readme.txt</code>中添加了一行：</p><pre><code>$ cat readme.txtGit is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.Git tracks changes of files.My stupid boss still prefers SVN.</code></pre><p>在你准备提交前，一杯咖啡起了作用，你猛然发现了<code>stupid boss</code>可能会让你丢掉这个月的奖金！</p><p>既然错误发现得很及时，就可以很容易地纠正它。你可以删掉最后一行，手动把文件恢复到上一个版本的状态。如果用<code>git status</code>查看一下：</p><pre><code>$ git statusOn branch masterChanges not staged for commit:  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)    modified:   readme.txtno changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</code></pre><p>你可以发现，Git会告诉你，<code>git checkout -- file</code>可以丢弃工作区的修改：</p><pre><code>$ git checkout -- readme.txt</code></pre><p>命令<code>git checkout -- readme.txt</code>意思就是，把<code>readme.txt</code>文件在工作区的修改全部撤销，这里有两种情况：</p><p>一种是<code>readme.txt</code>自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；</p><p>一种是<code>readme.txt</code>已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。</p><p>总之，就是让这个文件回到最近一次<code>git commit</code>或<code>git add</code>时的状态。</p><p>现在，看看<code>readme.txt</code>的文件内容：</p><pre><code>$ cat readme.txtGit is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.Git tracks changes of files.</code></pre><p>文件内容果然复原了。</p><p><code>git checkout -- file</code>命令中的<code>--</code>很重要，没有<code>--</code>，就变成了“切换到另一个分支”的命令，我们在后面的分支管理中会再次遇到<code>git checkout</code>命令。</p><p>现在假定是凌晨3点，你不但写了一些胡话，还<code>git add</code>到暂存区了：</p><pre><code>$ cat readme.txtGit is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.Git tracks changes of files.My stupid boss still prefers SVN.$ git add readme.txt</code></pre><p>庆幸的是，在<code>commit</code>之前，你发现了这个问题。用<code>git status</code>查看一下，修改只是添加到了暂存区，还没有提交：</p><pre><code>$ git statusOn branch masterChanges to be committed:  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)    modified:   readme.txt</code></pre><p>Git同样告诉我们，用命令<code>git reset HEAD &lt;file&gt;</code>可以把暂存区的修改撤销掉（unstage），重新放回工作区：</p><pre><code>$ git reset HEAD readme.txtUnstaged changes after reset:M    readme.txt</code></pre><p><code>git reset</code>命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用<code>HEAD</code>时，表示最新的版本。</p><p>再用<code>git status</code>查看一下，现在暂存区是干净的，工作区有修改：</p><pre><code>$ git statusOn branch masterChanges not staged for commit:  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)    modified:   readme.txt</code></pre><p>还记得如何丢弃工作区的修改吗？</p><pre><code>$ git checkout -- readme.txt$ git statusOn branch masternothing to commit, working tree clean</code></pre><p>整个世界终于清静了！</p><p>现在，假设你不但改错了东西，还从暂存区提交到了版本库，怎么办呢？还记得<a href="https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192" target="_blank" rel="noopener">版本回退</a>一节吗？可以回退到上一个版本。不过，这是有条件的，就是你还没有把自己的本地版本库推送到远程。还记得Git是分布式版本控制系统吗？我们后面会讲到远程版本库，一旦你把<code>stupid boss</code>提交推送到远程版本库，你就真的惨了……</p><h3 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h3><p>又到了小结时间。</p><p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p><p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，就回到了场景1，第二步按场景1操作。</p><p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。</p><h2 id="6-删除文件"><a href="#6-删除文件" class="headerlink" title="6-删除文件"></a>6-删除文件</h2><p>在Git中，删除也是一个修改操作，我们实战一下，先添加一个新文件<code>test.txt</code>到Git并且提交：</p><pre><code>$ git add test.txt$ git commit -m &quot;add test.txt&quot;[master b84166e] add test.txt 1 file changed, 1 insertion(+) create mode 100644 test.txt</code></pre><p>一般情况下，你通常直接在文件管理器中把没用的文件删了，或者用<code>rm</code>命令删了：</p><pre><code>$ rm test.txt</code></pre><p>这个时候，Git知道你删除了文件，因此，工作区和版本库就不一致了，<code>git status</code>命令会立刻告诉你哪些文件被删除了：</p><pre><code>$ git statusOn branch masterChanges not staged for commit:  (use &quot;git add/rm &lt;file&gt;...&quot; to update what will be committed)  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)    deleted:    test.txtno changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</code></pre><p>现在你有两个选择，一是确实要从版本库中删除该文件，那就用命令<code>git rm</code>删掉，并且<code>git commit</code>：</p><pre><code>$ git rm test.txtrm &#39;test.txt&#39;$ git commit -m &quot;remove test.txt&quot;[master d46f35e] remove test.txt 1 file changed, 1 deletion(-) delete mode 100644 test.txt</code></pre><p>现在，文件就从版本库中被删除了。</p><p> 小提示：先手动删除文件，然后使用git rm <file>和git add<file>效果是一样的。</file></file></p><p>另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：</p><pre><code>$ git checkout -- test.txt</code></pre><p><code>git checkout</code>其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。</p><p> 注意：从来没有被添加到版本库就被删除的文件，是无法恢复的！</p><h3 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h3><p>命令<code>git rm</code>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失<strong>最近一次提交后你修改的内容</strong>。</p><h2 id="7-添加远程库"><a href="#7-添加远程库" class="headerlink" title="7-添加远程库"></a>7-添加远程库</h2><h3 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h3><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>；</p><p>关联后，使用命令<code>git push -u origin master</code>第一次推送master分支的所有内容；</p><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改；</p><p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！</p><h2 id="8-从远程库克隆"><a href="#8-从远程库克隆" class="headerlink" title="8-从远程库克隆"></a>8-从远程库克隆</h2><p>如果有多个人协作开发，那么每个人各自从远程克隆一份就可以了。</p><p>你也许还注意到，GitHub给出的地址不止一个，还可以用<code>https://github.com/michaelliao/gitskills.git</code>这样的地址。实际上，Git支持多种协议，默认的<code>git://</code>使用ssh，但也可以使用<code>https</code>等其他协议。</p><p>使用<code>https</code>除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放http端口的公司内部就无法使用<code>ssh</code>协议而只能用<code>https</code>。</p><h3 id="小结-5"><a href="#小结-5" class="headerlink" title="小结"></a>小结</h3><p>要克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</p><p>Git支持多种协议，包括<code>https</code>，但<code>ssh</code>协议速度最快。</p><h2 id="9-创建与合并分支"><a href="#9-创建与合并分支" class="headerlink" title="9-创建与合并分支"></a>9-创建与合并分支</h2><p>在<a href="https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192" target="_blank" rel="noopener">版本回退</a>里，你已经知道，每次提交，Git都把它们串成一条时间线，这条时间线就是一个分支。截止到目前，只有一条时间线，在Git里，这个分支叫主分支，即<code>master</code>分支。<code>HEAD</code>严格来说不是指向提交，而是指向<code>master</code>，<code>master</code>才是指向提交的，所以，<code>HEAD</code>指向的就是当前分支。</p><p>一开始的时候，<code>master</code>分支是一条线，Git用<code>master</code>指向最新的提交，再用<code>HEAD</code>指向<code>master</code>，就能确定当前分支，以及当前分支的提交点：</p><p><img src="https://i.loli.net/2020/10/15/ID94MGlu8Yw63Bm.jpg" alt="git-br-initial"></p><p>每次提交，<code>master</code>分支都会向前移动一步，这样，随着你不断提交，<code>master</code>分支的线也越来越长。</p><p>当我们创建新的分支，例如<code>dev</code>时，Git新建了一个指针叫<code>dev</code>，指向<code>master</code>相同的提交，再把<code>HEAD</code>指向<code>dev</code>，就表示当前分支在<code>dev</code>上：</p><p><img src="https://i.loli.net/2020/10/15/YhKEdBZJ34NQcuX.jpg" alt="git-br-create"></p><p>你看，Git创建一个分支很快，因为除了增加一个<code>dev</code>指针，改改<code>HEAD</code>的指向，工作区的文件都没有任何变化！</p><p>不过，从现在开始，对工作区的修改和提交就是针对<code>dev</code>分支了，比如新提交一次后，<code>dev</code>指针往前移动一步，而<code>master</code>指针不变：</p><p><img src="https://i.loli.net/2020/10/15/fegXCokN5F2IGrL.jpg" alt="git-br-dev-fd"></p><p>假如我们在<code>dev</code>上的工作完成了，就可以把<code>dev</code>合并到<code>master</code>上。Git怎么合并呢？最简单的方法，就是直接把<code>master</code>指向<code>dev</code>的当前提交，就完成了合并：</p><p><img src="https://i.loli.net/2020/10/15/GfUBsLpFlROmjMX.jpg" alt="git-br-ff-merge"></p><p>所以Git合并分支也很快！就改改指针，工作区内容也不变！</p><p>合并完分支后，甚至可以删除<code>dev</code>分支。删除<code>dev</code>分支就是把<code>dev</code>指针给删掉，删掉后，我们就剩下了一条<code>master</code>分支：</p><p><img src="https://i.loli.net/2020/10/15/TfcLz3EDmGRVZsY.jpg" alt="git-br-rm"></p><p>真是太神奇了，你看得出来有些提交是通过分支完成的吗？</p><p>下面开始实战。</p><p>首先，我们创建<code>dev</code>分支，然后切换到<code>dev</code>分支：</p><pre><code>$ git checkout -b devSwitched to a new branch &#39;dev&#39;</code></pre><p><code>git checkout</code>命令加上<code>-b</code>参数表示创建并切换，相当于以下两条命令：</p><pre><code>$ git branch dev$ git checkout devSwitched to branch &#39;dev&#39;</code></pre><p>然后，用<code>git branch</code>命令查看当前分支：</p><pre><code>$ git branch* dev  master</code></pre><p><code>git branch</code>命令会列出所有分支，当前分支前面会标一个<code>*</code>号。</p><p>然后，我们就可以在<code>dev</code>分支上正常提交，比如对<code>readme.txt</code>做个修改，加上一行：</p><pre><code>Creating a new branch is quick.</code></pre><p>然后提交：</p><pre><code>$ git add readme.txt $ git commit -m &quot;branch test&quot;[dev b17d20e] branch test 1 file changed, 1 insertion(+)</code></pre><p>现在，<code>dev</code>分支的工作完成，我们就可以切换回<code>master</code>分支：</p><pre><code>$ git checkout masterSwitched to branch &#39;master&#39;</code></pre><p>切换回<code>master</code>分支后，再查看一个<code>readme.txt</code>文件，刚才添加的内容不见了！因为那个提交是在<code>dev</code>分支上，而<code>master</code>分支此刻的提交点并没有变：</p><p><img src="https://i.loli.net/2020/10/15/Wz2rLy8AZ7kYV3s.jpg" alt="git-br-on-master"></p><p>现在，我们把<code>dev</code>分支的工作成果合并到<code>master</code>分支上：</p><pre><code>$ git merge devUpdating d46f35e..b17d20eFast-forward readme.txt | 1 + 1 file changed, 1 insertion(+)</code></pre><p><code>git merge</code>命令用于合并指定分支到当前分支。合并后，再查看<code>readme.txt</code>的内容，就可以看到，和<code>dev</code>分支的最新提交是完全一样的。</p><p>注意到上面的<code>Fast-forward</code>信息，Git告诉我们，这次合并是“快进模式”，也就是直接把<code>master</code>指向<code>dev</code>的当前提交，所以合并速度非常快。</p><p>当然，也不是每次合并都能<code>Fast-forward</code>，我们后面会讲其他方式的合并。</p><p>合并完成后，就可以放心地删除<code>dev</code>分支了：</p><pre><code>$ git branch -d devDeleted branch dev (was b17d20e).</code></pre><p>删除后，查看<code>branch</code>，就只剩下<code>master</code>分支了：</p><pre><code>$ git branch* master</code></pre><p>因为创建、合并和删除分支非常快，所以Git鼓励你使用分支完成某个任务，合并后再删掉分支，这和直接在<code>master</code>分支上工作效果是一样的，但过程更安全。</p><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p>我们注意到切换分支使用<code>git checkout &lt;branch&gt;</code>，而前面讲过的撤销修改则是<code>git checkout -- &lt;file&gt;</code>，同一个命令，有两种作用，确实有点令人迷惑。</p><p>实际上，切换分支这个动作，用<code>switch</code>更科学。因此，最新版本的Git提供了新的<code>git switch</code>命令来切换分支：</p><p>创建并切换到新的<code>dev</code>分支，可以使用：</p><pre><code>$ git switch -c dev</code></pre><p>直接切换到已有的<code>master</code>分支，可以使用：</p><pre><code>$ git switch master</code></pre><p>使用新的<code>git switch</code>命令，比<code>git checkout</code>要更容易理解。</p><h3 id="小结-6"><a href="#小结-6" class="headerlink" title="小结"></a>小结</h3><p>Git鼓励大量使用分支：</p><p>查看分支：<code>git branch</code></p><p>创建分支：<code>git branch &lt;name&gt;</code></p><p>切换分支：<code>git checkout &lt;name&gt;</code>或者<code>git switch &lt;name&gt;</code></p><p>创建+切换分支：<code>git checkout -b &lt;name&gt;</code>或者<code>git switch -c &lt;name&gt;</code></p><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code></p><p>删除分支：<code>git branch -d &lt;name&gt;</code></p><h2 id="10-解决冲突"><a href="#10-解决冲突" class="headerlink" title="10-解决冲突"></a>10-解决冲突</h2><p>人生不如意之事十之八九，合并分支往往也不是一帆风顺的。</p><p>准备新的<code>feature1</code>分支，继续我们的新分支开发：</p><pre><code>$ git switch -c feature1Switched to a new branch &#39;feature1&#39;</code></pre><p>修改<code>readme.txt</code>最后一行，改为：</p><pre><code>Creating a new branch is quick AND simple.</code></pre><p>在<code>feature1</code>分支上提交：</p><pre><code>$ git add readme.txt$ git commit -m &quot;AND simple&quot;[feature1 14096d0] AND simple 1 file changed, 1 insertion(+), 1 deletion(-)</code></pre><p>切换到<code>master</code>分支：</p><pre><code>$ git switch masterSwitched to branch &#39;master&#39;Your branch is ahead of &#39;origin/master&#39; by 1 commit.  (use &quot;git push&quot; to publish your local commits)</code></pre><p>Git还会自动提示我们当前<code>master</code>分支比远程的<code>master</code>分支要超前1个提交。</p><p>在<code>master</code>分支上把<code>readme.txt</code>文件的最后一行改为：</p><pre><code>Creating a new branch is quick &amp; simple.</code></pre><p>提交：</p><pre><code>$ git add readme.txt $ git commit -m &quot;&amp; simple&quot;[master 5dc6824] &amp; simple 1 file changed, 1 insertion(+), 1 deletion(-)</code></pre><p>现在，<code>master</code>分支和<code>feature1</code>分支各自都分别有新的提交，变成了这样：</p><p><img src="https://i.loli.net/2020/10/15/OLmvDt5QP37Tek6.jpg" alt="git-br-feature1"></p><p>这种情况下，Git无法执行“快速合并”，只能试图把各自的修改合并起来，但这种合并就可能会有冲突，我们试试看：</p><pre><code>$ git merge feature1Auto-merging readme.txtCONFLICT (content): Merge conflict in readme.txtAutomatic merge failed; fix conflicts and then commit the result.</code></pre><p>果然冲突了！Git告诉我们，<code>readme.txt</code>文件存在冲突，必须手动解决冲突后再提交。<code>git status</code>也可以告诉我们冲突的文件：</p><pre><code>$ git statusOn branch masterYour branch is ahead of &#39;origin/master&#39; by 2 commits.  (use &quot;git push&quot; to publish your local commits)You have unmerged paths.  (fix conflicts and run &quot;git commit&quot;)  (use &quot;git merge --abort&quot; to abort the merge)Unmerged paths:  (use &quot;git add &lt;file&gt;...&quot; to mark resolution)    both modified:   readme.txtno changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</code></pre><p>我们可以直接查看readme.txt的内容：</p><pre><code>Git is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.Git tracks changes of files.&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEADCreating a new branch is quick &amp; simple.=======Creating a new branch is quick AND simple.&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature1</code></pre><p>Git用<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>，<code>=======</code>，<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>标记出不同分支的内容，我们修改如下后保存：</p><pre><code>Creating a new branch is quick and simple.</code></pre><p>再提交：</p><pre><code>$ git add readme.txt $ git commit -m &quot;conflict fixed&quot;[master cf810e4] conflict fixed</code></pre><p>现在，<code>master</code>分支和<code>feature1</code>分支变成了下图所示：</p><p><img src="https://i.loli.net/2020/10/15/MvawG94RPXNOhBV.jpg" alt="git-br-conflict-merged"></p><p>用带参数的<code>git log</code>也可以看到分支的合并情况：</p><pre><code>$ git log --graph --pretty=oneline --abbrev-commit*   cf810e4 (HEAD -&gt; master) conflict fixed|\  | * 14096d0 (feature1) AND simple* | 5dc6824 &amp; simple|/  * b17d20e branch test* d46f35e (origin/master) remove test.txt* b84166e add test.txt* 519219b git tracks changes* e43a48b understand how stage works* 1094adb append GPL* e475afc add distributed* eaadf4e wrote a readme file</code></pre><p>最后，删除<code>feature1</code>分支：</p><pre><code>$ git branch -d feature1Deleted branch feature1 (was 14096d0).</code></pre><p>工作完成。</p><h3 id="小结-7"><a href="#小结-7" class="headerlink" title="小结"></a>小结</h3><p>当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。</p><p>解决冲突就是把Git合并失败的文件手动编辑为我们希望的内容，再提交。</p><p>用<code>git log --graph</code>命令可以看到分支合并图。</p><h2 id="11-分支管理策略"><a href="#11-分支管理策略" class="headerlink" title="11-分支管理策略"></a>11-分支管理策略</h2><p>通常，合并分支时，如果可能，Git会用<code>Fast forward</code>模式，但这种模式下，删除分支后，会丢掉分支信息。</p><p>如果要强制禁用<code>Fast forward</code>模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。</p><p>下面我们实战一下<code>--no-ff</code>方式的<code>git merge</code>：</p><p>首先，仍然创建并切换<code>dev</code>分支：</p><pre><code>$ git switch -c devSwitched to a new branch &#39;dev&#39;</code></pre><p>修改readme.txt文件，并提交一个新的commit：</p><pre><code>$ git add readme.txt $ git commit -m &quot;add merge&quot;[dev f52c633] add merge 1 file changed, 1 insertion(+)</code></pre><p>现在，我们切换回<code>master</code>：</p><pre><code>$ git switch masterSwitched to branch &#39;master&#39;</code></pre><p>准备合并<code>dev</code>分支，请注意<code>--no-ff</code>参数，表示禁用<code>Fast forward</code>：</p><pre><code>$ git merge --no-ff -m &quot;merge with no-ff&quot; devMerge made by the &#39;recursive&#39; strategy. readme.txt | 1 + 1 file changed, 1 insertion(+)</code></pre><p>因为本次合并要创建一个新的commit，所以加上<code>-m</code>参数，把commit描述写进去。</p><p>合并后，我们用<code>git log</code>看看分支历史：</p><pre><code>$ git log --graph --pretty=oneline --abbrev-commit*   e1e9c68 (HEAD -&gt; master) merge with no-ff|\  | * f52c633 (dev) add merge|/  *   cf810e4 conflict fixed...</code></pre><p>可以看到，不使用<code>Fast forward</code>模式，merge后就像这样：</p><p><img src="https://i.loli.net/2020/10/15/qicatLFATO56zrh.jpg" alt="git-no-ff-mode"></p><h3 id="分支策略"><a href="#分支策略" class="headerlink" title="分支策略"></a>分支策略</h3><p>在实际开发中，我们应该按照几个基本原则进行分支管理：</p><p>首先，<code>master</code>分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；</p><p>那在哪干活呢？干活都在<code>dev</code>分支上，也就是说，<code>dev</code>分支是不稳定的，到某个时候，比如1.0版本发布时，再把<code>dev</code>分支合并到<code>master</code>上，在<code>master</code>分支发布1.0版本；</p><p>你和你的小伙伴们每个人都在<code>dev</code>分支上干活，每个人都有自己的分支，时不时地往<code>dev</code>分支上合并就可以了。</p><p>所以，团队合作的分支看起来就像这样：</p><p><img src="https://i.loli.net/2020/10/15/saThFdBUkK91gyb.jpg" alt="git-br-policy"></p><h3 id="小结-8"><a href="#小结-8" class="headerlink" title="小结"></a>小结</h3><p>Git分支十分强大，在团队开发中应该充分应用。</p><p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fast forward</code>合并就看不出来曾经做过合并。</p><h2 id="12-Bug分支"><a href="#12-Bug分支" class="headerlink" title="12-Bug分支"></a>12-Bug分支</h2><p>软件开发中，bug就像家常便饭一样。有了bug就需要修复，在Git中，由于分支是如此的强大，所以，每个bug都可以通过一个新的临时分支来修复，修复后，合并分支，然后将临时分支删除。</p><p>当你接到一个修复一个代号101的bug的任务时，很自然地，你想创建一个分支<code>issue-101</code>来修复它，但是，等等，当前正在<code>dev</code>上进行的工作还没有提交：</p><pre><code>$ git statusOn branch devChanges to be committed:  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)    new file:   hello.pyChanges not staged for commit:  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)    modified:   readme.txt</code></pre><p>并不是你不想提交，而是工作只进行到一半，还没法提交，预计完成还需1天时间。但是，必须在两个小时内修复该bug，怎么办？</p><p>幸好，Git还提供了一个<code>stash</code>功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：</p><pre><code>$ git stashSaved working directory and index state WIP on dev: f52c633 add merge</code></pre><p>现在，用<code>git status</code>查看工作区，就是干净的（除非有没有被Git管理的文件），因此可以放心地创建分支来修复bug。</p><p>首先确定要在哪个分支上修复bug，假定需要在<code>master</code>分支上修复，就从<code>master</code>创建临时分支：</p><pre><code>$ git checkout masterSwitched to branch &#39;master&#39;Your branch is ahead of &#39;origin/master&#39; by 6 commits.  (use &quot;git push&quot; to publish your local commits)$ git checkout -b issue-101Switched to a new branch &#39;issue-101&#39;</code></pre><p>现在修复bug，需要把“Git is free software …”改为“Git is a free software …”，然后提交：</p><pre><code>$ git add readme.txt $ git commit -m &quot;fix bug 101&quot;[issue-101 4c805e2] fix bug 101 1 file changed, 1 insertion(+), 1 deletion(-)</code></pre><p>修复完成后，切换到<code>master</code>分支，并完成合并，最后删除<code>issue-101</code>分支：</p><pre><code>$ git switch masterSwitched to branch &#39;master&#39;Your branch is ahead of &#39;origin/master&#39; by 6 commits.  (use &quot;git push&quot; to publish your local commits)$ git merge --no-ff -m &quot;merged bug fix 101&quot; issue-101Merge made by the &#39;recursive&#39; strategy. readme.txt | 2 +- 1 file changed, 1 insertion(+), 1 deletion(-)</code></pre><p>太棒了，原计划两个小时的bug修复只花了5分钟！现在，是时候接着回到<code>dev</code>分支干活了！</p><pre><code>$ git switch devSwitched to branch &#39;dev&#39;$ git statusOn branch devnothing to commit, working tree clean</code></pre><p>工作区是干净的，刚才的工作现场存到哪去了？用<code>git stash list</code>命令看看：</p><pre><code>$ git stash liststash@{0}: WIP on dev: f52c633 add merge</code></pre><p>工作现场还在，Git把stash内容存在某个地方了，但是需要恢复一下，有两个办法：</p><p>一是用<code>git stash apply</code>恢复，但是恢复后，stash内容并不删除，你需要用<code>git stash drop</code>来删除；</p><p>另一种方式是用<code>git stash pop</code>，恢复的同时把stash内容也删了：</p><pre><code>$ git stash popOn branch devChanges to be committed:  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)    new file:   hello.pyChanges not staged for commit:  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)    modified:   readme.txtDropped refs/stash@{0} (5d677e2ee266f39ea296182fb2354265b91b3b2a)</code></pre><p>再用<code>git stash list</code>查看，就看不到任何stash内容了：</p><pre><code>$ git stash list</code></pre><p>你可以多次stash，恢复的时候，先用<code>git stash list</code>查看，然后恢复指定的stash，用命令：</p><pre><code>$ git stash apply stash@{0}</code></pre><p>在master分支上修复了bug后，我们要想一想，dev分支是早期从master分支分出来的，所以，这个bug其实在当前dev分支上也存在。</p><p>那怎么在dev分支上修复同样的bug？重复操作一次，提交不就行了？</p><p>有木有更简单的方法？</p><p>有！</p><p>同样的bug，要在dev上修复，我们只需要把<code>4c805e2 fix bug 101</code>这个提交所做的修改“复制”到dev分支。注意：我们只想复制<code>4c805e2 fix bug 101</code>这个提交所做的修改，并不是把整个master分支merge过来。</p><p>为了方便操作，Git专门提供了一个<code>cherry-pick</code>命令，让我们能复制一个特定的提交到当前分支：</p><pre><code>$ git branch* dev  master$ git cherry-pick 4c805e2[master 1d4b803] fix bug 101 1 file changed, 1 insertion(+), 1 deletion(-)</code></pre><p>Git自动给dev分支做了一次提交，注意这次提交的commit是<code>1d4b803</code>，它并不同于master的<code>4c805e2</code>，因为这两个commit只是改动相同，但确实是两个不同的commit。用<code>git cherry-pick</code>，我们就不需要在dev分支上手动再把修bug的过程重复一遍。</p><p>有些聪明的童鞋会想了，既然可以在master分支上修复bug后，在dev分支上可以“重放”这个修复过程，那么直接在dev分支上修复bug，然后在master分支上“重放”行不行？当然可以，不过你仍然需要<code>git stash</code>命令保存现场，才能从dev分支切换到master分支。</p><h3 id="小结-9"><a href="#小结-9" class="headerlink" title="小结"></a>小结</h3><p>修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；</p><p>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复bug，修复后，再<code>git stash pop</code>，回到工作现场；</p><p>在master分支上修复的bug，想要合并到当前dev分支，可以用<code>git cherry-pick &lt;commit&gt;</code>命令，把bug提交的修改“复制”到当前分支，避免重复劳动。</p><h2 id="13-Feature分支"><a href="#13-Feature分支" class="headerlink" title="13-Feature分支"></a>13-Feature分支</h2><p>软件开发中，总有无穷无尽的新的功能要不断添加进来。</p><p>添加一个新功能时，你肯定不希望因为一些实验性质的代码，把主分支搞乱了，所以，每添加一个新功能，最好新建一个feature分支，在上面开发，完成后，合并，最后，删除该feature分支。</p><p>现在，你终于接到了一个新任务：开发代号为Vulcan的新功能，该功能计划用于下一代星际飞船。</p><p>于是准备开发：</p><pre><code>$ git switch -c feature-vulcanSwitched to a new branch &#39;feature-vulcan&#39;</code></pre><p>5分钟后，开发完毕：</p><pre><code>$ git add vulcan.py$ git statusOn branch feature-vulcanChanges to be committed:  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)    new file:   vulcan.py$ git commit -m &quot;add feature vulcan&quot;[feature-vulcan 287773e] add feature vulcan 1 file changed, 2 insertions(+) create mode 100644 vulcan.py</code></pre><p>切回<code>dev</code>，准备合并：</p><pre><code>$ git switch dev</code></pre><p>一切顺利的话，feature分支和bug分支是类似的，合并，然后删除。</p><p>但是！</p><p>就在此时，接到上级命令，因经费不足，新功能必须取消！</p><p>虽然白干了，但是这个包含机密资料的分支还是必须就地销毁：</p><pre><code>$ git branch -d feature-vulcanerror: The branch &#39;feature-vulcan&#39; is not fully merged.If you are sure you want to delete it, run &#39;git branch -D feature-vulcan&#39;.</code></pre><p>销毁失败。Git友情提醒，<code>feature-vulcan</code>分支还没有被合并，如果删除，将丢失掉修改，如果要强行删除，需要使用大写的<code>-D</code>参数。。</p><p>现在我们强行删除：</p><pre><code>$ git branch -D feature-vulcanDeleted branch feature-vulcan (was 287773e).</code></pre><p>终于删除成功！</p><h3 id="小结-10"><a href="#小结-10" class="headerlink" title="小结"></a>小结</h3><p>开发一个新feature，最好新建一个分支；</p><p>如果要丢弃一个没有被合并过的分支，可以通过<code>git branch -D &lt;name&gt;</code>强行删除。</p><h2 id="14-多人协作"><a href="#14-多人协作" class="headerlink" title="14-多人协作"></a>14-多人协作</h2><p>当你从远程仓库克隆时，实际上Git自动把本地的<code>master</code>分支和远程的<code>master</code>分支对应起来了，并且，远程仓库的默认名称是<code>origin</code>。</p><p>要查看远程库的信息，用<code>git remote</code>：</p><pre><code>$ git remoteorigin</code></pre><p>或者，用<code>git remote -v</code>显示更详细的信息：</p><pre><code>$ git remote -vorigin  git@github.com:michaelliao/learngit.git (fetch)origin  git@github.com:michaelliao/learngit.git (push)</code></pre><p>上面显示了可以抓取和推送的<code>origin</code>的地址。如果没有推送权限，就看不到push的地址。</p><h3 id="推送分支"><a href="#推送分支" class="headerlink" title="推送分支"></a>推送分支</h3><p>推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：</p><pre><code>$ git push origin master</code></pre><p>如果要推送其他分支，比如<code>dev</code>，就改成：</p><pre><code>$ git push origin dev</code></pre><p>但是，并不是一定要把本地分支往远程推送，那么，哪些分支需要推送，哪些不需要呢？</p><ul><li><code>master</code>分支是主分支，因此要时刻与远程同步；</li><li><code>dev</code>分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；</li><li>bug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；</li><li>feature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。</li></ul><p>总之，就是在Git中，分支完全可以在本地自己藏着玩，是否推送，视你的心情而定！</p><h3 id="抓取分支"><a href="#抓取分支" class="headerlink" title="抓取分支"></a>抓取分支</h3><p>多人协作时，大家都会往<code>master</code>和<code>dev</code>分支上推送各自的修改。</p><p>现在，模拟一个你的小伙伴，可以在另一台电脑（注意要把SSH Key添加到GitHub）或者同一台电脑的另一个目录下克隆：</p><pre><code>$ git clone git@github.com:michaelliao/learngit.gitCloning into &#39;learngit&#39;...remote: Counting objects: 40, done.remote: Compressing objects: 100% (21/21), done.remote: Total 40 (delta 14), reused 40 (delta 14), pack-reused 0Receiving objects: 100% (40/40), done.Resolving deltas: 100% (14/14), done.</code></pre><p>当你的小伙伴从远程库clone时，默认情况下，你的小伙伴只能看到本地的<code>master</code>分支。不信可以用<code>git branch</code>命令看看：</p><pre><code>$ git branch* master</code></pre><p>现在，你的小伙伴要在<code>dev</code>分支上开发，就必须创建远程<code>origin</code>的<code>dev</code>分支到本地，于是他用这个命令创建本地<code>dev</code>分支：</p><pre><code>$ git checkout -b dev origin/dev</code></pre><p>现在，他就可以在<code>dev</code>上继续修改，然后，时不时地把<code>dev</code>分支<code>push</code>到远程：</p><pre><code>$ git add env.txt$ git commit -m &quot;add env&quot;[dev 7a5e5dd] add env 1 file changed, 1 insertion(+) create mode 100644 env.txt$ git push origin devCounting objects: 3, done.Delta compression using up to 4 threads.Compressing objects: 100% (2/2), done.Writing objects: 100% (3/3), 308 bytes | 308.00 KiB/s, done.Total 3 (delta 0), reused 0 (delta 0)To github.com:michaelliao/learngit.git   f52c633..7a5e5dd  dev -&gt; dev</code></pre><p>你的小伙伴已经向<code>origin/dev</code>分支推送了他的提交，而碰巧你也对同样的文件作了修改，并试图推送：</p><pre><code>$ cat env.txtenv$ git add env.txt$ git commit -m &quot;add new env&quot;[dev 7bd91f1] add new env 1 file changed, 1 insertion(+) create mode 100644 env.txt$ git push origin devTo github.com:michaelliao/learngit.git ! [rejected]        dev -&gt; dev (non-fast-forward)error: failed to push some refs to &#39;git@github.com:michaelliao/learngit.git&#39;hint: Updates were rejected because the tip of your current branch is behindhint: its remote counterpart. Integrate the remote changes (e.g.hint: &#39;git pull ...&#39;) before pushing again.hint: See the &#39;Note about fast-forwards&#39; in &#39;git push --help&#39; for details.</code></pre><p>推送失败，因为你的小伙伴的最新提交和你试图推送的提交有冲突，解决办法也很简单，Git已经提示我们，先用<code>git pull</code>把最新的提交从<code>origin/dev</code>抓下来，然后，在本地合并，解决冲突，再推送：</p><pre><code>$ git pullThere is no tracking information for the current branch.Please specify which branch you want to merge with.See git-pull(1) for details.    git pull &lt;remote&gt; &lt;branch&gt;If you wish to set tracking information for this branch you can do so with:    git branch --set-upstream-to=origin/&lt;branch&gt; dev</code></pre><p><code>git pull</code>也失败了，原因是没有指定本地<code>dev</code>分支与远程<code>origin/dev</code>分支的链接，根据提示，设置<code>dev</code>和<code>origin/dev</code>的链接：</p><pre><code>$ git branch --set-upstream-to=origin/dev devBranch &#39;dev&#39; set up to track remote branch &#39;dev&#39; from &#39;origin&#39;.</code></pre><p>再pull：</p><pre><code>$ git pullAuto-merging env.txtCONFLICT (add/add): Merge conflict in env.txtAutomatic merge failed; fix conflicts and then commit the result.</code></pre><p>这回<code>git pull</code>成功，但是合并有冲突，需要手动解决，解决的方法和分支管理中的<a href="http://www.liaoxuefeng.com/wiki/896043488029600/900004111093344" target="_blank" rel="noopener">解决冲突</a>完全一样。解决后，提交，再push：</p><pre><code>$ git commit -m &quot;fix env conflict&quot;[dev 57c53ab] fix env conflict$ git push origin devCounting objects: 6, done.Delta compression using up to 4 threads.Compressing objects: 100% (4/4), done.Writing objects: 100% (6/6), 621 bytes | 621.00 KiB/s, done.Total 6 (delta 0), reused 0 (delta 0)To github.com:michaelliao/learngit.git   7a5e5dd..57c53ab  dev -&gt; dev</code></pre><p>因此，多人协作的工作模式通常是这样：</p><ol><li>首先，可以试图用<code>git push origin &lt;branch-name&gt;</code>推送自己的修改；</li><li>如果推送失败，则因为远程分支比你的本地更新，需要先用<code>git pull</code>试图合并；</li><li>如果合并有冲突，则解决冲突，并在本地提交；</li><li>没有冲突或者解决掉冲突后，再用<code>git push origin &lt;branch-name&gt;</code>推送就能成功！</li></ol><p>如果<code>git pull</code>提示<code>no tracking information</code>，则说明本地分支和远程分支的链接关系没有创建，用命令<code>git branch --set-upstream-to &lt;branch-name&gt; origin/&lt;branch-name&gt;</code>。</p><p>这就是多人协作的工作模式，一旦熟悉了，就非常简单。</p><h3 id="小结-11"><a href="#小结-11" class="headerlink" title="小结"></a>小结</h3><ul><li>查看远程库信息，使用<code>git remote -v</code>；</li><li>本地新建的分支如果不推送到远程，对其他人就是不可见的；</li><li>从本地推送分支，使用<code>git push origin branch-name</code>，如果推送失败，先用<code>git pull</code>抓取远程的新提交；</li><li>在本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致；</li><li>建立本地分支和远程分支的关联，使用<code>git branch --set-upstream branch-name origin/branch-name</code>；</li><li>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</li></ul><h2 id="15-Rebase"><a href="#15-Rebase" class="headerlink" title="15-Rebase"></a>15-Rebase</h2><p>在上一节我们看到了，多人在同一个分支上协作时，很容易出现冲突。即使没有冲突，后push的童鞋不得不先pull，在本地合并，然后才能push成功。</p><p>每次合并再push后，分支变成了这样：</p><pre><code>$ git log --graph --pretty=oneline --abbrev-commit* d1be385 (HEAD -&gt; master, origin/master) init hello*   e5e69f1 Merge branch &#39;dev&#39;|\  | *   57c53ab (origin/dev, dev) fix env conflict| |\  | | * 7a5e5dd add env| * | 7bd91f1 add new env| |/  * |   12a631b merged bug fix 101|\ \  | * | 4c805e2 fix bug 101|/ /  * |   e1e9c68 merge with no-ff|\ \  | |/  | * f52c633 add merge|/  *   cf810e4 conflict fixed</code></pre><p>总之看上去很乱，有强迫症的童鞋会问：为什么Git的提交历史不能是一条干净的直线？</p><p>其实是可以做到的！</p><p>Git有一种称为rebase的操作，有人把它翻译成“变基”。</p><p><img src="https://i.loli.net/2020/10/15/gZiaD28LOYJ5Cyh.jpg" alt="rebase"></p><p>先不要随意展开想象。我们还是从实际问题出发，看看怎么把分叉的提交变成直线。</p><p>在和远程分支同步后，我们对<code>hello.py</code>这个文件做了两次提交。用<code>git log</code>命令看看：</p><pre><code>$ git log --graph --pretty=oneline --abbrev-commit* 582d922 (HEAD -&gt; master) add author* 8875536 add comment* d1be385 (origin/master) init hello*   e5e69f1 Merge branch &#39;dev&#39;|\  | *   57c53ab (origin/dev, dev) fix env conflict| |\  | | * 7a5e5dd add env| * | 7bd91f1 add new env...</code></pre><p>注意到Git用<code>(HEAD -&gt; master)</code>和<code>(origin/master)</code>标识出当前分支的HEAD和远程origin的位置分别是<code>582d922 add author</code>和<code>d1be385 init hello</code>，本地分支比远程分支快两个提交。</p><p>现在我们尝试推送本地分支：</p><pre><code>$ git push origin masterTo github.com:michaelliao/learngit.git ! [rejected]        master -&gt; master (fetch first)error: failed to push some refs to &#39;git@github.com:michaelliao/learngit.git&#39;hint: Updates were rejected because the remote contains work that you dohint: not have locally. This is usually caused by another repository pushinghint: to the same ref. You may want to first integrate the remote changeshint: (e.g., &#39;git pull ...&#39;) before pushing again.hint: See the &#39;Note about fast-forwards&#39; in &#39;git push --help&#39; for details.</code></pre><p>很不幸，失败了，这说明有人先于我们推送了远程分支。按照经验，先pull一下：</p><pre><code>$ git pullremote: Counting objects: 3, done.remote: Compressing objects: 100% (1/1), done.remote: Total 3 (delta 1), reused 3 (delta 1), pack-reused 0Unpacking objects: 100% (3/3), done.From github.com:michaelliao/learngit   d1be385..f005ed4  master     -&gt; origin/master * [new tag]         v1.0       -&gt; v1.0Auto-merging hello.pyMerge made by the &#39;recursive&#39; strategy. hello.py | 1 + 1 file changed, 1 insertion(+)</code></pre><p>再用<code>git status</code>看看状态：</p><pre><code>$ git statusOn branch masterYour branch is ahead of &#39;origin/master&#39; by 3 commits.  (use &quot;git push&quot; to publish your local commits)nothing to commit, working tree clean</code></pre><p>加上刚才合并的提交，现在我们本地分支比远程分支超前3个提交。</p><p>用<code>git log</code>看看：</p><pre><code>$ git log --graph --pretty=oneline --abbrev-commit*   e0ea545 (HEAD -&gt; master) Merge branch &#39;master&#39; of github.com:michaelliao/learngit|\  | * f005ed4 (origin/master) set exit=1* | 582d922 add author* | 8875536 add comment|/  * d1be385 init hello...</code></pre><p>对强迫症童鞋来说，现在事情有点不对头，提交历史分叉了。如果现在把本地分支push到远程，有没有问题？</p><p>有！</p><p>什么问题？</p><p>不好看！</p><p>有没有解决方法？</p><p>有！</p><p>这个时候，rebase就派上了用场。我们输入命令<code>git rebase</code>试试：</p><pre><code>$ git rebaseFirst, rewinding head to replay your work on top of it...Applying: add commentUsing index info to reconstruct a base tree...M    hello.pyFalling back to patching base and 3-way merge...Auto-merging hello.pyApplying: add authorUsing index info to reconstruct a base tree...M    hello.pyFalling back to patching base and 3-way merge...Auto-merging hello.py</code></pre><p>输出了一大堆操作，到底是啥效果？再用<code>git log</code>看看：</p><pre><code>$ git log --graph --pretty=oneline --abbrev-commit* 7e61ed4 (HEAD -&gt; master) add author* 3611cfe add comment* f005ed4 (origin/master) set exit=1* d1be385 init hello...</code></pre><p>原本分叉的提交现在变成一条直线了！这种神奇的操作是怎么实现的？其实原理非常简单。我们注意观察，发现Git把我们本地的提交“挪动”了位置，放到了<code>f005ed4 (origin/master) set exit=1</code>之后，这样，整个提交历史就成了一条直线。rebase操作前后，最终的提交内容是一致的，但是，我们本地的commit修改内容已经变化了，它们的修改不再基于<code>d1be385 init hello</code>，而是基于<code>f005ed4 (origin/master) set exit=1</code>，但最后的提交<code>7e61ed4</code>内容是一致的。</p><p>这就是rebase操作的特点：把分叉的提交历史“整理”成一条直线，看上去更直观。缺点是本地的分叉提交已经被修改过了。</p><p>最后，通过push操作把本地分支推送到远程：</p><pre><code>Mac:~/learngit michael$ git push origin masterCounting objects: 6, done.Delta compression using up to 4 threads.Compressing objects: 100% (5/5), done.Writing objects: 100% (6/6), 576 bytes | 576.00 KiB/s, done.Total 6 (delta 2), reused 0 (delta 0)remote: Resolving deltas: 100% (2/2), completed with 1 local object.To github.com:michaelliao/learngit.git   f005ed4..7e61ed4  master -&gt; master</code></pre><p>再用<code>git log</code>看看效果：</p><pre><code>$ git log --graph --pretty=oneline --abbrev-commit* 7e61ed4 (HEAD -&gt; master, origin/master) add author* 3611cfe add comment* f005ed4 set exit=1* d1be385 init hello...</code></pre><p>远程分支的提交历史也是一条直线。</p><h3 id="小结-12"><a href="#小结-12" class="headerlink" title="小结"></a>小结</h3><ul><li>rebase操作可以把本地未push的分叉提交历史整理成直线；</li><li>rebase的目的是使得我们在查看历史提交的变化时更容易，因为分叉的提交需要三方对比。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea中git使用ssh的url后push报错</title>
      <link href="posts/bf8c901f/"/>
      <url>posts/bf8c901f/</url>
      
        <content type="html"><![CDATA[<h2 id="idea中git使用ssh的url后push报错"><a href="#idea中git使用ssh的url后push报错" class="headerlink" title="idea中git使用ssh的url后push报错"></a>idea中git使用ssh的url后push报错</h2><h3 id="开发环境：Mac11-0、idea2019-2、-git-2-24-3-Apple-Git-128"><a href="#开发环境：Mac11-0、idea2019-2、-git-2-24-3-Apple-Git-128" class="headerlink" title="开发环境：Mac11.0、idea2019.2、 git 2.24.3 (Apple Git-128)"></a>开发环境：Mac11.0、idea2019.2、 git 2.24.3 (Apple Git-128)</h3><h3 id="1-报错代码"><a href="#1-报错代码" class="headerlink" title="1.报错代码"></a>1.报错代码</h3><pre><code>Please make sure you have the correct access rightsand the repository exists.sunyun@sunyundeMBP ch009-springboot-ems % git remote add origin git@gitee.com:fejxc/spring-boot-page-help.gitfatal: remote origin already exists.sunyun@sunyundeMBP ch009-springboot-ems % git push -u origin mastergit@gitee.com: Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists.sunyun@sunyundeMBP ch009-springboot-ems % git statusOn branch masternothing to commit, working tree clean</code></pre><h3 id="2-解决办法，在git上或者gitee上添加SSH公钥"><a href="#2-解决办法，在git上或者gitee上添加SSH公钥" class="headerlink" title="2.解决办法，在git上或者gitee上添加SSH公钥"></a>2.解决办法，在git上或者gitee上添加SSH公钥</h3><p>1)输入代码生成ssh公匙</p><p><code> ssh-keygen -t rsa -C &quot;输入你的github或者gitee的用户名&quot;</code></p><p><img src="https://i.loli.net/2020/10/15/lWu4BtRZnCz8eTU.png"></p><p>2)ssh公匙会在你的计算机用户名文件下</p><p><img src="https://i.loli.net/2020/10/15/wkJmXEKMlC7q6zg.png"></p><p>3)用文本编辑打开id_rsa.pub，复制里面的内容</p><p><img src="https://i.loli.net/2020/10/15/uKZ27dsnchQjCpO.png"></p><p>4)在github或者gitee上点自己头像设置，然后找到安全设置里的ssh公匙，添加刚刚生成的肤质的内容</p><p><img src="https://i.loli.net/2020/10/15/gPYHCjoDAcm84tN.png"></p>]]></content>
      
      
      <categories>
          
          <category> Bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> 踩坑记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot中使用pagehelp实现分页</title>
      <link href="posts/a8652cf4/"/>
      <url>posts/a8652cf4/</url>
      
        <content type="html"><![CDATA[<h2 id="SpringBoot中使用pagehelp实现分页"><a href="#SpringBoot中使用pagehelp实现分页" class="headerlink" title="SpringBoot中使用pagehelp实现分页"></a>SpringBoot中使用pagehelp实现分页</h2><h3 id="1-在pom-xml中添加依赖"><a href="#1-在pom-xml中添加依赖" class="headerlink" title="1.在pom.xml中添加依赖"></a>1.在pom.xml中添加依赖</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>pagehelper<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>pagehelper<span class="token operator">-</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.2</span><span class="token punctuation">.</span><span class="token number">10</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-在application-properties中添加设置信息"><a href="#2-在application-properties中添加设置信息" class="headerlink" title="2.在application.properties中添加设置信息"></a>2.在application.properties中添加设置信息</h3><pre class="line-numbers language-java"><code class="language-java">#pagehelper#配置helperDialect属性来指定分页插件使用哪种数据库pagehelper<span class="token punctuation">.</span>helperDialect<span class="token operator">=</span>MySQL#分页合理化参数，默认值为<span class="token boolean">false</span>。当该参数设置为 <span class="token boolean">true</span> 时，pageNum<span class="token operator">&lt;=</span><span class="token number">0</span> 时会查询第一页， pageNum<span class="token operator">></span>pages（超过总数时），会查询最后一页。默认<span class="token boolean">false</span> 时，直接根据参数进行查询pagehelper<span class="token punctuation">.</span>reasonable<span class="token operator">=</span><span class="token boolean">false</span>#支持通过 Mapper 接口参数来传递分页参数，默认值<span class="token boolean">false</span>，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页pagehelper<span class="token punctuation">.</span>supportMethodsArguments<span class="token operator">=</span><span class="token boolean">false</span>pagehelper<span class="token punctuation">.</span>params<span class="token operator">=</span>count<span class="token operator">=</span>countSql#默认值为 <span class="token boolean">false</span>，该参数对使用 RowBounds 作为分页参数时有效。 当该参数设置为 <span class="token boolean">true</span> 时，会将 RowBounds 中的 offset 参数当成 pageNum 使用，可以用页码和页面大小两个参数进行分页pagehelper<span class="token punctuation">.</span>offsetAsPageNum<span class="token operator">=</span><span class="token boolean">true</span>#默认值为 <span class="token boolean">false</span>，当该参数设置为 <span class="token boolean">true</span> 时，如果 pageSize<span class="token operator">=</span><span class="token number">0</span> 或者 RowBounds<span class="token punctuation">.</span>limit <span class="token operator">=</span> <span class="token number">0</span> 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）pagehelper<span class="token punctuation">.</span>pageSizeZero<span class="token operator">=</span><span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-在controller中编写代码"><a href="#3-在controller中编写代码" class="headerlink" title="3.在controller中编写代码"></a>3.在controller中编写代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/findAll"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">listCategory</span><span class="token punctuation">(</span>Model m <span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"start"</span><span class="token punctuation">,</span>defaultValue <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token keyword">int</span> start<span class="token punctuation">,</span>                           <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"size"</span><span class="token punctuation">,</span>defaultValue <span class="token operator">=</span> <span class="token string">"5"</span><span class="token punctuation">)</span><span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>    PageHelper<span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>    PageInfo pageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token punctuation">(</span>empService<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    m<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"pageInfo"</span><span class="token punctuation">,</span> pageInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"ems/emplist"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-在前端界面实现"><a href="#4-在前端界面实现" class="headerlink" title="4.在前端界面实现"></a>4.在前端界面实现</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row1<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item:${pageInfo.list}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${item.id}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${item.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${item.salary}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${item.age}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!--日期格式化--></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${item.bir}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/emp/delete(id<span class="token punctuation">=</span>${item.id})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/emp/find(id<span class="token punctuation">=</span>${item.id})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>添加员工<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>location.href<span class="token punctuation">=</span><span class="token punctuation">'</span>/ems/toSave<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{findAll?start<span class="token punctuation">=</span>1}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>[首页]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${not pageInfo.isFirstPage}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{findAll(start<span class="token punctuation">=</span>${pageInfo.pageNum-1})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>[上页]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${not pageInfo.isIsLastPage()}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{findAll(start<span class="token punctuation">=</span>${pageInfo.pageNum+1})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>[下页]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{findAll(start<span class="token punctuation">=</span>${pageInfo.pages})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>[末页]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                当前页/总页数: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageInfo.pageNum}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/findAll(start<span class="token punctuation">=</span>${pageInfo.pageNum})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                /<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageInfo.pages}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/findAll(start<span class="token punctuation">=</span>${pageInfo.pages})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-实现效果"><a href="#5-实现效果" class="headerlink" title="5.实现效果"></a>5.实现效果</h3><p><img src="https://i.loli.net/2020/10/14/mZzBelca3fVPN5w.png" alt="分页效果"></p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pagerhelp分页 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译原理第二章课后作业</title>
      <link href="posts/a6bf4795/"/>
      <url>posts/a6bf4795/</url>
      
        <content type="html"><![CDATA[<h1 id="编译原理第二章课后作业"><a href="#编译原理第二章课后作业" class="headerlink" title="编译原理第二章课后作业"></a>编译原理第二章课后作业</h1><h2 id="习题2-7"><a href="#习题2-7" class="headerlink" title="习题2.7"></a>习题2.7</h2><h3 id="课本教材：编译原理（第二版）陈意云"><a href="#课本教材：编译原理（第二版）陈意云" class="headerlink" title="课本教材：编译原理（第二版）陈意云"></a>课本教材：编译原理（第二版）陈意云</h3><h3 id="算法2-4-从正规式构造NFA"><a href="#算法2-4-从正规式构造NFA" class="headerlink" title="算法2.4 从正规式构造NFA"></a>算法2.4 从正规式构造NFA</h3><h4 id="1-NFA的性质"><a href="#1-NFA的性质" class="headerlink" title="1-NFA的性质"></a>1-NFA的性质</h4><ol><li>只有一个终止状态</li><li>没有边进入开始状态</li><li>没有边离开终止状态</li></ol><p><img src="https://i.loli.net/2020/10/13/GXTQ7F2bHodckCU.png"></p><p><img src="https://i.loli.net/2020/10/13/IecRxOwpEJHhdMP.png"></p><h4 id="2-小总结"><a href="#2-小总结" class="headerlink" title="2-小总结"></a>2-小总结</h4><ol><li>｜状态合并的时候会添加新的开始状态和结束状态</li><li>‘*‘ （星闭包运算）状态合并的时候会添加新的开始状态和结束状态</li><li>连接运算的时候要进行状态合并</li></ol><h4 id="3-习题"><a href="#3-习题" class="headerlink" title="3-习题"></a>3-习题</h4><p><img src="https://i.loli.net/2020/10/13/Ws35zo1Tjyl6APh.png" alt="习题2.7"></p><p><img src="https://i.loli.net/2020/10/13/SwQrVkhe7gUPdc9.png" alt="习题2.7"></p><h4 id="习题答案"><a href="#习题答案" class="headerlink" title="习题答案"></a>习题答案</h4><h4 id="a"><a href="#a" class="headerlink" title="(a)"></a>(a)</h4><p><img src="https://i.loli.net/2020/10/17/SnEfGtZlKbCuqNy.jpg"></p><h4 id="b"><a href="#b" class="headerlink" title="(b)"></a>(b)</h4><p><img src="https://i.loli.net/2020/10/17/lGEQYn8Hs6bkwO2.jpg"></p><h4 id="c"><a href="#c" class="headerlink" title="(c)"></a>(c)</h4><p><img src="https://i.loli.net/2020/10/17/TbuijE3yx94zmNC.jpg"></p><h4 id="d"><a href="#d" class="headerlink" title="(d)"></a>(d)</h4><p><img src="https://i.loli.net/2020/10/17/qB6wacyxR1UskZe.jpg"></p><h2 id="习题2-3"><a href="#习题2-3" class="headerlink" title="习题2.3"></a>习题2.3</h2><p><img src="https://i.loli.net/2020/11/02/MjxleIiHuPza2GA.png" alt="习题2.3"></p><h2 id="习题2-4"><a href="#习题2-4" class="headerlink" title="习题2.4"></a>习题2.4</h2><p><img src="https://i.loli.net/2020/11/02/PoslebBKV2dR6EC.png" alt="习题2.4"></p><h2 id="习题2-12"><a href="#习题2-12" class="headerlink" title="习题2.12"></a>习题2.12</h2><p><img src="https://i.loli.net/2020/11/02/Ngyh3IHLczp1uMf.png" alt="习题2.12"></p><p><img src="https://i.loli.net/2020/11/02/rtSsRF4G8hvYipE.png" alt="习题2.12"></p><h2 id="习题2-13"><a href="#习题2-13" class="headerlink" title="习题2.13"></a>习题2.13</h2><p><img src="https://i.loli.net/2020/11/02/KqMtJ3IZDTYdP95.png" alt="习题2.13"></p><blockquote><p>[]如果答案有误，请联系qq<code>1031364436</code>  电话☎️<code>18720328626</code></p></blockquote><h4 id><a href="#" class="headerlink" title></a></h4>]]></content>
      
      
      <categories>
          
          <category> 编译原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大三 </tag>
            
            <tag> 知识总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pageHelp的pageSize属性不生效解决方案</title>
      <link href="posts/67076c8d/"/>
      <url>posts/67076c8d/</url>
      
        <content type="html"><![CDATA[<h1 id="踩坑记录：pageHelp的pageSize属性不生效解决方案"><a href="#踩坑记录：pageHelp的pageSize属性不生效解决方案" class="headerlink" title="踩坑记录：pageHelp的pageSize属性不生效解决方案"></a>踩坑记录：pageHelp的pageSize属性不生效解决方案</h1><h3 id="开发环境："><a href="#开发环境：" class="headerlink" title="开发环境："></a>开发环境：</h3><p>当前环境说明：<br>开发工具：idea2019.2 Mac 11.0<br>框架：springboot、mybatis<br>功能：采用springboot整合mybatis实现对查询到的数据进行分页显示</p><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>pagesize属性不生效</p><pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">public</span> String <span class="token function">listCategory</span><span class="token punctuation">(</span>Model m <span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"start"</span><span class="token punctuation">,</span>defaultValue <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">)</span><span class="token keyword">int</span> start<span class="token punctuation">,</span>                               <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"size"</span><span class="token punctuation">,</span>defaultValue <span class="token operator">=</span> <span class="token string">"5"</span><span class="token punctuation">)</span><span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception<span class="token punctuation">{</span>        PageHelper<span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>size<span class="token punctuation">,</span><span class="token string">"id desc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>User<span class="token operator">></span> cs <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">queryAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        PageInfo<span class="token operator">&lt;</span>User<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>cs<span class="token punctuation">)</span><span class="token punctuation">;</span>        m<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"page"</span><span class="token punctuation">,</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"list"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>size=5</code> 按效果数据每页会显示5条数据</p><img src="https://i.loli.net/2020/10/12/J6tE3xib45lNpA9.png" alt="分页没有生效" style="zoom: 50%;"><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>打开pom.xml文件</p><p>修改当前pagehelper的版本</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>pagehelper<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>pagehelper<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">5.2</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>5.2.0</code> 最新版本，分页不生效</p><p>换成<code>4.1.6</code> 即可</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>pagehelper<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>pagehelper<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">4.1</span><span class="token punctuation">.</span><span class="token number">6</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="验证结果："><a href="#验证结果：" class="headerlink" title="验证结果："></a>验证结果：</h3><p><img src="https://i.loli.net/2020/10/12/RuzMyhqnlW9Trbm.png" alt="正确结果"></p><h3 id="小总结："><a href="#小总结：" class="headerlink" title="小总结："></a>小总结：</h3><p>一定要注意依赖的版本之间的对应关系！</p>]]></content>
      
      
      <categories>
          
          <category> Bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑记录 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven配置阿里云镜像</title>
      <link href="posts/ab0eb54f/"/>
      <url>posts/ab0eb54f/</url>
      
        <content type="html"><![CDATA[<h1 id="maven配置阿里云镜像"><a href="#maven配置阿里云镜像" class="headerlink" title="maven配置阿里云镜像"></a>maven配置阿里云镜像</h1><h3 id="1-修改setting-xml文件"><a href="#1-修改setting-xml文件" class="headerlink" title="1.修改setting.xml文件"></a>1.修改setting.xml文件</h3><p><img src="https://i.loli.net/2020/10/10/Ev4brcCtsiV9URG.png"></p><p>文件在maven解压后的conf文件夹中</p><h3 id="2-在mirrors标签中加入代码"><a href="#2-在mirrors标签中加入代码" class="headerlink" title="2.在mirrors标签中加入代码"></a>2.在mirrors标签中加入代码</h3><pre><code>  &lt;mirror&gt;    &lt;id&gt;alimaven&lt;/id&gt;    &lt;name&gt;aliyun maven&lt;/name&gt;    &lt;url&gt;https://maven.aliyun.com/repository/central/&lt;/url&gt;    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;  &lt;mirror&gt;</code></pre><p><img src="https://i.loli.net/2020/10/10/Wvoxesyi9MP7f5h.png"></p><p>保存退出</p><h3 id="3-在idea中修改配置"><a href="#3-在idea中修改配置" class="headerlink" title="3.在idea中修改配置"></a>3.在idea中修改配置</h3><p>1.点击IntelliJ IDEA 选择 Prefernces</p><p><img src="https://i.loli.net/2020/10/10/su5MGtedoPcybSp.png"></p><p>2.Maven home directory 中选择你解压maven文件的路径</p><p>   User settings file 选择 maven文件夹中conf文件下的settings.xml</p>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置教程 </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac配置Maven</title>
      <link href="posts/87df3aae/"/>
      <url>posts/87df3aae/</url>
      
        <content type="html"><![CDATA[<h1 id="mac配置Maven"><a href="#mac配置Maven" class="headerlink" title="mac配置Maven"></a>mac配置Maven</h1><h3 id="1-下载Maven"><a href="#1-下载Maven" class="headerlink" title="1.下载Maven"></a>1.下载Maven</h3><p><a href="https://maven.apache.org/download.cgi#previous-releases" target="_blank" rel="noopener">https://maven.apache.org/download.cgi#previous-releases</a></p><p><img src="https://i.loli.net/2020/10/10/hoeBp35WAyNaE4P.png"></p><p>下载后，解压到自己喜欢放的位置，我放在了文稿里头。</p><p><img src="https://i.loli.net/2020/10/10/PSuoU4K2kXF178H.png"></p><h3 id="2-编辑终端的配置文件"><a href="#2-编辑终端的配置文件" class="headerlink" title="2.编辑终端的配置文件"></a>2.编辑终端的配置文件</h3><pre class="line-numbers language-java"><code class="language-java">vim <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/10/10/hp3QcqRK9rlSbLY.png"></p><p>选择E</p><p>然后添加如下代码：</p><pre class="line-numbers language-export"><code class="language-export">export M2_HOME=/Users/sunyun/Documents/apache-maven-3.6.3export PATH=$PATH:$M2_HOME/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>/Users/sunyun/Documents/apache-maven-3.6.3</code>换成你自己刚刚解压放的路径</p><p><img src="https://i.loli.net/2020/10/10/RQE5LqWPJm4vOzI.png"></p><h3 id="3-保存文件，执行命令使之生效"><a href="#3-保存文件，执行命令使之生效" class="headerlink" title="3.保存文件，执行命令使之生效"></a>3.保存文件，执行命令使之生效</h3><pre><code>source ~/.bash_profile</code></pre><h3 id="4-验证是否配置成功"><a href="#4-验证是否配置成功" class="headerlink" title="4.验证是否配置成功"></a>4.验证是否配置成功</h3><p>终端输入：</p><pre><code>mvn -v</code></pre><p><img src="https://i.loli.net/2020/10/10/jtSVhIAZN4Tb7d1.png"></p><p>出现以上的图片就说明配置成功！</p>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置教程 </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 hexo d 发布 git not found.md</title>
      <link href="posts/afdd5881/"/>
      <url>posts/afdd5881/</url>
      
        <content type="html"><![CDATA[<h2 id="hexo-d"><a href="#hexo-d" class="headerlink" title="$ hexo d"></a>$ hexo d</h2><h2 id="ERROR-Deployer-not-found-git"><a href="#ERROR-Deployer-not-found-git" class="headerlink" title="ERROR Deployer not found: git"></a>ERROR Deployer not found: git</h2><p><img src="https://i.loli.net/2020/10/07/Uvl2BdoCEst5gjf.png" alt="hexo d 报错"></p><p><code>npm install -- save hexo-deployer-git</code></p><p><img src="https://i.loli.net/2020/10/07/XVSMwjoNl6C8RQD.png" alt="解决方法"></p>]]></content>
      
      
      <categories>
          
          <category> Bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑记录 </tag>
            
            <tag> hexo-bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译原理复习总结</title>
      <link href="posts/beaba0a3/"/>
      <url>posts/beaba0a3/</url>
      
        <content type="html"><![CDATA[<h2 id="一、编译器概述"><a href="#一、编译器概述" class="headerlink" title="一、编译器概述"></a>一、编译器概述</h2><h3 id="1、名词解释"><a href="#1、名词解释" class="headerlink" title="1、名词解释"></a>1、名词解释</h3><p>1.1解释下列名词</p><p>源语言：被翻译器翻译的语言，用于书写源程序的语言。<br>目标语言：被翻译器翻译之后得到的语言，用于书写目标程序的语言<br>翻译器：能够完成从一种语言到另一种语言的变换的软件<br>编译器：一种特殊的翻译器，要求目标语言比源语言低级<br>解释器：解释器是不同于编译器的另一种语言处理器。解释器不像编译器那样通过翻译来生成目标程序，而是直接执行源程序所指定的运算。</p><h3 id="2、编译阶段"><a href="#2、编译阶段" class="headerlink" title="2、编译阶段"></a>2、编译阶段</h3><p>1.2典型的编译器可以划分成几个主要的逻辑阶段？各阶段的主要功能是什么？<br>典型的编译器可以划分成七个主要的逻辑阶段，分别是<strong>词法分析器、语法分析器、语义分析器、中间代码生成器、独立于机器的代码优化器、代码生成器、依赖于机器的代码优化器</strong>。各阶段的主要功能：</p><p>（1）词法分析器：词法分析阅读构成源程序的字符流，按编程语言的词法规则把它们组成词法记号流。</p><p>（2）语法分析器：按编程语言的语法规则检查词法分析输出的记号流是否符合这些规则，并依据这些规则所体现出的该语言的各种语言构造的层次性，用各记号的第一元建成一种树形的中间表示，这个中间表示用抽象语法的方式描绘了该记号流的语法情况。</p><p>（3）语义分析器：使用语法树和符号表中的信息，依据语言定义来检查源程序的语义一致性，以保证程序各部分能有意义地结合在一起。它还收集类型信息，把它们保存在符号表或语法树中。</p><p>（4）中间代码生成器:为源程序产生更低级的显示中间表示，可以认为这种中间表示是一种抽象机的程序。</p><p>（5）独立于机器的代码优化器：试图改进中间代码，以便产生较好的目标代码。通常，较好是指执行较快，但也可能是其他目标，如目标代码较短或目标代码执行时能耗较低。</p><p>（6）代码生成器：取源程序的一种中间表示作为输入并把它映射到一种目标语言。如果目标语言是机器代码，则需要为源程序所用的变量选择寄存器或内存单元，然后把中间指令序列翻译为完成同样任务的机器指令序列。</p><p>（7）依赖于机器的代码优化器：试图改进目标机器代码，以便产生较好的目标机器代码。</p><p><img src="https://i.loli.net/2020/10/07/MnPfJIyd5gHk9O7.jpg" alt="编译的各个阶段"></p><h3 id="3、有限自动机"><a href="#3、有限自动机" class="headerlink" title="3、有限自动机"></a>3、有限自动机</h3><p>有限怎么理解？</p><p>DFA和NAF区别？</p><h2 id="二、词法分析"><a href="#二、词法分析" class="headerlink" title="二、词法分析"></a>二、词法分析</h2><h3 id="1、正规式"><a href="#1、正规式" class="headerlink" title="1、正规式"></a>1、正规式</h3><p><img src="https://i.loli.net/2020/10/07/i5GdvVDb7n3QTug.jpg"></p><h4 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h4><p><img src="https://i.loli.net/2020/10/07/4ayfoIJP2KhFvmV.png"></p><h4 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h4><p><img src="https://i.loli.net/2020/10/07/TxoV4HmzGUBrPeQ.jpg"></p><p>至少含有一个1，因而需要正闭包1+，在出现1后面就会对其后是1还是0选择状态，如果是1，则停留在q2状态上，如果是0进入q3状态。在q3状态上，如果选择0进入q2状态，则实现了1后面两个0，如果是选择1进行q2状态，后面没有0，同样也是符合1后面偶数个0的，这样q2与q3本质是一种等价状态</p><p><img src="https://i.loli.net/2020/10/07/L3GJwuRWPe4692p.jpg"></p><h4 id="例3"><a href="#例3" class="headerlink" title="例3"></a>例3</h4><p><img src="https://i.loli.net/2020/10/07/eGdDkVhPj9Wt2o7.jpg"></p><p>换个意思理解，<strong>就是任何一个1后面都有偶数个0</strong></p><h4 id="例4"><a href="#例4" class="headerlink" title="例4"></a>例4</h4><p><img src="https://i.loli.net/2020/10/07/7oZyRakN6su4Czr.jpg"></p><p>解释：对于L来说描述的语言意思是0的个数是偶数并且1的个数是偶数，原因在于11、00必然是0偶1偶，而01、10要至少出现两次无论是0101,1010,0110,1001都能保证0偶1偶</p><p>对于L1</p><p>对于L2</p><p>对于L3</p><p>L2的另外一种表达形式</p><p><img src="https://i.loli.net/2020/10/07/Wx2rtOjsHJfG8d3.jpg"></p><h4 id="习题2-3"><a href="#习题2-3" class="headerlink" title="习题2.3"></a>习题2.3</h4><p>叙述下列正规式描述的语言</p><p>a) 0(0|1)<em>0<br>b) ((ε|0)1</em>)*<br>c) (0|1)<em>0(0|1)(0|1)<br>d) 0</em>10<em>10</em>10*<br>e) (00|11)<em>((01|10)(00|11)</em>(01|10)(00|11)<em>)</em></p><p>答案：<br>a)以0开始和结尾，而且长度大于等于2的0、1串<br>b)所有0,1串（含空串）<br>c)倒数第三位是0的0、1串<br>d) 仅含3个1的0、1串<br>e) 偶数个0和偶数个1的0、1串（含空串）</p><h3 id="2、有限自动机"><a href="#2、有限自动机" class="headerlink" title="2、有限自动机"></a>2、有限自动机</h3><p>NFA：不确定的有限自动机</p><p><img src="https://i.loli.net/2020/10/07/2Lkxh1Gat6peKRX.jpg"></p><p><img src="https://i.loli.net/2020/10/07/63xP9DJZMLC7GwS.jpg"></p><p>DFA：确定的有限自动机</p><p><img src="https://i.loli.net/2020/10/07/hcPH9qt63KQ71Ez.jpg"></p><h4 id="例1-1"><a href="#例1-1" class="headerlink" title="例1"></a>例1</h4><p><img src="https://i.loli.net/2020/10/07/lXCYcbJHoVLN1EP.jpg"></p><h4 id="例2-1"><a href="#例2-1" class="headerlink" title="例2"></a>例2</h4><p><img src="https://i.loli.net/2020/10/07/9Gqcsx3v4uNiO87.jpg"></p><p>还能表示的正规式是*<em>(b\</em>a+b)+**</p><p><strong>例题3</strong></p><p><img src="https://i.loli.net/2020/10/07/tp83CvyOWdzFRe4.jpg"></p><p><strong>例题4</strong></p><p><img src="https://i.loli.net/2020/10/07/cRArfuYDxCjd4KX.jpg"></p><h4 id="习题2-7"><a href="#习题2-7" class="headerlink" title="习题2.7"></a>习题2.7</h4><p>用算法2.4为下列正规式构造非确定的有限自动机，给出它们处理输入串ababbab的转换序列。<br>a) (a|b)*<br>b) (a*|b*)*<br>c)（（ε|a）b<em>）</em><br>d)(a|b)<em>abb(a|b)</em></p><p>答案：</p><p>a) (a|b)*</p><p><img src="https://i.loli.net/2020/10/12/6RiJeBmNOlvr2cM.png"></p><p>输入串ababbab 的转换序列：<br>0 1236 1456 1236 1456 1456 1236 14567</p><p>b) (a*|b*)*</p><p><img src="https://i.loli.net/2020/10/12/vUNf7stBg5X2hAE.png"></p><p>输入串ababbab 的转换序列：<br>0 1234510 1678910 1234510 167878910 12345610 167891011</p><p>c) ((ε|a)b*)*</p><p><img src="https://i.loli.net/2020/10/12/nfDp5F6PbMYNWe9.png"></p><p>输入串ababbab 的转换序列：<br>0 1456789 145678 789 1456789 10</p><p>D)（a|b)<em>abb(a|b)</em></p><p>NAF:</p><p><img src="https://i.loli.net/2020/10/12/lXaOgyNG2mDeMqh.png"></p><p>输入串ababbab 的转换序列：<br>0 1236 1456 789 10 11 12 13 16 11 14 15 16 17</p>]]></content>
      
      
      <categories>
          
          <category> 编译原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大三 </tag>
            
            <tag> 知识总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="posts/d0edc1ed/"/>
      <url>posts/d0edc1ed/</url>
      
        <content type="html"><![CDATA[<h2 id="1-1-linux常用命令"><a href="#1-1-linux常用命令" class="headerlink" title="1.1-linux常用命令"></a>1.1-linux常用命令</h2><ol><li>root用户切换 <code>sudo su</code></li><li>显示当前文件路径 <code>pwd</code></li><li>显示当前目录内容 <code>ls</code> 显示隐藏文件<code>ls -a</code> 显示文件属性<code>ls -l</code> <code>ls -la</code></li><li>前往文件目录 <code>cd</code>  上一级目录 <code>cd ..</code> 当前目录 <code>cd .</code></li></ol><h2 id="1-2-操作文件命令"><a href="#1-2-操作文件命令" class="headerlink" title="1.2-操作文件命令"></a>1.2-操作文件命令</h2><ol><li><p><code>touch</code> 创建空文件</p></li><li><p><code>mkdir</code> 创建目录</p><p><code>-p</code> 父目录不存在的情况下先创建父目录</p></li><li><p><code>cp</code> 复制文件或目录</p><p><code>-r </code>递归处理</p></li><li><p><code>mv</code> 移动文件或目录、文件或目录改名</p><p> 文件改名 —&gt;  <code>mv  文件名   新文件名 </code></p><p> 文件移动—&gt;   <code>mv 文件名   目录名</code></p><p> 目录改名—&gt;  <code>mv 目录名   不存在的目录名</code></p><p> 目录移动—&gt; <code> mv  目录名  存在的目录名</code></p></li><li><p><code>rm</code> 删除文件</p><p><code>-r</code> 同时删除该目录下的所有文件</p><p><code>-f</code> 强制删除文件或者目录</p></li><li><p><code>rmdir</code> 删除空目录</p></li><li><p><code>cat</code> 显示文本内容</p></li><li><p><code>more</code> <code>less</code> 分页显示文本内容</p></li><li><p><code>head</code> <code>tail</code> 查看文本的开头或者结尾的文本内容</p><p>​    <code>head -n 5 a.log</code> 查看a.log的前5行内容</p></li><li><p><code>tail -f b.log</code> 循环读取</p></li><li><p><code>echo</code> 输出命令</p><p><code>echo hello world!</code>  屏幕输出</p><p><code>echo hello world!  &gt;&gt; a.txt</code> 内容输入到文件中</p></li></ol><h3 id="1-3-网络相关命令"><a href="#1-3-网络相关命令" class="headerlink" title="1.3-网络相关命令"></a>1.3-网络相关命令</h3><ol><li><p><code>ip addr</code> 查看ip地址</p></li><li><p><code>ifconfig</code> 查看网络信息 </p></li><li><p><code>ping</code> 测试网络连通性</p><p><code>ping https://www.baidu.com </code></p></li></ol><h3 id="1-4-tar命令"><a href="#1-4-tar命令" class="headerlink" title="1.4-tar命令"></a>1.4-tar命令</h3><ol><li><p><code>tar</code> </p><p><code>-c</code> 建立一个压缩文件</p><p><code>-x</code> 解开一个压缩文件</p><p><code>-z</code> 是否用 gzip压缩</p><p><code>-v</code> 压缩过程显示文件名</p><p><code>-f</code> 使用档名，在f后要立即接档名</p></li><li><p>通常使用的组合</p><p><code>tar -cvf  a.tar file1.txt file2.txt</code> 将file1和file2打包成a.tar</p><p><code>tar -zcvf  a.tar file1.txt file2.txt</code> </p><p><code>tar -zxvf  a.tar file1.txt file2.txt</code> 将 a.tar解压</p></li></ol><h3 id="1-5-systemctl服务命令"><a href="#1-5-systemctl服务命令" class="headerlink" title="1.5-systemctl服务命令"></a>1.5-systemctl服务命令</h3><ol><li><p><code>systemctl</code></p><p><code>systemctl status|start|stop|restart 服务名 mysql  firewalld(防火墙)  network(网络)</code></p><p><code>systemctl status|start|stop|restart 服务名</code> 查看服务状态｜启动｜停止｜重启</p></li></ol><h3 id="1-6-进程相关命令"><a href="#1-6-进程相关命令" class="headerlink" title="1.6-进程相关命令"></a>1.6-进程相关命令</h3><ol><li><p><code>ps</code> 查询当前在控制台上运行的进程</p><p><code>ps -aux</code>  参数a是所有进程，参数x包括不占用控制台的进程，参数u显示用户</p><p><code>ps -ef</code>  查询显示所有进程，包括后台进程，而且可以显示出每个进程的父进程号</p></li><li><p><code>top</code> 动态显示进程</p></li><li><p><code>kill</code> 杀死进程</p><p><code>kill  -9 8888</code>  -9表示强制杀死 8888号进程</p></li></ol><h3 id="1-7-权限相关命令"><a href="#1-7-权限相关命令" class="headerlink" title="1.7-权限相关命令"></a>1.7-权限相关命令</h3><ol><li><p><code>chmod</code> </p><p>all = user + group + other</p><p><code>chmod u+rwx, g+rwx ,o+rwx 文件</code></p><p><code>chmod a+rwx 文件</code> </p><p><code>+</code> 增加权限</p><p><code>-</code> 撤销权限</p><p><code>=</code> 设定权限</p><p><code>r</code> read可以读取，对于一个目录，如果没有r权限，那就不能通过ls查看这个目录的内容</p><p><code>w</code> write可以写入，对于一个目录，如果没有x权限，那就不能在该目录下创建新的文件</p><p><code>x</code> excute可以执行，对于一个目录，如果没有x权限，那就不能通过cd进入这个目录</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
